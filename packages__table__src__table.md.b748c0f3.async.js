(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[15],{HVN5:function(n,e,t){"use strict";t("0Owb"),t("q1tI"),t("mlvz")},OGKa:function(n,e,t){},T158:function(n,e,t){"use strict";t.r(e);var a=t("q1tI"),r=t.n(a),l=t("dEAq"),o=(t("TN5+"),t("HVN5"),t("tP8H"),t("0zqC")),i=t("ZpkN");const s=t("JjdP").default["src-table"].component,c=t("JjdP").default["src-table-1"].component,d=t("JjdP").default["src-table-2"].component,u=t("JjdP").default["src-table-3"].component,m=t("JjdP").default["src-table-4"].component,p=t("JjdP").default["src-table-5"].component,g=t("JjdP").default["src-table-6"].component,h=t("JjdP").default["src-table-7"].component,f=t("JjdP").default["src-table-8"].component,b=t("JjdP").default["src-table-9"].component,E=t("JjdP").default["src-table-10"].component,y=t("JjdP").default["src-table-11"].component,x=t("JjdP").default["src-table-12"].component,k=t("JjdP").default["src-table-13"].component,T=t("JjdP").default["src-table-14"].component,v=t("JjdP").default["src-table-15"].component,w=t("JjdP").default["src-table-16"].component,I=t("JjdP").default["src-table-17"].component,S=t("JjdP").default["src-table-18"].component,P=t("JjdP").default["src-table-19"].component,M=t("JjdP").default["src-table-20"].component,_=t("JjdP").default["src-table-21"].component,L=t("JjdP").default["src-table-22"].component,D=t("JjdP").default["src-table-23"].component,R=t("JjdP").default["src-table-24"].component,B=t("JjdP").default["src-table-25"].component,A=t("JjdP").default["src-table-26"].component,C=t("JjdP").default["src-table-27"].component;e["default"]=function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(r.a.Fragment,null,r.a.createElement("div",{className:"markdown"},r.a.createElement("h1",{id:"protable---\u9ad8\u7ea7\u8868\u683c"},r.a.createElement(l["AnchorLink"],{to:"#protable---\u9ad8\u7ea7\u8868\u683c","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"ProTable - \u9ad8\u7ea7\u8868\u683c"),r.a.createElement("h2",{id:"\u4f55\u65f6\u4f7f\u7528"},r.a.createElement(l["AnchorLink"],{to:"#\u4f55\u65f6\u4f7f\u7528","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"\u4f55\u65f6\u4f7f\u7528"),r.a.createElement("p",null,"ProTable \u7684\u8bde\u751f\u662f\u4e3a\u4e86\u89e3\u51b3\u9879\u76ee\u4e2d\u9700\u8981\u5199\u5f88\u591a table \u7684\u6837\u677f\u4ee3\u7801\u7684\u95ee\u9898\uff0c\u6240\u4ee5\u5728\u5176\u4e2d\u505a\u4e86\u5c01\u88c5\u4e86\u5f88\u591a\u5e38\u7528\u7684\u903b\u8f91\u3002\u8fd9\u4e9b\u5c01\u88c5\u53ef\u4ee5\u7b80\u5355\u7684\u5206\u7c7b\u4e3a\u9884\u8bbe\u884c\u4e3a\u4e0e\u9884\u8bbe\u903b\u8f91\u3002"),r.a.createElement("h2",{id:"\u4ee3\u7801\u6f14\u793a"},r.a.createElement(l["AnchorLink"],{to:"#\u4ee3\u7801\u6f14\u793a","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"\u4ee3\u7801\u6f14\u793a"),r.a.createElement("h3",{id:"\u67e5\u8be2\u8868\u683c"},r.a.createElement(l["AnchorLink"],{to:"#\u67e5\u8be2\u8868\u683c","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"\u67e5\u8be2\u8868\u683c")),r.a.createElement(o["default"],{sources:{_:{jsx:"import React, { useRef } from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Button, Tag, Space } from 'antd';\nimport ProTable, { TableDropdown } from '@ant-design/pro-table';\nimport request from 'umi-request';\n\nconst columns = [\n  {\n    title: '\u5e8f\u53f7',\n    dataIndex: 'index',\n    valueType: 'indexBorder',\n    width: 72,\n  },\n  {\n    title: '\u6807\u9898',\n    dataIndex: 'title',\n    copyable: true,\n    ellipsis: true,\n    tip: '\u6807\u9898\u8fc7\u957f\u4f1a\u81ea\u52a8\u6536\u7f29',\n    formItemProps: {\n      rules: [\n        {\n          required: true,\n          message: '\u6b64\u9879\u4e3a\u5fc5\u586b\u9879',\n        },\n      ],\n    },\n    width: '30%',\n    hideInSearch: true,\n  },\n  {\n    title: '\u72b6\u6001',\n    dataIndex: 'state',\n    initialValue: 'all',\n    filters: true,\n    valueEnum: {\n      all: {\n        text: '\u5168\u90e8',\n        status: 'Default',\n      },\n      open: {\n        text: '\u672a\u89e3\u51b3',\n        status: 'Error',\n      },\n      closed: {\n        text: '\u5df2\u89e3\u51b3',\n        status: 'Success',\n      },\n      processing: {\n        text: '\u89e3\u51b3\u4e2d',\n        status: 'Processing',\n      },\n    },\n    width: '10%',\n  },\n  {\n    title: '\u6807\u7b7e',\n    dataIndex: 'labels',\n    width: '10%',\n    render: (_, row) => (\n      <Space>\n        {row.labels.map(({ name, id, color }) => (\n          <Tag color={color} key={id}>\n            {name}\n          </Tag>\n        ))}\n      </Space>\n    ),\n  },\n  {\n    title: '\u521b\u5efa\u65f6\u95f4',\n    key: 'since',\n    dataIndex: 'created_at',\n    valueType: 'dateTime',\n    width: '20%',\n  },\n  {\n    title: '\u64cd\u4f5c',\n    valueType: 'option',\n    render: (text, row, _, action) => [\n      <a href={row.html_url} target=\"_blank\" rel=\"noopener noreferrer\" key=\"link\">\n        \u94fe\u8def\n      </a>,\n      <a href={row.html_url} target=\"_blank\" rel=\"noopener noreferrer\" key=\"warning\">\n        \u62a5\u8b66\n      </a>,\n      <a href={row.html_url} target=\"_blank\" rel=\"noopener noreferrer\" key=\"view\">\n        \u67e5\u770b\n      </a>,\n      <TableDropdown\n        key=\"actionGroup\"\n        onSelect={() => action.reload()}\n        menus={[\n          {\n            key: 'copy',\n            name: '\u590d\u5236',\n          },\n          {\n            key: 'delete',\n            name: '\u5220\u9664',\n          },\n        ]}\n      />,\n    ],\n  },\n];\nexport default () => {\n  const actionRef = useRef();\n  return (\n    <ProTable\n      columns={columns}\n      pagination={{\n        showQuickJumper: true,\n      }}\n      actionRef={actionRef}\n      request={async (params = {}) =>\n        request('https://proapi.azurewebsites.net/github/issues', {\n          params,\n        })\n      }\n      rowKey=\"id\"\n      dateFormatter=\"string\"\n      headerTitle=\"\u9ad8\u7ea7\u8868\u683c\"\n      toolBarRender={() => [\n        <Button key=\"3\" type=\"primary\">\n          <PlusOutlined />\n          \u65b0\u5efa\n        </Button>,\n      ]}\n    />\n  );\n};\n",tsx:"import React, { useRef } from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Button, Tag, Space } from 'antd';\nimport ProTable, { ProColumns, TableDropdown, ActionType } from '@ant-design/pro-table';\nimport request from 'umi-request';\n\ninterface GithubIssueItem {\n  url: string;\n  repository_url: string;\n  labels_url: string;\n  comments_url: string;\n  events_url: string;\n  html_url: string;\n  id: number;\n  node_id: string;\n  number: number;\n  title: string;\n  user: User;\n  labels: Label[];\n  state: string;\n  locked: boolean;\n  assignee?: any;\n  assignees: any[];\n  milestone?: any;\n  comments: number;\n  created_at: string;\n  updated_at: string;\n  closed_at?: any;\n  author_association: string;\n  body: string;\n}\n\ninterface Label {\n  id: number;\n  node_id: string;\n  url: string;\n  name: string;\n  color: string;\n  default: boolean;\n  description: string;\n}\n\ninterface User {\n  login: string;\n  id: number;\n  node_id: string;\n  avatar_url: string;\n  gravatar_id: string;\n  url: string;\n  html_url: string;\n  followers_url: string;\n  following_url: string;\n  gists_url: string;\n  starred_url: string;\n  subscriptions_url: string;\n  organizations_url: string;\n  repos_url: string;\n  events_url: string;\n  received_events_url: string;\n  type: string;\n  site_admin: boolean;\n}\n\nconst columns: ProColumns<GithubIssueItem>[] = [\n  {\n    title: '\u5e8f\u53f7',\n    dataIndex: 'index',\n    valueType: 'indexBorder',\n    width: 72,\n  },\n  {\n    title: '\u6807\u9898',\n    dataIndex: 'title',\n    copyable: true,\n    ellipsis: true,\n    tip: '\u6807\u9898\u8fc7\u957f\u4f1a\u81ea\u52a8\u6536\u7f29',\n    formItemProps: {\n      rules: [\n        {\n          required: true,\n          message: '\u6b64\u9879\u4e3a\u5fc5\u586b\u9879',\n        },\n      ],\n    },\n    width: '30%',\n    hideInSearch: true,\n  },\n  {\n    title: '\u72b6\u6001',\n    dataIndex: 'state',\n    initialValue: 'all',\n    filters: true,\n    valueEnum: {\n      all: { text: '\u5168\u90e8', status: 'Default' },\n      open: {\n        text: '\u672a\u89e3\u51b3',\n        status: 'Error',\n      },\n      closed: {\n        text: '\u5df2\u89e3\u51b3',\n        status: 'Success',\n      },\n      processing: {\n        text: '\u89e3\u51b3\u4e2d',\n        status: 'Processing',\n      },\n    },\n    width: '10%',\n  },\n  {\n    title: '\u6807\u7b7e',\n    dataIndex: 'labels',\n    width: '10%',\n    render: (_, row) => (\n      <Space>\n        {row.labels.map(({ name, id, color }) => (\n          <Tag color={color} key={id}>\n            {name}\n          </Tag>\n        ))}\n      </Space>\n    ),\n  },\n  {\n    title: '\u521b\u5efa\u65f6\u95f4',\n    key: 'since',\n    dataIndex: 'created_at',\n    valueType: 'dateTime',\n    width: '20%',\n  },\n  {\n    title: '\u64cd\u4f5c',\n    valueType: 'option',\n    render: (text, row, _, action) => [\n      <a href={row.html_url} target=\"_blank\" rel=\"noopener noreferrer\" key=\"link\">\n        \u94fe\u8def\n      </a>,\n      <a href={row.html_url} target=\"_blank\" rel=\"noopener noreferrer\" key=\"warning\">\n        \u62a5\u8b66\n      </a>,\n      <a href={row.html_url} target=\"_blank\" rel=\"noopener noreferrer\" key=\"view\">\n        \u67e5\u770b\n      </a>,\n      <TableDropdown\n        key=\"actionGroup\"\n        onSelect={() => action.reload()}\n        menus={[\n          { key: 'copy', name: '\u590d\u5236' },\n          { key: 'delete', name: '\u5220\u9664' },\n        ]}\n      />,\n    ],\n  },\n];\n\nexport default () => {\n  const actionRef = useRef<ActionType>();\n\n  return (\n    <ProTable<GithubIssueItem>\n      columns={columns}\n      pagination={{\n        showQuickJumper: true,\n      }}\n      actionRef={actionRef}\n      request={async (params = {}) =>\n        request<{\n          data: GithubIssueItem[];\n        }>('https://proapi.azurewebsites.net/github/issues', {\n          params,\n        })\n      }\n      rowKey=\"id\"\n      dateFormatter=\"string\"\n      headerTitle=\"\u9ad8\u7ea7\u8868\u683c\"\n      toolBarRender={() => [\n        <Button key=\"3\" type=\"primary\">\n          <PlusOutlined />\n          \u65b0\u5efa\n        </Button>,\n      ]}\n    />\n  );\n};\n"}},dependencies:{react:{version:"16.13.1"},"react-dom":{version:">=16.9.0"},antd:{version:"4.6.6",css:"antd/dist/antd.css"},"@ant-design/icons":{version:"4.2.2"},"umi-request":{version:"1.3.5"}},background:"#f5f5f5",identifier:"src-table"},r.a.createElement(s,null)),r.a.createElement("div",{className:"markdown"},r.a.createElement("h3",{id:"\u666e\u901a\u8868\u683c"},r.a.createElement(l["AnchorLink"],{to:"#\u666e\u901a\u8868\u683c","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"\u666e\u901a\u8868\u683c")),r.a.createElement(o["default"],{sources:{_:{jsx:"import React from 'react';\nimport { Button, Tooltip } from 'antd';\nimport { DownOutlined, QuestionCircleOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport ProTable from '@ant-design/pro-table';\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\nconst tableListDataSource = [];\nconst creators = ['\u4ed8\u5c0f\u5c0f', '\u66f2\u4e3d\u4e3d', '\u6797\u4e1c\u4e1c', '\u9648\u5e05\u5e05', '\u517c\u67d0\u67d0'];\n\nfor (let i = 0; i < 5; i += 1) {\n  tableListDataSource.push({\n    key: i,\n    name: 'AppName',\n    containers: Math.floor(Math.random() * 20),\n    creator: creators[Math.floor(Math.random() * creators.length)],\n    status: valueEnum[Math.floor(Math.random() * 10) % 4],\n    createdAt: Date.now() - Math.floor(Math.random() * 100000),\n    memo: i % 2 === 1 ? '\u5f88\u957f\u5f88\u957f\u5f88\u957f\u5f88\u957f\u5f88\u957f\u5f88\u957f\u5f88\u957f\u7684\u6587\u5b57\u8981\u5c55\u793a\u4f46\u662f\u8981\u7559\u4e0b\u5c3e\u5df4' : '\u7b80\u77ed\u5907\u6ce8\u6587\u6848',\n  });\n}\n\nconst columns = [\n  {\n    title: '\u5e94\u7528\u540d\u79f0',\n    width: 80,\n    dataIndex: 'name',\n    render: _ => <a>{_}</a>,\n  },\n  {\n    title: '\u5bb9\u5668\u6570\u91cf',\n    dataIndex: 'containers',\n    align: 'right',\n    sorter: (a, b) => a.containers - b.containers,\n  },\n  {\n    title: '\u72b6\u6001',\n    width: 80,\n    dataIndex: 'status',\n    initialValue: 'all',\n    valueEnum: {\n      all: {\n        text: '\u5168\u90e8',\n        status: 'Default',\n      },\n      close: {\n        text: '\u5173\u95ed',\n        status: 'Default',\n      },\n      running: {\n        text: '\u8fd0\u884c\u4e2d',\n        status: 'Processing',\n      },\n      online: {\n        text: '\u5df2\u4e0a\u7ebf',\n        status: 'Success',\n      },\n      error: {\n        text: '\u5f02\u5e38',\n        status: 'Error',\n      },\n    },\n  },\n  {\n    title: '\u521b\u5efa\u8005',\n    width: 80,\n    dataIndex: 'creator',\n    valueEnum: {\n      all: {\n        text: '\u5168\u90e8',\n      },\n      \u4ed8\u5c0f\u5c0f: {\n        text: '\u4ed8\u5c0f\u5c0f',\n      },\n      \u66f2\u4e3d\u4e3d: {\n        text: '\u66f2\u4e3d\u4e3d',\n      },\n      \u6797\u4e1c\u4e1c: {\n        text: '\u6797\u4e1c\u4e1c',\n      },\n      \u9648\u5e05\u5e05: {\n        text: '\u9648\u5e05\u5e05',\n      },\n      \u517c\u67d0\u67d0: {\n        text: '\u517c\u67d0\u67d0',\n      },\n    },\n  },\n  {\n    title: (\n      <>\n        \u521b\u5efa\u65f6\u95f4\n        <Tooltip placement=\"top\" title=\"\u8fd9\u662f\u4e00\u6bb5\u63cf\u8ff0\">\n          <QuestionCircleOutlined\n            style={{\n              marginLeft: 4,\n            }}\n          />\n        </Tooltip>\n      </>\n    ),\n    width: 140,\n    key: 'since',\n    dataIndex: 'createdAt',\n    valueType: 'date',\n    sorter: (a, b) => a.createdAt - b.createdAt,\n  },\n  {\n    title: '\u5907\u6ce8',\n    dataIndex: 'memo',\n    ellipsis: true,\n    copyable: true,\n  },\n  {\n    title: '\u64cd\u4f5c',\n    width: 180,\n    key: 'option',\n    valueType: 'option',\n    render: () => [\n      <a key=\"link\">\u94fe\u8def</a>,\n      <a key=\"link2\">\u62a5\u8b66</a>,\n      <a key=\"link3\">\u76d1\u63a7</a>,\n      <a key=\"link4\">\n        <EllipsisOutlined />\n      </a>,\n    ],\n  },\n];\nexport default () => (\n  <ProTable\n    columns={columns}\n    request={(params, sorter, filter) => {\n      // \u8868\u5355\u641c\u7d22\u9879\u4f1a\u4ece params \u4f20\u5165\uff0c\u4f20\u9012\u7ed9\u540e\u7aef\u63a5\u53e3\u3002\n      console.log(params, sorter, filter);\n      return Promise.resolve({\n        data: tableListDataSource,\n        success: true,\n      });\n    }}\n    rowKey=\"key\"\n    pagination={{\n      showQuickJumper: true,\n    }}\n    search={false}\n    dateFormatter=\"string\"\n    headerTitle=\"\u8868\u683c\u6807\u9898\"\n    toolBarRender={() => [\n      <Button key=\"show\">\u67e5\u770b\u65e5\u5fd7</Button>,\n      <Button key=\"out\">\n        \u5bfc\u51fa\u6570\u636e\n        <DownOutlined />\n      </Button>,\n      <Button type=\"primary\" key=\"primary\">\n        \u521b\u5efa\u5e94\u7528\n      </Button>,\n    ]}\n  />\n);\n",tsx:"import React from 'react';\nimport { Button, Tooltip } from 'antd';\nimport { DownOutlined, QuestionCircleOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport ProTable, { ProColumns } from '@ant-design/pro-table';\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\n\nexport interface TableListItem {\n  key: number;\n  name: string;\n  containers: number;\n  creator: string;\n  status: string;\n  createdAt: number;\n  memo: string;\n}\nconst tableListDataSource: TableListItem[] = [];\n\nconst creators = ['\u4ed8\u5c0f\u5c0f', '\u66f2\u4e3d\u4e3d', '\u6797\u4e1c\u4e1c', '\u9648\u5e05\u5e05', '\u517c\u67d0\u67d0'];\n\nfor (let i = 0; i < 5; i += 1) {\n  tableListDataSource.push({\n    key: i,\n    name: 'AppName',\n    containers: Math.floor(Math.random() * 20),\n    creator: creators[Math.floor(Math.random() * creators.length)],\n    status: valueEnum[Math.floor(Math.random() * 10) % 4],\n    createdAt: Date.now() - Math.floor(Math.random() * 100000),\n    memo: i % 2 === 1 ? '\u5f88\u957f\u5f88\u957f\u5f88\u957f\u5f88\u957f\u5f88\u957f\u5f88\u957f\u5f88\u957f\u7684\u6587\u5b57\u8981\u5c55\u793a\u4f46\u662f\u8981\u7559\u4e0b\u5c3e\u5df4' : '\u7b80\u77ed\u5907\u6ce8\u6587\u6848',\n  });\n}\n\nconst columns: ProColumns<TableListItem>[] = [\n  {\n    title: '\u5e94\u7528\u540d\u79f0',\n    width: 80,\n    dataIndex: 'name',\n    render: (_) => <a>{_}</a>,\n  },\n  {\n    title: '\u5bb9\u5668\u6570\u91cf',\n    dataIndex: 'containers',\n    align: 'right',\n    sorter: (a, b) => a.containers - b.containers,\n  },\n  {\n    title: '\u72b6\u6001',\n    width: 80,\n    dataIndex: 'status',\n    initialValue: 'all',\n    valueEnum: {\n      all: { text: '\u5168\u90e8', status: 'Default' },\n      close: { text: '\u5173\u95ed', status: 'Default' },\n      running: { text: '\u8fd0\u884c\u4e2d', status: 'Processing' },\n      online: { text: '\u5df2\u4e0a\u7ebf', status: 'Success' },\n      error: { text: '\u5f02\u5e38', status: 'Error' },\n    },\n  },\n  {\n    title: '\u521b\u5efa\u8005',\n    width: 80,\n    dataIndex: 'creator',\n    valueEnum: {\n      all: { text: '\u5168\u90e8' },\n      \u4ed8\u5c0f\u5c0f: { text: '\u4ed8\u5c0f\u5c0f' },\n      \u66f2\u4e3d\u4e3d: { text: '\u66f2\u4e3d\u4e3d' },\n      \u6797\u4e1c\u4e1c: { text: '\u6797\u4e1c\u4e1c' },\n      \u9648\u5e05\u5e05: { text: '\u9648\u5e05\u5e05' },\n      \u517c\u67d0\u67d0: { text: '\u517c\u67d0\u67d0' },\n    },\n  },\n  {\n    title: (\n      <>\n        \u521b\u5efa\u65f6\u95f4\n        <Tooltip placement=\"top\" title=\"\u8fd9\u662f\u4e00\u6bb5\u63cf\u8ff0\">\n          <QuestionCircleOutlined style={{ marginLeft: 4 }} />\n        </Tooltip>\n      </>\n    ),\n    width: 140,\n    key: 'since',\n    dataIndex: 'createdAt',\n    valueType: 'date',\n    sorter: (a, b) => a.createdAt - b.createdAt,\n  },\n  {\n    title: '\u5907\u6ce8',\n    dataIndex: 'memo',\n    ellipsis: true,\n    copyable: true,\n  },\n  {\n    title: '\u64cd\u4f5c',\n    width: 180,\n    key: 'option',\n    valueType: 'option',\n    render: () => [\n      <a key=\"link\">\u94fe\u8def</a>,\n      <a key=\"link2\">\u62a5\u8b66</a>,\n      <a key=\"link3\">\u76d1\u63a7</a>,\n      <a key=\"link4\">\n        <EllipsisOutlined />\n      </a>,\n    ],\n  },\n];\n\nexport default () => {\n  return (\n    <ProTable<TableListItem>\n      columns={columns}\n      request={(params, sorter, filter) => {\n        // \u8868\u5355\u641c\u7d22\u9879\u4f1a\u4ece params \u4f20\u5165\uff0c\u4f20\u9012\u7ed9\u540e\u7aef\u63a5\u53e3\u3002\n        console.log(params, sorter, filter);\n        return Promise.resolve({\n          data: tableListDataSource,\n          success: true,\n        });\n      }}\n      rowKey=\"key\"\n      pagination={{\n        showQuickJumper: true,\n      }}\n      search={false}\n      dateFormatter=\"string\"\n      headerTitle=\"\u8868\u683c\u6807\u9898\"\n      toolBarRender={() => [\n        <Button key=\"show\">\u67e5\u770b\u65e5\u5fd7</Button>,\n        <Button key=\"out\">\n          \u5bfc\u51fa\u6570\u636e\n          <DownOutlined />\n        </Button>,\n        <Button type=\"primary\" key=\"primary\">\n          \u521b\u5efa\u5e94\u7528\n        </Button>,\n      ]}\n    />\n  );\n};\n"}},dependencies:{react:{version:"16.13.1"},"react-dom":{version:">=16.9.0"},antd:{version:"4.6.6",css:"antd/dist/antd.css"},"@ant-design/icons":{version:"4.2.2"}},background:"#f5f5f5",identifier:"src-table-1"},r.a.createElement(c,null)),r.a.createElement("div",{className:"markdown"},r.a.createElement("h3",{id:"\u8f7b\u91cf\u7b5b\u9009\u8868\u683c"},r.a.createElement(l["AnchorLink"],{to:"#\u8f7b\u91cf\u7b5b\u9009\u8868\u683c","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"\u8f7b\u91cf\u7b5b\u9009\u8868\u683c")),r.a.createElement(o["default"],{sources:{_:{jsx:"import React, { useRef } from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Button, Tag, Space } from 'antd';\nimport ProTable, { TableDropdown } from '@ant-design/pro-table';\nimport request from 'umi-request';\n\nconst columns = [\n  {\n    title: '\u5e8f\u53f7',\n    dataIndex: 'index',\n    valueType: 'indexBorder',\n    width: 72,\n  },\n  {\n    title: '\u6807\u9898',\n    dataIndex: 'title',\n    copyable: true,\n    ellipsis: true,\n    tip: '\u6807\u9898\u8fc7\u957f\u4f1a\u81ea\u52a8\u6536\u7f29',\n    formItemProps: {\n      rules: [\n        {\n          required: true,\n          message: '\u6b64\u9879\u4e3a\u5fc5\u586b\u9879',\n        },\n      ],\n    },\n    width: '30%',\n    hideInSearch: true,\n  },\n  {\n    title: '\u72b6\u6001',\n    dataIndex: 'state',\n    initialValue: 'all',\n    filters: true,\n    valueType: 'select',\n    valueEnum: {\n      all: {\n        text: '\u5168\u90e8',\n        status: 'Default',\n      },\n      open: {\n        text: '\u672a\u89e3\u51b3',\n        status: 'Error',\n      },\n      closed: {\n        text: '\u5df2\u89e3\u51b3',\n        status: 'Success',\n      },\n      processing: {\n        text: '\u89e3\u51b3\u4e2d',\n        status: 'Processing',\n      },\n    },\n    width: '10%',\n  },\n  {\n    title: '\u6807\u7b7e',\n    dataIndex: 'labels',\n    width: '10%',\n    render: (_, row) => (\n      <Space>\n        {row.labels.map(({ name, id, color }) => (\n          <Tag color={color} key={id}>\n            {name}\n          </Tag>\n        ))}\n      </Space>\n    ),\n  },\n  {\n    title: '\u521b\u5efa\u65f6\u95f4',\n    key: 'since',\n    dataIndex: 'created_at',\n    valueType: 'dateTime',\n    width: '20%',\n  },\n  {\n    title: '\u64cd\u4f5c',\n    valueType: 'option',\n    render: (text, row, _, action) => [\n      <a href={row.html_url} target=\"_blank\" rel=\"noopener noreferrer\" key=\"link\">\n        \u94fe\u8def\n      </a>,\n      <a href={row.html_url} target=\"_blank\" rel=\"noopener noreferrer\" key=\"warning\">\n        \u62a5\u8b66\n      </a>,\n      <a href={row.html_url} target=\"_blank\" rel=\"noopener noreferrer\" key=\"view\">\n        \u67e5\u770b\n      </a>,\n      <TableDropdown\n        key=\"actionGroup\"\n        onSelect={() => action.reload()}\n        menus={[\n          {\n            key: 'copy',\n            name: '\u590d\u5236',\n          },\n          {\n            key: 'delete',\n            name: '\u5220\u9664',\n          },\n        ]}\n      />,\n    ],\n  },\n];\nexport default () => {\n  const actionRef = useRef();\n  return (\n    <ProTable\n      columns={columns}\n      pagination={{\n        showQuickJumper: true,\n        pageSize: 5,\n      }}\n      actionRef={actionRef}\n      request={async (params = {}) =>\n        request('https://proapi.azurewebsites.net/github/issues', {\n          params,\n        })\n      }\n      search={{\n        filterType: 'light',\n      }}\n      rowKey=\"id\"\n      dateFormatter=\"string\"\n      headerTitle=\"\u8f7b\u91cf\u7b5b\u9009\u8868\u683c\"\n      toolBarRender={() => [\n        <Button key=\"3\" type=\"primary\">\n          <PlusOutlined />\n          \u65b0\u5efa\n        </Button>,\n      ]}\n    />\n  );\n};\n",tsx:"import React, { useRef } from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Button, Tag, Space } from 'antd';\nimport ProTable, { ProColumns, TableDropdown, ActionType } from '@ant-design/pro-table';\nimport request from 'umi-request';\n\ninterface GithubIssueItem {\n  url: string;\n  repository_url: string;\n  labels_url: string;\n  comments_url: string;\n  events_url: string;\n  html_url: string;\n  id: number;\n  node_id: string;\n  number: number;\n  title: string;\n  user: User;\n  labels: Label[];\n  state: string;\n  locked: boolean;\n  assignee?: any;\n  assignees: any[];\n  milestone?: any;\n  comments: number;\n  created_at: string;\n  updated_at: string;\n  closed_at?: any;\n  author_association: string;\n  body: string;\n}\n\ninterface Label {\n  id: number;\n  node_id: string;\n  url: string;\n  name: string;\n  color: string;\n  default: boolean;\n  description: string;\n}\n\ninterface User {\n  login: string;\n  id: number;\n  node_id: string;\n  avatar_url: string;\n  gravatar_id: string;\n  url: string;\n  html_url: string;\n  followers_url: string;\n  following_url: string;\n  gists_url: string;\n  starred_url: string;\n  subscriptions_url: string;\n  organizations_url: string;\n  repos_url: string;\n  events_url: string;\n  received_events_url: string;\n  type: string;\n  site_admin: boolean;\n}\n\nconst columns: ProColumns<GithubIssueItem>[] = [\n  {\n    title: '\u5e8f\u53f7',\n    dataIndex: 'index',\n    valueType: 'indexBorder',\n    width: 72,\n  },\n  {\n    title: '\u6807\u9898',\n    dataIndex: 'title',\n    copyable: true,\n    ellipsis: true,\n    tip: '\u6807\u9898\u8fc7\u957f\u4f1a\u81ea\u52a8\u6536\u7f29',\n    formItemProps: {\n      rules: [\n        {\n          required: true,\n          message: '\u6b64\u9879\u4e3a\u5fc5\u586b\u9879',\n        },\n      ],\n    },\n    width: '30%',\n    hideInSearch: true,\n  },\n  {\n    title: '\u72b6\u6001',\n    dataIndex: 'state',\n    initialValue: 'all',\n    filters: true,\n    valueType: 'select',\n    valueEnum: {\n      all: { text: '\u5168\u90e8', status: 'Default' },\n      open: {\n        text: '\u672a\u89e3\u51b3',\n        status: 'Error',\n      },\n      closed: {\n        text: '\u5df2\u89e3\u51b3',\n        status: 'Success',\n      },\n      processing: {\n        text: '\u89e3\u51b3\u4e2d',\n        status: 'Processing',\n      },\n    },\n    width: '10%',\n  },\n  {\n    title: '\u6807\u7b7e',\n    dataIndex: 'labels',\n    width: '10%',\n    render: (_, row) => (\n      <Space>\n        {row.labels.map(({ name, id, color }) => (\n          <Tag color={color} key={id}>\n            {name}\n          </Tag>\n        ))}\n      </Space>\n    ),\n  },\n  {\n    title: '\u521b\u5efa\u65f6\u95f4',\n    key: 'since',\n    dataIndex: 'created_at',\n    valueType: 'dateTime',\n    width: '20%',\n  },\n  {\n    title: '\u64cd\u4f5c',\n    valueType: 'option',\n    render: (text, row, _, action) => [\n      <a href={row.html_url} target=\"_blank\" rel=\"noopener noreferrer\" key=\"link\">\n        \u94fe\u8def\n      </a>,\n      <a href={row.html_url} target=\"_blank\" rel=\"noopener noreferrer\" key=\"warning\">\n        \u62a5\u8b66\n      </a>,\n      <a href={row.html_url} target=\"_blank\" rel=\"noopener noreferrer\" key=\"view\">\n        \u67e5\u770b\n      </a>,\n      <TableDropdown\n        key=\"actionGroup\"\n        onSelect={() => action.reload()}\n        menus={[\n          { key: 'copy', name: '\u590d\u5236' },\n          { key: 'delete', name: '\u5220\u9664' },\n        ]}\n      />,\n    ],\n  },\n];\n\nexport default () => {\n  const actionRef = useRef<ActionType>();\n\n  return (\n    <ProTable<GithubIssueItem>\n      columns={columns}\n      pagination={{\n        showQuickJumper: true,\n        pageSize: 5,\n      }}\n      actionRef={actionRef}\n      request={async (params = {}) =>\n        request<{\n          data: GithubIssueItem[];\n        }>('https://proapi.azurewebsites.net/github/issues', {\n          params,\n        })\n      }\n      search={{\n        filterType: 'light',\n      }}\n      rowKey=\"id\"\n      dateFormatter=\"string\"\n      headerTitle=\"\u8f7b\u91cf\u7b5b\u9009\u8868\u683c\"\n      toolBarRender={() => [\n        <Button key=\"3\" type=\"primary\">\n          <PlusOutlined />\n          \u65b0\u5efa\n        </Button>,\n      ]}\n    />\n  );\n};\n"}},dependencies:{react:{version:"16.13.1"},"react-dom":{version:">=16.9.0"},antd:{version:"4.6.6",css:"antd/dist/antd.css"},"@ant-design/icons":{version:"4.2.2"},"umi-request":{version:"1.3.5"}},background:"#f5f5f5",identifier:"src-table-2"},r.a.createElement(d,null)),r.a.createElement("div",{className:"markdown"},r.a.createElement("h3",{id:"\u65e0\u6807\u9898\u680f"},r.a.createElement(l["AnchorLink"],{to:"#\u65e0\u6807\u9898\u680f","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"\u65e0\u6807\u9898\u680f")),r.a.createElement(o["default"],{sources:{_:{jsx:"import { Popconfirm, Space } from 'antd';\nimport React from 'react';\nimport ProTable from '@ant-design/pro-table';\n\nconst RoleMap = {\n  admin: {\n    name: '\u7ba1\u7406\u5458',\n    desc: '\u4ec5\u62e5\u6709\u6307\u5b9a\u9879\u76ee\u7684\u6743\u9650',\n  },\n  operator: {\n    name: '\u64cd\u4f5c\u5458',\n    desc: '\u62e5\u6709\u6240\u6709\u6743\u9650',\n  },\n};\nconst tableListDataSource = [];\nconst realNames = ['\u9a6c\u5df4\u5df4', '\u6d4b\u8bd5', '\u6d4b\u8bd52', '\u6d4b\u8bd53'];\nconst nickNames = ['\u5df4\u5df4', '\u6d4b\u8bd5', '\u6d4b\u8bd52', '\u6d4b\u8bd53'];\nconst emails = ['baba@antfin.com', 'test@antfin.com', 'test2@antfin.com', 'test3@antfin.com'];\nconst phones = ['12345678910', '10923456789', '109654446789', '109223346789'];\nconst permissions = [[], ['\u6743\u9650\u70b9\u540d\u79f01', '\u6743\u9650\u70b9\u540d\u79f04'], ['\u6743\u9650\u70b9\u540d\u79f01'], []];\n\nfor (let i = 0; i < 5; i += 1) {\n  tableListDataSource.push({\n    outUserNo: `${102047 + i}`,\n    avatar: `//work.alibaba-inc.com/photo/${102047 + i}.32x32.jpg`,\n    role: i === 0 ? 'admin' : 'operator',\n    realName: realNames[i % 4],\n    nickName: nickNames[i % 4],\n    email: emails[i % 4],\n    phone: phones[i % 4],\n    permission: permissions[i % 4],\n  });\n}\n\nconst MemberList = () => {\n  const renderRemoveUser = text => (\n    <Popconfirm title={`\u786e\u8ba4${text}\u5417?`} okText=\"\u662f\" cancelText=\"\u5426\">\n      <a>{text}</a>\n    </Popconfirm>\n  );\n\n  const columns = [\n    {\n      dataIndex: 'avatar',\n      title: '\u6210\u5458\u540d\u79f0',\n      valueType: 'avatar',\n      width: 150,\n      render: (dom, record) => (\n        <Space>\n          <span>{dom}</span>\n          {record.nickName}\n        </Space>\n      ),\n    },\n    {\n      dataIndex: 'email',\n      title: '\u8d26\u53f7',\n    },\n    {\n      dataIndex: 'phone',\n      title: '\u624b\u673a\u53f7',\n    },\n    {\n      dataIndex: 'role',\n      title: '\u89d2\u8272',\n      render: (_, record) => RoleMap[record.role || 'admin'].name,\n    },\n    {\n      dataIndex: 'permission',\n      title: '\u6743\u9650\u8303\u56f4',\n      render: (_, record) => {\n        const { role, permission = [] } = record;\n\n        if (role === 'admin') {\n          return '\u6240\u6709\u6743\u9650';\n        }\n\n        return permission && permission.length > 0 ? permission.join('\u3001') : '\u65e0';\n      },\n    },\n    {\n      title: '\u64cd\u4f5c',\n      dataIndex: 'x',\n      render: (_, record) => {\n        let node = renderRemoveUser('\u9000\u51fa');\n\n        if (record.role === 'admin') {\n          node = renderRemoveUser('\u79fb\u9664');\n        }\n\n        return node;\n      },\n    },\n  ];\n  return (\n    <ProTable\n      columns={columns}\n      request={(params, sorter, filter) => {\n        // \u8868\u5355\u641c\u7d22\u9879\u4f1a\u4ece params \u4f20\u5165\uff0c\u4f20\u9012\u7ed9\u540e\u7aef\u63a5\u53e3\u3002\n        console.log(params, sorter, filter);\n        return Promise.resolve({\n          data: tableListDataSource,\n          success: true,\n        });\n      }}\n      rowKey=\"outUserNo\"\n      pagination={{\n        showQuickJumper: true,\n      }}\n      toolBarRender={false}\n      search={false}\n    />\n  );\n};\n\nexport default MemberList;\n",tsx:"import { Popconfirm, Space } from 'antd';\nimport React from 'react';\nimport ProTable, { ProColumns } from '@ant-design/pro-table';\n\nexport interface Member {\n  avatar: string;\n  realName: string;\n  nickName: string;\n  email: string;\n  outUserNo: string;\n  phone: string;\n  role: RoleType;\n  permission?: string[];\n}\n\nexport interface RoleMapType {\n  [propName: string]: {\n    name: string;\n    desc: string;\n  };\n}\n\nexport type RoleType = 'admin' | 'operator';\n\nconst RoleMap: RoleMapType = {\n  admin: {\n    name: '\u7ba1\u7406\u5458',\n    desc: '\u4ec5\u62e5\u6709\u6307\u5b9a\u9879\u76ee\u7684\u6743\u9650',\n  },\n  operator: {\n    name: '\u64cd\u4f5c\u5458',\n    desc: '\u62e5\u6709\u6240\u6709\u6743\u9650',\n  },\n};\n\nconst tableListDataSource: Member[] = [];\n\nconst realNames = ['\u9a6c\u5df4\u5df4', '\u6d4b\u8bd5', '\u6d4b\u8bd52', '\u6d4b\u8bd53'];\nconst nickNames = ['\u5df4\u5df4', '\u6d4b\u8bd5', '\u6d4b\u8bd52', '\u6d4b\u8bd53'];\nconst emails = ['baba@antfin.com', 'test@antfin.com', 'test2@antfin.com', 'test3@antfin.com'];\nconst phones = ['12345678910', '10923456789', '109654446789', '109223346789'];\nconst permissions = [[], ['\u6743\u9650\u70b9\u540d\u79f01', '\u6743\u9650\u70b9\u540d\u79f04'], ['\u6743\u9650\u70b9\u540d\u79f01'], []];\n\nfor (let i = 0; i < 5; i += 1) {\n  tableListDataSource.push({\n    outUserNo: `${102047 + i}`,\n    avatar: `//work.alibaba-inc.com/photo/${102047 + i}.32x32.jpg`,\n    role: i === 0 ? 'admin' : 'operator',\n    realName: realNames[i % 4],\n    nickName: nickNames[i % 4],\n    email: emails[i % 4],\n    phone: phones[i % 4],\n    permission: permissions[i % 4],\n  });\n}\n\nconst MemberList: React.FC = () => {\n  const renderRemoveUser = (text: string) => (\n    <Popconfirm title={`\u786e\u8ba4${text}\u5417?`} okText=\"\u662f\" cancelText=\"\u5426\">\n      <a>{text}</a>\n    </Popconfirm>\n  );\n\n  const columns: ProColumns<Member>[] = [\n    {\n      dataIndex: 'avatar',\n      title: '\u6210\u5458\u540d\u79f0',\n      valueType: 'avatar',\n      width: 150,\n      render: (dom, record) => (\n        <Space>\n          <span>{dom}</span>\n          {record.nickName}\n        </Space>\n      ),\n    },\n    {\n      dataIndex: 'email',\n      title: '\u8d26\u53f7',\n    },\n    {\n      dataIndex: 'phone',\n      title: '\u624b\u673a\u53f7',\n    },\n    {\n      dataIndex: 'role',\n      title: '\u89d2\u8272',\n      render: (_, record) => RoleMap[record.role || 'admin'].name,\n    },\n    {\n      dataIndex: 'permission',\n      title: '\u6743\u9650\u8303\u56f4',\n      render: (_, record) => {\n        const { role, permission = [] } = record;\n        if (role === 'admin') {\n          return '\u6240\u6709\u6743\u9650';\n        }\n        return permission && permission.length > 0 ? permission.join('\u3001') : '\u65e0';\n      },\n    },\n    {\n      title: '\u64cd\u4f5c',\n      dataIndex: 'x',\n      render: (_, record) => {\n        let node = renderRemoveUser('\u9000\u51fa');\n        if (record.role === 'admin') {\n          node = renderRemoveUser('\u79fb\u9664');\n        }\n        return node;\n      },\n    },\n  ];\n\n  return (\n    <ProTable<Member>\n      columns={columns}\n      request={(params, sorter, filter) => {\n        // \u8868\u5355\u641c\u7d22\u9879\u4f1a\u4ece params \u4f20\u5165\uff0c\u4f20\u9012\u7ed9\u540e\u7aef\u63a5\u53e3\u3002\n        console.log(params, sorter, filter);\n        return Promise.resolve({\n          data: tableListDataSource,\n          success: true,\n        });\n      }}\n      rowKey=\"outUserNo\"\n      pagination={{\n        showQuickJumper: true,\n      }}\n      toolBarRender={false}\n      search={false}\n    />\n  );\n};\n\nexport default MemberList;\n"}},dependencies:{react:{version:"16.13.1"},"react-dom":{version:">=16.9.0"},antd:{version:"4.6.6",css:"antd/dist/antd.css"}},background:"#f5f5f5",identifier:"src-table-3"},r.a.createElement(u,null)),r.a.createElement("div",{className:"markdown"},r.a.createElement("h3",{id:"\u5d4c\u5957\u8868\u683c"},r.a.createElement(l["AnchorLink"],{to:"#\u5d4c\u5957\u8868\u683c","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"\u5d4c\u5957\u8868\u683c")),r.a.createElement(o["default"],{sources:{_:{jsx:"import React from 'react';\nimport { Button, Tooltip, Tag } from 'antd';\nimport { DownOutlined, QuestionCircleOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport ProTable from '@ant-design/pro-table';\n\nconst statusMap = {\n  0: {\n    color: 'blue',\n    text: '\u8fdb\u884c\u4e2d',\n  },\n  1: {\n    color: 'green',\n    text: '\u5df2\u5b8c\u6210',\n  },\n  2: {\n    color: 'volcano',\n    text: '\u8b66\u544a',\n  },\n  3: {\n    color: 'red',\n    text: '\u5931\u8d25',\n  },\n  4: {\n    color: '',\n    text: '\u672a\u5b8c\u6210',\n  },\n};\nconst tableListDataSource = [];\nconst creators = ['\u4ed8\u5c0f\u5c0f', '\u66f2\u4e3d\u4e3d', '\u6797\u4e1c\u4e1c', '\u9648\u5e05\u5e05', '\u517c\u67d0\u67d0'];\n\nfor (let i = 0; i < 5; i += 1) {\n  tableListDataSource.push({\n    key: i,\n    name: 'AppName',\n    containers: Math.floor(Math.random() * 20),\n    creator: creators[Math.floor(Math.random() * creators.length)],\n    status: statusMap[Math.floor(Math.random() * 10) % 5],\n    createdAt: Date.now() - Math.floor(Math.random() * 100000),\n  });\n}\n\nconst columns = [\n  {\n    title: '\u5e94\u7528\u540d\u79f0',\n    width: 120,\n    dataIndex: 'name',\n    render: _ => <a>{_}</a>,\n  },\n  {\n    title: '\u72b6\u6001',\n    width: 120,\n    dataIndex: 'status',\n    render: (_, record) => <Tag color={record.status.color}>{record.status.text}</Tag>,\n  },\n  {\n    title: '\u5bb9\u5668\u6570\u91cf',\n    width: 120,\n    dataIndex: 'containers',\n    align: 'right',\n    sorter: (a, b) => a.containers - b.containers,\n  },\n  {\n    title: '\u521b\u5efa\u8005',\n    width: 120,\n    dataIndex: 'creator',\n    valueEnum: {\n      all: {\n        text: '\u5168\u90e8',\n      },\n      \u4ed8\u5c0f\u5c0f: {\n        text: '\u4ed8\u5c0f\u5c0f',\n      },\n      \u66f2\u4e3d\u4e3d: {\n        text: '\u66f2\u4e3d\u4e3d',\n      },\n      \u6797\u4e1c\u4e1c: {\n        text: '\u6797\u4e1c\u4e1c',\n      },\n      \u9648\u5e05\u5e05: {\n        text: '\u9648\u5e05\u5e05',\n      },\n      \u517c\u67d0\u67d0: {\n        text: '\u517c\u67d0\u67d0',\n      },\n    },\n  },\n  {\n    title: (\n      <>\n        \u521b\u5efa\u65f6\u95f4\n        <Tooltip placement=\"top\" title=\"\u8fd9\u662f\u4e00\u6bb5\u63cf\u8ff0\">\n          <QuestionCircleOutlined\n            style={{\n              marginLeft: 4,\n            }}\n          />\n        </Tooltip>\n      </>\n    ),\n    width: 140,\n    key: 'since',\n    dataIndex: 'createdAt',\n    valueType: 'date',\n    sorter: (a, b) => a.createdAt - b.createdAt,\n  },\n  {\n    title: '\u64cd\u4f5c',\n    width: 180,\n    key: 'option',\n    valueType: 'option',\n    render: () => [\n      <a key=\"1\">\u94fe\u8def</a>,\n      <a key=\"2\">\u62a5\u8b66</a>,\n      <a key=\"3\">\u76d1\u63a7</a>,\n      <a key=\"4\">\n        <EllipsisOutlined />\n      </a>,\n    ],\n  },\n];\n\nconst expandedRowRender = () => {\n  const data = [];\n\n  for (let i = 0; i < 3; i += 1) {\n    data.push({\n      key: i,\n      date: '2014-12-24 23:12:00',\n      name: 'This is production name',\n      upgradeNum: 'Upgraded: 56',\n    });\n  }\n\n  return (\n    <ProTable\n      columns={[\n        {\n          title: 'Date',\n          dataIndex: 'date',\n          key: 'date',\n        },\n        {\n          title: 'Name',\n          dataIndex: 'name',\n          key: 'name',\n        },\n        {\n          title: 'Upgrade Status',\n          dataIndex: 'upgradeNum',\n          key: 'upgradeNum',\n        },\n        {\n          title: 'Action',\n          dataIndex: 'operation',\n          key: 'operation',\n          valueType: 'option',\n          render: () => [<a key=\"Pause\">Pause</a>, <a key=\"Stop\">Stop</a>],\n        },\n      ]}\n      headerTitle={false}\n      search={false}\n      options={false}\n      dataSource={data}\n      pagination={false}\n    />\n  );\n};\n\nexport default () => (\n  <ProTable\n    columns={columns}\n    request={(params, sorter, filter) => {\n      // \u8868\u5355\u641c\u7d22\u9879\u4f1a\u4ece params \u4f20\u5165\uff0c\u4f20\u9012\u7ed9\u540e\u7aef\u63a5\u53e3\u3002\n      console.log(params, sorter, filter);\n      return Promise.resolve({\n        data: tableListDataSource,\n        success: true,\n      });\n    }}\n    rowKey=\"key\"\n    pagination={{\n      showQuickJumper: true,\n    }}\n    expandable={{\n      expandedRowRender,\n    }}\n    search={false}\n    dateFormatter=\"string\"\n    headerTitle=\"\u5d4c\u5957\u8868\u683c\"\n    options={false}\n    toolBarRender={() => [\n      <Button key=\"show\">\u67e5\u770b\u65e5\u5fd7</Button>,\n      <Button key=\"out\">\n        \u5bfc\u51fa\u6570\u636e\n        <DownOutlined />\n      </Button>,\n      <Button key=\"primary\" type=\"primary\">\n        \u521b\u5efa\u5e94\u7528\n      </Button>,\n    ]}\n  />\n);\n",tsx:"import React from 'react';\nimport { Button, Tooltip, Tag } from 'antd';\nimport { DownOutlined, QuestionCircleOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport ProTable, { ProColumns } from '@ant-design/pro-table';\n\nexport interface Status {\n  color: string;\n  text: string;\n}\n\nconst statusMap = {\n  0: {\n    color: 'blue',\n    text: '\u8fdb\u884c\u4e2d',\n  },\n  1: {\n    color: 'green',\n    text: '\u5df2\u5b8c\u6210',\n  },\n  2: {\n    color: 'volcano',\n    text: '\u8b66\u544a',\n  },\n  3: {\n    color: 'red',\n    text: '\u5931\u8d25',\n  },\n  4: {\n    color: '',\n    text: '\u672a\u5b8c\u6210',\n  },\n};\n\nexport interface TableListItem {\n  key: number;\n  name: string;\n  containers: number;\n  creator: string;\n  status: Status;\n  createdAt: number;\n}\nconst tableListDataSource: TableListItem[] = [];\n\nconst creators = ['\u4ed8\u5c0f\u5c0f', '\u66f2\u4e3d\u4e3d', '\u6797\u4e1c\u4e1c', '\u9648\u5e05\u5e05', '\u517c\u67d0\u67d0'];\n\nfor (let i = 0; i < 5; i += 1) {\n  tableListDataSource.push({\n    key: i,\n    name: 'AppName',\n    containers: Math.floor(Math.random() * 20),\n    creator: creators[Math.floor(Math.random() * creators.length)],\n    status: statusMap[Math.floor(Math.random() * 10) % 5],\n    createdAt: Date.now() - Math.floor(Math.random() * 100000),\n  });\n}\n\nconst columns: ProColumns<TableListItem>[] = [\n  {\n    title: '\u5e94\u7528\u540d\u79f0',\n    width: 120,\n    dataIndex: 'name',\n    render: (_) => <a>{_}</a>,\n  },\n  {\n    title: '\u72b6\u6001',\n    width: 120,\n    dataIndex: 'status',\n    render: (_, record) => <Tag color={record.status.color}>{record.status.text}</Tag>,\n  },\n  {\n    title: '\u5bb9\u5668\u6570\u91cf',\n    width: 120,\n    dataIndex: 'containers',\n    align: 'right',\n    sorter: (a, b) => a.containers - b.containers,\n  },\n\n  {\n    title: '\u521b\u5efa\u8005',\n    width: 120,\n    dataIndex: 'creator',\n    valueEnum: {\n      all: { text: '\u5168\u90e8' },\n      \u4ed8\u5c0f\u5c0f: { text: '\u4ed8\u5c0f\u5c0f' },\n      \u66f2\u4e3d\u4e3d: { text: '\u66f2\u4e3d\u4e3d' },\n      \u6797\u4e1c\u4e1c: { text: '\u6797\u4e1c\u4e1c' },\n      \u9648\u5e05\u5e05: { text: '\u9648\u5e05\u5e05' },\n      \u517c\u67d0\u67d0: { text: '\u517c\u67d0\u67d0' },\n    },\n  },\n  {\n    title: (\n      <>\n        \u521b\u5efa\u65f6\u95f4\n        <Tooltip placement=\"top\" title=\"\u8fd9\u662f\u4e00\u6bb5\u63cf\u8ff0\">\n          <QuestionCircleOutlined style={{ marginLeft: 4 }} />\n        </Tooltip>\n      </>\n    ),\n    width: 140,\n    key: 'since',\n    dataIndex: 'createdAt',\n    valueType: 'date',\n    sorter: (a, b) => a.createdAt - b.createdAt,\n  },\n  {\n    title: '\u64cd\u4f5c',\n    width: 180,\n    key: 'option',\n    valueType: 'option',\n    render: () => [\n      <a key=\"1\">\u94fe\u8def</a>,\n      <a key=\"2\">\u62a5\u8b66</a>,\n      <a key=\"3\">\u76d1\u63a7</a>,\n      <a key=\"4\">\n        <EllipsisOutlined />\n      </a>,\n    ],\n  },\n];\n\nconst expandedRowRender = () => {\n  const data = [];\n  for (let i = 0; i < 3; i += 1) {\n    data.push({\n      key: i,\n      date: '2014-12-24 23:12:00',\n      name: 'This is production name',\n      upgradeNum: 'Upgraded: 56',\n    });\n  }\n  return (\n    <ProTable\n      columns={[\n        { title: 'Date', dataIndex: 'date', key: 'date' },\n        { title: 'Name', dataIndex: 'name', key: 'name' },\n\n        { title: 'Upgrade Status', dataIndex: 'upgradeNum', key: 'upgradeNum' },\n        {\n          title: 'Action',\n          dataIndex: 'operation',\n          key: 'operation',\n          valueType: 'option',\n          render: () => [<a key=\"Pause\">Pause</a>, <a key=\"Stop\">Stop</a>],\n        },\n      ]}\n      headerTitle={false}\n      search={false}\n      options={false}\n      dataSource={data}\n      pagination={false}\n    />\n  );\n};\n\nexport default () => {\n  return (\n    <ProTable<TableListItem>\n      columns={columns}\n      request={(params, sorter, filter) => {\n        // \u8868\u5355\u641c\u7d22\u9879\u4f1a\u4ece params \u4f20\u5165\uff0c\u4f20\u9012\u7ed9\u540e\u7aef\u63a5\u53e3\u3002\n        console.log(params, sorter, filter);\n        return Promise.resolve({\n          data: tableListDataSource,\n          success: true,\n        });\n      }}\n      rowKey=\"key\"\n      pagination={{\n        showQuickJumper: true,\n      }}\n      expandable={{ expandedRowRender }}\n      search={false}\n      dateFormatter=\"string\"\n      headerTitle=\"\u5d4c\u5957\u8868\u683c\"\n      options={false}\n      toolBarRender={() => [\n        <Button key=\"show\">\u67e5\u770b\u65e5\u5fd7</Button>,\n        <Button key=\"out\">\n          \u5bfc\u51fa\u6570\u636e\n          <DownOutlined />\n        </Button>,\n        <Button key=\"primary\" type=\"primary\">\n          \u521b\u5efa\u5e94\u7528\n        </Button>,\n      ]}\n    />\n  );\n};\n"}},dependencies:{react:{version:"16.13.1"},"react-dom":{version:">=16.9.0"},antd:{version:"4.6.6",css:"antd/dist/antd.css"},"@ant-design/icons":{version:"4.2.2"}},background:"#f5f5f5",identifier:"src-table-4"},r.a.createElement(m,null)),r.a.createElement("div",{className:"markdown"},r.a.createElement("h3",{id:"\u6279\u91cf\u64cd\u4f5c"},r.a.createElement(l["AnchorLink"],{to:"#\u6279\u91cf\u64cd\u4f5c","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"\u6279\u91cf\u64cd\u4f5c")),r.a.createElement(o["default"],{sources:{_:{jsx:"import React from 'react';\nimport { Button, DatePicker, Space } from 'antd';\nimport ProTable from '@ant-design/pro-table';\n\nconst { RangePicker } = DatePicker;\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\nconst ProcessMap = {\n  close: 'normal',\n  running: 'active',\n  online: 'success',\n  error: 'exception',\n};\nconst tableListDataSource = [];\nconst creators = ['\u4ed8\u5c0f\u5c0f', '\u66f2\u4e3d\u4e3d', '\u6797\u4e1c\u4e1c', '\u9648\u5e05\u5e05', '\u517c\u67d0\u67d0'];\n\nfor (let i = 0; i < 5; i += 1) {\n  tableListDataSource.push({\n    key: i,\n    name: 'AppName',\n    containers: Math.floor(Math.random() * 20),\n    callNumber: Math.floor(Math.random() * 2000),\n    progress: Math.ceil(Math.random() * 100) + 1,\n    creator: creators[Math.floor(Math.random() * creators.length)],\n    status: valueEnum[Math.floor(Math.random() * 10) % 4],\n    createdAt: Date.now() - Math.floor(Math.random() * 100000),\n    memo: i % 2 === 1 ? '\u5f88\u957f\u5f88\u957f\u5f88\u957f\u5f88\u957f\u5f88\u957f\u5f88\u957f\u5f88\u957f\u7684\u6587\u5b57\u8981\u5c55\u793a\u4f46\u662f\u8981\u7559\u4e0b\u5c3e\u5df4' : '\u7b80\u77ed\u5907\u6ce8\u6587\u6848',\n  });\n}\n\nconst columns = [\n  {\n    title: '\u5e94\u7528\u540d\u79f0',\n    width: 120,\n    dataIndex: 'name',\n    fixed: 'left',\n    render: _ => <a>{_}</a>,\n  },\n  {\n    title: '\u5bb9\u5668\u6570\u91cf',\n    width: 120,\n    dataIndex: 'containers',\n    align: 'right',\n    hideInSearch: true,\n    sorter: (a, b) => a.containers - b.containers,\n  },\n  {\n    title: '\u8c03\u7528\u6b21\u6570',\n    width: 120,\n    align: 'right',\n    dataIndex: 'callNumber',\n  },\n  {\n    title: '\u6267\u884c\u8fdb\u5ea6',\n    dataIndex: 'progress',\n    valueType: item => ({\n      type: 'progress',\n      status: ProcessMap[item.status],\n    }),\n  },\n  {\n    title: '\u521b\u5efa\u8005',\n    width: 120,\n    dataIndex: 'creator',\n    valueEnum: {\n      all: {\n        text: '\u5168\u90e8',\n      },\n      \u4ed8\u5c0f\u5c0f: {\n        text: '\u4ed8\u5c0f\u5c0f',\n      },\n      \u66f2\u4e3d\u4e3d: {\n        text: '\u66f2\u4e3d\u4e3d',\n      },\n      \u6797\u4e1c\u4e1c: {\n        text: '\u6797\u4e1c\u4e1c',\n      },\n      \u9648\u5e05\u5e05: {\n        text: '\u9648\u5e05\u5e05',\n      },\n      \u517c\u67d0\u67d0: {\n        text: '\u517c\u67d0\u67d0',\n      },\n    },\n  },\n  {\n    title: '\u521b\u5efa\u65f6\u95f4',\n    width: 140,\n    key: 'since',\n    dataIndex: 'createdAt',\n    valueType: 'date',\n    sorter: (a, b) => a.createdAt - b.createdAt,\n    renderFormItem: (_, { value, onChange }) => <RangePicker value={value} onChange={onChange} />,\n  },\n  {\n    title: '\u5907\u6ce8',\n    dataIndex: 'memo',\n    ellipsis: true,\n    copyable: true,\n    hideInSearch: true,\n  },\n  {\n    title: '\u64cd\u4f5c',\n    width: 180,\n    key: 'option',\n    valueType: 'option',\n    fixed: 'right',\n    render: () => [<a key=\"link\">\u94fe\u8def</a>],\n  },\n];\nexport default () => (\n  <ProTable\n    columns={columns}\n    rowSelection={{}}\n    tableAlertRender={({ selectedRowKeys, selectedRows, onCleanSelected }) => (\n      <Space size={24}>\n        <span>\n          \u5df2\u9009 {selectedRowKeys.length} \u9879\n          <a\n            style={{\n              marginLeft: 8,\n            }}\n            onClick={onCleanSelected}\n          >\n            \u53d6\u6d88\u9009\u62e9\n          </a>\n        </span>\n        <span>{`\u5bb9\u5668\u6570\u91cf: ${selectedRows.reduce(\n          (pre, item) => pre + item.containers,\n          0,\n        )} \u4e2a`}</span>\n        <span>{`\u8c03\u7528\u91cf: ${selectedRows.reduce((pre, item) => pre + item.callNumber, 0)} \u6b21`}</span>\n      </Space>\n    )}\n    tableAlertOptionRender={() => (\n      <Space>\n        <a>\u6279\u91cf\u5220\u9664</a>\n        <a>\u5bfc\u51fa\u6570\u636e</a>\n      </Space>\n    )}\n    request={() =>\n      Promise.resolve({\n        data: tableListDataSource,\n        success: true,\n      })\n    }\n    scroll={{\n      x: 1300,\n    }}\n    options={false}\n    search={false}\n    rowKey=\"key\"\n    headerTitle=\"\u6279\u91cf\u64cd\u4f5c\"\n    toolBarRender={() => [<Button key=\"show\">\u67e5\u770b\u65e5\u5fd7</Button>]}\n  />\n);\n",tsx:"import React from 'react';\nimport { Button, DatePicker, Space } from 'antd';\nimport ProTable, { ProColumns } from '@ant-design/pro-table';\n\nconst { RangePicker } = DatePicker;\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\n\nconst ProcessMap = {\n  close: 'normal',\n  running: 'active',\n  online: 'success',\n  error: 'exception',\n};\n\nexport interface TableListItem {\n  key: number;\n  name: string;\n  progress: number;\n  containers: number;\n  callNumber: number;\n  creator: string;\n  status: string;\n  createdAt: number;\n  memo: string;\n}\nconst tableListDataSource: TableListItem[] = [];\n\nconst creators = ['\u4ed8\u5c0f\u5c0f', '\u66f2\u4e3d\u4e3d', '\u6797\u4e1c\u4e1c', '\u9648\u5e05\u5e05', '\u517c\u67d0\u67d0'];\n\nfor (let i = 0; i < 5; i += 1) {\n  tableListDataSource.push({\n    key: i,\n    name: 'AppName',\n    containers: Math.floor(Math.random() * 20),\n    callNumber: Math.floor(Math.random() * 2000),\n    progress: Math.ceil(Math.random() * 100) + 1,\n    creator: creators[Math.floor(Math.random() * creators.length)],\n    status: valueEnum[Math.floor(Math.random() * 10) % 4],\n    createdAt: Date.now() - Math.floor(Math.random() * 100000),\n    memo: i % 2 === 1 ? '\u5f88\u957f\u5f88\u957f\u5f88\u957f\u5f88\u957f\u5f88\u957f\u5f88\u957f\u5f88\u957f\u7684\u6587\u5b57\u8981\u5c55\u793a\u4f46\u662f\u8981\u7559\u4e0b\u5c3e\u5df4' : '\u7b80\u77ed\u5907\u6ce8\u6587\u6848',\n  });\n}\n\nconst columns: ProColumns<TableListItem>[] = [\n  {\n    title: '\u5e94\u7528\u540d\u79f0',\n    width: 120,\n    dataIndex: 'name',\n    fixed: 'left',\n    render: (_) => <a>{_}</a>,\n  },\n  {\n    title: '\u5bb9\u5668\u6570\u91cf',\n    width: 120,\n    dataIndex: 'containers',\n    align: 'right',\n    hideInSearch: true,\n    sorter: (a, b) => a.containers - b.containers,\n  },\n  {\n    title: '\u8c03\u7528\u6b21\u6570',\n    width: 120,\n    align: 'right',\n    dataIndex: 'callNumber',\n  },\n  {\n    title: '\u6267\u884c\u8fdb\u5ea6',\n    dataIndex: 'progress',\n    valueType: (item) => ({\n      type: 'progress',\n      status: ProcessMap[item.status],\n    }),\n  },\n  {\n    title: '\u521b\u5efa\u8005',\n    width: 120,\n    dataIndex: 'creator',\n    valueEnum: {\n      all: { text: '\u5168\u90e8' },\n      \u4ed8\u5c0f\u5c0f: { text: '\u4ed8\u5c0f\u5c0f' },\n      \u66f2\u4e3d\u4e3d: { text: '\u66f2\u4e3d\u4e3d' },\n      \u6797\u4e1c\u4e1c: { text: '\u6797\u4e1c\u4e1c' },\n      \u9648\u5e05\u5e05: { text: '\u9648\u5e05\u5e05' },\n      \u517c\u67d0\u67d0: { text: '\u517c\u67d0\u67d0' },\n    },\n  },\n  {\n    title: '\u521b\u5efa\u65f6\u95f4',\n    width: 140,\n    key: 'since',\n    dataIndex: 'createdAt',\n    valueType: 'date',\n    sorter: (a, b) => a.createdAt - b.createdAt,\n    renderFormItem: (_, { value, onChange }) => {\n      return <RangePicker value={value} onChange={onChange} />;\n    },\n  },\n  {\n    title: '\u5907\u6ce8',\n    dataIndex: 'memo',\n    ellipsis: true,\n    copyable: true,\n    hideInSearch: true,\n  },\n  {\n    title: '\u64cd\u4f5c',\n    width: 180,\n    key: 'option',\n    valueType: 'option',\n    fixed: 'right',\n    render: () => [<a key=\"link\">\u94fe\u8def</a>],\n  },\n];\n\nexport default () => {\n  return (\n    <ProTable<TableListItem>\n      columns={columns}\n      rowSelection={{}}\n      tableAlertRender={({ selectedRowKeys, selectedRows, onCleanSelected }) => (\n        <Space size={24}>\n          <span>\n            \u5df2\u9009 {selectedRowKeys.length} \u9879\n            <a style={{ marginLeft: 8 }} onClick={onCleanSelected}>\n              \u53d6\u6d88\u9009\u62e9\n            </a>\n          </span>\n          <span>{`\u5bb9\u5668\u6570\u91cf: ${selectedRows.reduce(\n            (pre, item) => pre + item.containers,\n            0,\n          )} \u4e2a`}</span>\n          <span>{`\u8c03\u7528\u91cf: ${selectedRows.reduce(\n            (pre, item) => pre + item.callNumber,\n            0,\n          )} \u6b21`}</span>\n        </Space>\n      )}\n      tableAlertOptionRender={() => {\n        return (\n          <Space>\n            <a>\u6279\u91cf\u5220\u9664</a>\n            <a>\u5bfc\u51fa\u6570\u636e</a>\n          </Space>\n        );\n      }}\n      request={() => {\n        return Promise.resolve({\n          data: tableListDataSource,\n          success: true,\n        });\n      }}\n      scroll={{ x: 1300 }}\n      options={false}\n      search={false}\n      rowKey=\"key\"\n      headerTitle=\"\u6279\u91cf\u64cd\u4f5c\"\n      toolBarRender={() => [<Button key=\"show\">\u67e5\u770b\u65e5\u5fd7</Button>]}\n    />\n  );\n};\n"}},dependencies:{react:{version:"16.13.1"},"react-dom":{version:">=16.9.0"},antd:{version:"4.6.6",css:"antd/dist/antd.css"}},background:"#f5f5f5",identifier:"src-table-5"},r.a.createElement(p,null)),r.a.createElement("div",{className:"markdown"},r.a.createElement("h3",{id:"toolbar-\u641c\u7d22"},r.a.createElement(l["AnchorLink"],{to:"#toolbar-\u641c\u7d22","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"toolbar \u641c\u7d22")),r.a.createElement(o["default"],{sources:{_:{jsx:"import React, { useState } from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Button, Tabs, Tag, Space, message } from 'antd';\nimport ProDescriptions from '@ant-design/pro-descriptions';\nimport ProTable, { TableDropdown } from '@ant-design/pro-table';\nimport request from 'umi-request';\n\nconst columns = [\n  {\n    title: '\u5e8f\u53f7',\n    dataIndex: 'index',\n    valueType: 'indexBorder',\n    width: 72,\n  },\n  {\n    title: '\u6807\u9898',\n    dataIndex: 'title',\n    copyable: true,\n    ellipsis: true,\n    width: 200,\n    hideInSearch: true,\n  },\n  {\n    title: (_, type) => (type === 'table' ? '\u72b6\u6001' : '\u5217\u8868\u72b6\u6001'),\n    dataIndex: 'state',\n    initialValue: 'all',\n    filters: true,\n    valueEnum: {\n      all: {\n        text: '\u5168\u90e8',\n        status: 'Default',\n      },\n      open: {\n        text: '\u672a\u89e3\u51b3',\n        status: 'Error',\n      },\n      closed: {\n        text: '\u5df2\u89e3\u51b3',\n        status: 'Success',\n      },\n    },\n  },\n  {\n    title: '\u6392\u5e8f\u65b9\u5f0f',\n    key: 'direction',\n    hideInTable: true,\n    hideInDescriptions: true,\n    dataIndex: 'direction',\n    filters: true,\n    valueEnum: {\n      asc: '\u6b63\u5e8f',\n      desc: '\u5012\u5e8f',\n    },\n  },\n  {\n    title: '\u6807\u7b7e',\n    dataIndex: 'labels',\n    width: 120,\n    render: (_, row) => (\n      <Space>\n        {row.labels.map(({ name, id, color }) => (\n          <Tag color={color} key={id}>\n            {name}\n          </Tag>\n        ))}\n      </Space>\n    ),\n  },\n  {\n    title: '\u521b\u5efa\u65f6\u95f4',\n    key: 'since',\n    dataIndex: 'created_at',\n    valueType: 'dateTime',\n  },\n  {\n    title: 'option',\n    valueType: 'option',\n    dataIndex: 'id',\n    render: (text, row) => [\n      <a href={row.html_url} key=\"show\" target=\"_blank\" rel=\"noopener noreferrer\">\n        \u67e5\u770b\n      </a>,\n      <TableDropdown\n        key=\"more\"\n        onSelect={key => message.info(key)}\n        menus={[\n          {\n            key: 'copy',\n            name: '\u590d\u5236',\n          },\n          {\n            key: 'delete',\n            name: '\u5220\u9664',\n          },\n        ]}\n      />,\n    ],\n  },\n];\nexport default () => {\n  const [type, setType] = useState('table');\n  return (\n    <>\n      <Tabs activeKey={type} onChange={e => setType(e)}>\n        <Tabs.TabPane tab=\"table\" key=\"table\" />\n        <Tabs.TabPane tab=\"form\" key=\"form\" />\n        <Tabs.TabPane tab=\"descriptions\" key=\"descriptions\" />\n      </Tabs>\n      {['table', 'form'].includes(type) && (\n        <ProTable\n          columns={columns}\n          type={type}\n          request={async (params = {}) =>\n            request('https://proapi.azurewebsites.net/github/issues', {\n              params,\n            })\n          }\n          rowKey=\"id\"\n          dateFormatter=\"string\"\n          headerTitle=\"\u67e5\u8be2 Table\"\n          toolBarRender={() => [\n            <Button key=\"3\" type=\"primary\">\n              <PlusOutlined />\n              \u65b0\u5efa\n            </Button>,\n          ]}\n        />\n      )}\n      {type === 'descriptions' && (\n        <ProDescriptions\n          style={{\n            background: '#fff',\n          }}\n          columns={columns}\n          request={async params => {\n            const msg = await request('https://proapi.azurewebsites.net/github/issues', {\n              params,\n            });\n            return { ...msg, data: msg?.data[0] };\n          }}\n        />\n      )}\n    </>\n  );\n};\n",tsx:"import React, { useState } from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Button, Tabs, Tag, Space, message } from 'antd';\nimport ProDescriptions from '@ant-design/pro-descriptions';\nimport ProTable, { ProColumns, TableDropdown } from '@ant-design/pro-table';\nimport request from 'umi-request';\n\ninterface GithubIssueItem {\n  url: string;\n  repository_url: string;\n  labels_url: string;\n  comments_url: string;\n  events_url: string;\n  html_url: string;\n  id: number;\n  node_id: string;\n  number: number;\n  title: string;\n  user: User;\n  labels: Label[];\n  state: string;\n  locked: boolean;\n  assignee?: any;\n  assignees: any[];\n  milestone?: any;\n  comments: number;\n  created_at: string;\n  updated_at: string;\n  closed_at?: any;\n  author_association: string;\n  body: string;\n}\n\ninterface Label {\n  id: number;\n  node_id: string;\n  url: string;\n  name: string;\n  color: string;\n  default: boolean;\n  description: string;\n}\n\ninterface User {\n  login: string;\n  id: number;\n  node_id: string;\n  avatar_url: string;\n  gravatar_id: string;\n  url: string;\n  html_url: string;\n  followers_url: string;\n  following_url: string;\n  gists_url: string;\n  starred_url: string;\n  subscriptions_url: string;\n  organizations_url: string;\n  repos_url: string;\n  events_url: string;\n  received_events_url: string;\n  type: string;\n  site_admin: boolean;\n}\n\nconst columns: ProColumns<GithubIssueItem>[] = [\n  {\n    title: '\u5e8f\u53f7',\n    dataIndex: 'index',\n    valueType: 'indexBorder',\n    width: 72,\n  },\n  {\n    title: '\u6807\u9898',\n    dataIndex: 'title',\n    copyable: true,\n    ellipsis: true,\n    width: 200,\n    hideInSearch: true,\n  },\n  {\n    title: (_, type) => (type === 'table' ? '\u72b6\u6001' : '\u5217\u8868\u72b6\u6001'),\n    dataIndex: 'state',\n    initialValue: 'all',\n    filters: true,\n    valueEnum: {\n      all: { text: '\u5168\u90e8', status: 'Default' },\n      open: {\n        text: '\u672a\u89e3\u51b3',\n        status: 'Error',\n      },\n      closed: {\n        text: '\u5df2\u89e3\u51b3',\n        status: 'Success',\n      },\n    },\n  },\n  {\n    title: '\u6392\u5e8f\u65b9\u5f0f',\n    key: 'direction',\n    hideInTable: true,\n    hideInDescriptions: true,\n    dataIndex: 'direction',\n    filters: true,\n    valueEnum: {\n      asc: '\u6b63\u5e8f',\n      desc: '\u5012\u5e8f',\n    },\n  },\n  {\n    title: '\u6807\u7b7e',\n    dataIndex: 'labels',\n    width: 120,\n    render: (_, row) => (\n      <Space>\n        {row.labels.map(({ name, id, color }) => (\n          <Tag color={color} key={id}>\n            {name}\n          </Tag>\n        ))}\n      </Space>\n    ),\n  },\n  {\n    title: '\u521b\u5efa\u65f6\u95f4',\n    key: 'since',\n    dataIndex: 'created_at',\n    valueType: 'dateTime',\n  },\n  {\n    title: 'option',\n    valueType: 'option',\n    dataIndex: 'id',\n    render: (text, row) => [\n      <a href={row.html_url} key=\"show\" target=\"_blank\" rel=\"noopener noreferrer\">\n        \u67e5\u770b\n      </a>,\n      <TableDropdown\n        key=\"more\"\n        onSelect={(key) => message.info(key)}\n        menus={[\n          { key: 'copy', name: '\u590d\u5236' },\n          { key: 'delete', name: '\u5220\u9664' },\n        ]}\n      />,\n    ],\n  },\n];\n\nexport default () => {\n  const [type, setType] = useState('table');\n  return (\n    <>\n      <Tabs activeKey={type} onChange={(e) => setType(e)}>\n        <Tabs.TabPane tab=\"table\" key=\"table\" />\n        <Tabs.TabPane tab=\"form\" key=\"form\" />\n        <Tabs.TabPane tab=\"descriptions\" key=\"descriptions\" />\n      </Tabs>\n      {['table', 'form'].includes(type) && (\n        <ProTable<GithubIssueItem>\n          columns={columns}\n          type={type as 'table'}\n          request={async (params = {}) =>\n            request<{\n              data: GithubIssueItem[];\n            }>('https://proapi.azurewebsites.net/github/issues', {\n              params,\n            })\n          }\n          rowKey=\"id\"\n          dateFormatter=\"string\"\n          headerTitle=\"\u67e5\u8be2 Table\"\n          toolBarRender={() => [\n            <Button key=\"3\" type=\"primary\">\n              <PlusOutlined />\n              \u65b0\u5efa\n            </Button>,\n          ]}\n        />\n      )}\n      {type === 'descriptions' && (\n        <ProDescriptions\n          style={{\n            background: '#fff',\n          }}\n          columns={columns}\n          request={async (params) => {\n            const msg = await request<{\n              data: GithubIssueItem[];\n            }>('https://proapi.azurewebsites.net/github/issues', {\n              params,\n            });\n            return {\n              ...msg,\n              data: msg?.data[0],\n            };\n          }}\n        />\n      )}\n    </>\n  );\n};\n"}},dependencies:{react:{version:"16.13.1"},"react-dom":{version:">=16.9.0"},antd:{version:"4.6.6",css:"antd/dist/antd.css"},"@ant-design/icons":{version:"4.2.2"},"umi-request":{version:"1.3.5"}},background:"#f5f5f5",identifier:"src-table-6"},r.a.createElement(g,null)),r.a.createElement("div",{className:"markdown"},r.a.createElement("h3",{id:"form-\u64cd\u4f5c"},r.a.createElement(l["AnchorLink"],{to:"#form-\u64cd\u4f5c","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"form \u64cd\u4f5c")),r.a.createElement(o["default"],{sources:{_:{jsx:"import React, { useRef, useState } from 'react';\nimport { Button } from 'antd';\nimport ProTable from '@ant-design/pro-table';\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\nconst tableListDataSource = [];\n\nfor (let i = 0; i < 5; i += 1) {\n  tableListDataSource.push({\n    key: i,\n    name: `TradeCode ${i}`,\n    status: valueEnum[Math.floor(Math.random() * 10) % 4],\n    updatedAt: Date.now() - Math.floor(Math.random() * 1000),\n    createdAt: Date.now() - Math.floor(Math.random() * 2000),\n    money: Math.floor(Math.random() * 2000) * i,\n    progress: Math.ceil(Math.random() * 100) + 1,\n  });\n}\n\nconst columns = [\n  {\n    title: '\u6807\u9898',\n    dataIndex: 'name',\n    key: 'name',\n  },\n  {\n    title: '\u72b6\u6001',\n    dataIndex: 'status',\n    initialValue: 'all',\n    filters: true,\n    valueEnum: {\n      all: {\n        text: '\u5168\u90e8',\n        status: 'Default',\n      },\n      close: {\n        text: '\u5173\u95ed',\n        status: 'Default',\n      },\n      running: {\n        text: '\u8fd0\u884c\u4e2d',\n        status: 'Processing',\n      },\n      online: {\n        text: '\u5df2\u4e0a\u7ebf',\n        status: 'Success',\n      },\n      error: {\n        text: '\u5f02\u5e38',\n        status: 'Error',\n      },\n    },\n  },\n  {\n    title: '\u521b\u5efa\u65f6\u95f4',\n    key: 'since',\n    dataIndex: 'createdAt',\n    valueType: 'dateTime',\n  },\n  {\n    title: '\u64cd\u4f5c',\n    key: 'option',\n    width: 120,\n    valueType: 'option',\n    render: () => [<a key=\"a\">\u64cd\u4f5c</a>, <a key=\"b\">\u5220\u9664</a>],\n  },\n];\nexport default () => {\n  const ref = useRef();\n  const [collapsed, setCollapsed] = useState(false);\n  return (\n    <ProTable\n      columns={columns}\n      request={() =>\n        Promise.resolve({\n          data: tableListDataSource,\n          success: true,\n        })\n      }\n      rowKey=\"key\"\n      pagination={{\n        showSizeChanger: true,\n      }}\n      search={{\n        collapsed,\n        onCollapse: setCollapsed,\n      }}\n      formRef={ref}\n      toolBarRender={() => [\n        <Button\n          key=\"set\"\n          onClick={() => {\n            if (ref.current) {\n              ref.current.setFieldsValue({\n                name: 'test-xxx',\n              });\n            }\n          }}\n        >\n          \u8d4b\u503c\n        </Button>,\n      ]}\n      options={false}\n      dateFormatter=\"string\"\n      headerTitle=\"\u8868\u5355\u8d4b\u503c\"\n    />\n  );\n};\n",tsx:"import React, { useRef, useState } from 'react';\nimport { Button } from 'antd';\nimport ProTable, { ProColumns } from '@ant-design/pro-table';\nimport { FormInstance } from 'antd/lib/form';\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\n\nexport interface TableListItem {\n  key: number;\n  name: string;\n  status: string;\n  updatedAt: number;\n  createdAt: number;\n  progress: number;\n  money: number;\n}\nconst tableListDataSource: TableListItem[] = [];\n\nfor (let i = 0; i < 5; i += 1) {\n  tableListDataSource.push({\n    key: i,\n    name: `TradeCode ${i}`,\n    status: valueEnum[Math.floor(Math.random() * 10) % 4],\n    updatedAt: Date.now() - Math.floor(Math.random() * 1000),\n    createdAt: Date.now() - Math.floor(Math.random() * 2000),\n    money: Math.floor(Math.random() * 2000) * i,\n    progress: Math.ceil(Math.random() * 100) + 1,\n  });\n}\n\nconst columns: ProColumns<TableListItem>[] = [\n  {\n    title: '\u6807\u9898',\n    dataIndex: 'name',\n    key: 'name',\n  },\n  {\n    title: '\u72b6\u6001',\n    dataIndex: 'status',\n    initialValue: 'all',\n    filters: true,\n    valueEnum: {\n      all: { text: '\u5168\u90e8', status: 'Default' },\n      close: { text: '\u5173\u95ed', status: 'Default' },\n      running: { text: '\u8fd0\u884c\u4e2d', status: 'Processing' },\n      online: { text: '\u5df2\u4e0a\u7ebf', status: 'Success' },\n      error: { text: '\u5f02\u5e38', status: 'Error' },\n    },\n  },\n  {\n    title: '\u521b\u5efa\u65f6\u95f4',\n    key: 'since',\n    dataIndex: 'createdAt',\n    valueType: 'dateTime',\n  },\n  {\n    title: '\u64cd\u4f5c',\n    key: 'option',\n    width: 120,\n    valueType: 'option',\n    render: () => [<a key=\"a\">\u64cd\u4f5c</a>, <a key=\"b\">\u5220\u9664</a>],\n  },\n];\n\nexport default () => {\n  const ref = useRef<FormInstance>();\n  const [collapsed, setCollapsed] = useState(false);\n\n  return (\n    <ProTable<TableListItem>\n      columns={columns}\n      request={() =>\n        Promise.resolve({\n          data: tableListDataSource,\n          success: true,\n        })\n      }\n      rowKey=\"key\"\n      pagination={{\n        showSizeChanger: true,\n      }}\n      search={{\n        collapsed,\n        onCollapse: setCollapsed,\n      }}\n      formRef={ref}\n      toolBarRender={() => [\n        <Button\n          key=\"set\"\n          onClick={() => {\n            if (ref.current) {\n              ref.current.setFieldsValue({\n                name: 'test-xxx',\n              });\n            }\n          }}\n        >\n          \u8d4b\u503c\n        </Button>,\n      ]}\n      options={false}\n      dateFormatter=\"string\"\n      headerTitle=\"\u8868\u5355\u8d4b\u503c\"\n    />\n  );\n};\n"}},dependencies:{react:{version:"16.13.1"},"react-dom":{version:">=16.9.0"},antd:{version:"4.6.6",css:"antd/dist/antd.css"}},background:"#f5f5f5",identifier:"src-table-7"},r.a.createElement(h,null)),r.a.createElement("div",{className:"markdown"},r.a.createElement("h3",{id:"datasource"},r.a.createElement(l["AnchorLink"],{to:"#datasource","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"DataSource")),r.a.createElement(o["default"],{sources:{_:{jsx:"import React, { useState, useEffect } from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Button } from 'antd';\nimport ProTable from '@ant-design/pro-table';\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\nconst tableListDataSource = [];\n\nfor (let i = 0; i < 20; i += 1) {\n  tableListDataSource.push({\n    key: i,\n    name: `TradeCode ${i}`,\n    status: valueEnum[Math.floor(Math.random() * 10) % 4],\n    updatedAt: Date.now() - Math.floor(Math.random() * 1000),\n    createdAt: Date.now() - Math.floor(Math.random() * 2000),\n    money: Math.floor(Math.random() * 2000) * i,\n    progress: Math.ceil(Math.random() * 100) + 1,\n  });\n}\n\nconst columns = [\n  {\n    title: '\u5e8f\u53f7',\n    dataIndex: 'index',\n    valueType: 'index',\n    width: 80,\n  },\n  {\n    title: '\u72b6\u6001',\n    dataIndex: 'status',\n    initialValue: 'all',\n    width: 100,\n    filters: true,\n    valueEnum: {\n      all: {\n        text: '\u5168\u90e8',\n        status: 'Default',\n      },\n      close: {\n        text: '\u5173\u95ed',\n        status: 'Default',\n      },\n      running: {\n        text: '\u8fd0\u884c\u4e2d',\n        status: 'Processing',\n      },\n      online: {\n        text: '\u5df2\u4e0a\u7ebf',\n        status: 'Success',\n      },\n      error: {\n        text: '\u5f02\u5e38',\n        status: 'Error',\n      },\n    },\n  },\n  {\n    title: '\u8fdb\u5ea6',\n    key: 'progress',\n    dataIndex: 'progress',\n    valueType: item => ({\n      type: 'progress',\n      status: item.status !== 'error' ? 'active' : 'exception',\n    }),\n    width: 200,\n  },\n  {\n    title: '\u66f4\u65b0\u65f6\u95f4',\n    key: 'since2',\n    width: 120,\n    dataIndex: 'createdAt',\n    valueType: 'date',\n  },\n];\nexport default () => {\n  const [loading, setLoading] = useState(true);\n  const [dataSource, setDataSource] = useState([]);\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n      setDataSource(tableListDataSource);\n    }, 5000);\n  }, []);\n  return (\n    <ProTable\n      columns={columns}\n      rowKey=\"key\"\n      pagination={{\n        showSizeChanger: true,\n      }}\n      loading={loading}\n      dataSource={dataSource}\n      options={{\n        density: true,\n        reload: () => {\n          setLoading(true);\n          setTimeout(() => {\n            setLoading(false);\n          }, 1000);\n        },\n        fullScreen: true,\n        setting: true,\n      }}\n      dateFormatter=\"string\"\n      headerTitle=\"dataSource \u548c loading\"\n      toolBarRender={() => [\n        <Button key=\"3\" type=\"primary\">\n          <PlusOutlined />\n          \u65b0\u5efa\n        </Button>,\n      ]}\n    />\n  );\n};\n",tsx:"import React, { useState, useEffect } from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Button } from 'antd';\nimport ProTable, { ProColumns } from '@ant-design/pro-table';\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\n\nexport interface TableListItem {\n  key: number;\n  name: string;\n  status: string;\n  updatedAt: number;\n  createdAt: number;\n  progress: number;\n  money: number;\n}\nconst tableListDataSource: TableListItem[] = [];\n\nfor (let i = 0; i < 20; i += 1) {\n  tableListDataSource.push({\n    key: i,\n    name: `TradeCode ${i}`,\n    status: valueEnum[Math.floor(Math.random() * 10) % 4],\n    updatedAt: Date.now() - Math.floor(Math.random() * 1000),\n    createdAt: Date.now() - Math.floor(Math.random() * 2000),\n    money: Math.floor(Math.random() * 2000) * i,\n    progress: Math.ceil(Math.random() * 100) + 1,\n  });\n}\n\nconst columns: ProColumns<TableListItem>[] = [\n  {\n    title: '\u5e8f\u53f7',\n    dataIndex: 'index',\n    valueType: 'index',\n    width: 80,\n  },\n  {\n    title: '\u72b6\u6001',\n    dataIndex: 'status',\n    initialValue: 'all',\n    width: 100,\n    filters: true,\n    valueEnum: {\n      all: { text: '\u5168\u90e8', status: 'Default' },\n      close: { text: '\u5173\u95ed', status: 'Default' },\n      running: { text: '\u8fd0\u884c\u4e2d', status: 'Processing' },\n      online: { text: '\u5df2\u4e0a\u7ebf', status: 'Success' },\n      error: { text: '\u5f02\u5e38', status: 'Error' },\n    },\n  },\n  {\n    title: '\u8fdb\u5ea6',\n    key: 'progress',\n    dataIndex: 'progress',\n    valueType: (item) => ({\n      type: 'progress',\n      status: item.status !== 'error' ? 'active' : 'exception',\n    }),\n    width: 200,\n  },\n  {\n    title: '\u66f4\u65b0\u65f6\u95f4',\n    key: 'since2',\n    width: 120,\n    dataIndex: 'createdAt',\n    valueType: 'date',\n  },\n];\n\nexport default () => {\n  const [loading, setLoading] = useState(true);\n  const [dataSource, setDataSource] = useState<TableListItem[]>([]);\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n      setDataSource(tableListDataSource);\n    }, 5000);\n  }, []);\n\n  return (\n    <ProTable<TableListItem>\n      columns={columns}\n      rowKey=\"key\"\n      pagination={{\n        showSizeChanger: true,\n      }}\n      loading={loading}\n      dataSource={dataSource}\n      options={{\n        density: true,\n        reload: () => {\n          setLoading(true);\n          setTimeout(() => {\n            setLoading(false);\n          }, 1000);\n        },\n        fullScreen: true,\n        setting: true,\n      }}\n      dateFormatter=\"string\"\n      headerTitle=\"dataSource \u548c loading\"\n      toolBarRender={() => [\n        <Button key=\"3\" type=\"primary\">\n          <PlusOutlined />\n          \u65b0\u5efa\n        </Button>,\n      ]}\n    />\n  );\n};\n"}},dependencies:{react:{version:"16.13.1"},"react-dom":{version:">=16.9.0"},antd:{version:"4.6.6",css:"antd/dist/antd.css"},"@ant-design/icons":{version:"4.2.2"}},background:"#f5f5f5",identifier:"src-table-8"},r.a.createElement(f,null)),r.a.createElement("div",{className:"markdown"},r.a.createElement("h3",{id:"\u53d7\u63a7\u7684\u5217\u663e\u793a\u9690\u85cf"},r.a.createElement(l["AnchorLink"],{to:"#\u53d7\u63a7\u7684\u5217\u663e\u793a\u9690\u85cf","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"\u53d7\u63a7\u7684\u5217\u663e\u793a\u9690\u85cf"),r.a.createElement("p",null,"\u53ef\u4ee5\u9ed8\u8ba4\u9690\u85cf\u67d0\u4e9b\u680f\uff0c\u4f46\u662f\u5728\u64cd\u4f5c\u680f\u4e2d\u53ef\u4ee5\u9009\u62e9")),r.a.createElement(o["default"],{sources:{_:{jsx:"import React, { useState } from 'react';\nimport { Input } from 'antd';\nimport ProTable from '@ant-design/pro-table';\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\nconst tableListDataSource = [];\n\nfor (let i = 0; i < 2; i += 1) {\n  tableListDataSource.push({\n    key: i,\n    name: `TradeCode ${i}`,\n    status: valueEnum[Math.floor(Math.random() * 10) % 4],\n    updatedAt: Date.now() - Math.floor(Math.random() * 1000),\n    createdAt: Date.now() - Math.floor(Math.random() * 2000),\n    money: Math.floor(Math.random() * 2000) * i,\n    progress: Math.ceil(Math.random() * 100) + 1,\n  });\n}\n\nconst columns = [\n  {\n    title: '\u6807\u9898',\n    dataIndex: 'name',\n    key: 'name',\n  },\n  {\n    title: '\u72b6\u6001',\n    dataIndex: 'status',\n    initialValue: 'all',\n    width: 100,\n    filters: true,\n    valueEnum: {\n      all: {\n        text: '\u5168\u90e8',\n        status: 'Default',\n      },\n      close: {\n        text: '\u5173\u95ed',\n        status: 'Default',\n      },\n      running: {\n        text: '\u8fd0\u884c\u4e2d',\n        status: 'Processing',\n      },\n      online: {\n        text: '\u5df2\u4e0a\u7ebf',\n        status: 'Success',\n      },\n      error: {\n        text: '\u5f02\u5e38',\n        status: 'Error',\n      },\n    },\n  },\n  {\n    title: '\u521b\u5efa\u65f6\u95f4',\n    key: 'since',\n    dataIndex: 'createdAt',\n    width: 200,\n    valueType: 'dateTime',\n  },\n  {\n    title: '\u66f4\u65b0\u65f6\u95f4',\n    key: 'since2',\n    width: 120,\n    dataIndex: 'createdAt',\n    valueType: 'date',\n  },\n  {\n    title: '\u64cd\u4f5c',\n    key: 'option',\n    width: 120,\n    valueType: 'option',\n    render: () => [<a key=\"1\">\u64cd\u4f5c</a>, <a key=\"2\">\u5220\u9664</a>],\n  },\n];\nexport default () => {\n  const [columnsStateMap, setColumnsStateMap] = useState({\n    name: {\n      show: false,\n    },\n  });\n  return (\n    <>\n      <code>{JSON.stringify(columnsStateMap)}</code>\n      <ProTable\n        columns={columns}\n        request={params =>\n          Promise.resolve({\n            data: tableListDataSource.filter(item => {\n              if (!params?.keyWord) {\n                return true;\n              }\n\n              if (item.name.includes(params?.keyWord) || item.status.includes(params?.keyWord)) {\n                return true;\n              }\n\n              return false;\n            }),\n            success: true,\n          })\n        }\n        rowKey=\"key\"\n        pagination={{\n          showSizeChanger: true,\n        }}\n        columnsStateMap={columnsStateMap}\n        onColumnsStateChange={map => setColumnsStateMap(map)}\n        search={false}\n        dateFormatter=\"string\"\n        headerTitle=\"\u53d7\u63a7\u6a21\u5f0f\"\n        toolBarRender={() => [<Input.Search key=\"search\" placeholder=\"\u8bf7\u8f93\u5165\" />]}\n      />\n    </>\n  );\n};\n",tsx:"import React, { useState } from 'react';\nimport { Input } from 'antd';\nimport ProTable, { ProColumns, ColumnsState } from '@ant-design/pro-table';\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\n\nexport interface TableListItem {\n  key: number;\n  name: string;\n  status: string;\n  updatedAt: number;\n  createdAt: number;\n  progress: number;\n  money: number;\n}\nconst tableListDataSource: TableListItem[] = [];\n\nfor (let i = 0; i < 2; i += 1) {\n  tableListDataSource.push({\n    key: i,\n    name: `TradeCode ${i}`,\n    status: valueEnum[Math.floor(Math.random() * 10) % 4],\n    updatedAt: Date.now() - Math.floor(Math.random() * 1000),\n    createdAt: Date.now() - Math.floor(Math.random() * 2000),\n    money: Math.floor(Math.random() * 2000) * i,\n    progress: Math.ceil(Math.random() * 100) + 1,\n  });\n}\n\nconst columns: ProColumns<TableListItem>[] = [\n  {\n    title: '\u6807\u9898',\n    dataIndex: 'name',\n    key: 'name',\n  },\n  {\n    title: '\u72b6\u6001',\n    dataIndex: 'status',\n    initialValue: 'all',\n    width: 100,\n    filters: true,\n    valueEnum: {\n      all: { text: '\u5168\u90e8', status: 'Default' },\n      close: { text: '\u5173\u95ed', status: 'Default' },\n      running: { text: '\u8fd0\u884c\u4e2d', status: 'Processing' },\n      online: { text: '\u5df2\u4e0a\u7ebf', status: 'Success' },\n      error: { text: '\u5f02\u5e38', status: 'Error' },\n    },\n  },\n  {\n    title: '\u521b\u5efa\u65f6\u95f4',\n    key: 'since',\n    dataIndex: 'createdAt',\n    width: 200,\n    valueType: 'dateTime',\n  },\n  {\n    title: '\u66f4\u65b0\u65f6\u95f4',\n    key: 'since2',\n    width: 120,\n    dataIndex: 'createdAt',\n    valueType: 'date',\n  },\n\n  {\n    title: '\u64cd\u4f5c',\n    key: 'option',\n    width: 120,\n    valueType: 'option',\n    render: () => [<a key=\"1\">\u64cd\u4f5c</a>, <a key=\"2\">\u5220\u9664</a>],\n  },\n];\n\nexport default () => {\n  const [columnsStateMap, setColumnsStateMap] = useState<{\n    [key: string]: ColumnsState;\n  }>({\n    name: {\n      show: false,\n    },\n  });\n  return (\n    <>\n      <code>{JSON.stringify(columnsStateMap)}</code>\n      <ProTable<TableListItem, { keyWord?: string }>\n        columns={columns}\n        request={(params) =>\n          Promise.resolve({\n            data: tableListDataSource.filter((item) => {\n              if (!params?.keyWord) {\n                return true;\n              }\n              if (item.name.includes(params?.keyWord) || item.status.includes(params?.keyWord)) {\n                return true;\n              }\n              return false;\n            }),\n            success: true,\n          })\n        }\n        rowKey=\"key\"\n        pagination={{\n          showSizeChanger: true,\n        }}\n        columnsStateMap={columnsStateMap}\n        onColumnsStateChange={(map) => setColumnsStateMap(map)}\n        search={false}\n        dateFormatter=\"string\"\n        headerTitle=\"\u53d7\u63a7\u6a21\u5f0f\"\n        toolBarRender={() => [<Input.Search key=\"search\" placeholder=\"\u8bf7\u8f93\u5165\" />]}\n      />\n    </>\n  );\n};\n"}},dependencies:{react:{version:"16.13.1"},"react-dom":{version:">=16.9.0"},antd:{version:"4.6.6",css:"antd/dist/antd.css"}},background:"#f5f5f5",identifier:"src-table-9"},r.a.createElement(b,null)),r.a.createElement("div",{className:"markdown"},r.a.createElement("h3",{id:"\u8f6e\u8be2"},r.a.createElement(l["AnchorLink"],{to:"#\u8f6e\u8be2","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"\u8f6e\u8be2")),r.a.createElement(o["default"],{sources:{_:{jsx:"import React, { useEffect, useRef } from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Button } from 'antd';\nimport ProTable from '@ant-design/pro-table';\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\nconst tableListDataSource = [];\n\nfor (let i = 0; i < 2; i += 1) {\n  tableListDataSource.push({\n    key: i,\n    name: `TradeCode ${i}`,\n    status: valueEnum[Math.floor(Math.random() * 10) % 4],\n    updatedAt: Date.now() - Math.floor(Math.random() * 1000),\n    createdAt: Date.now() - Math.floor(Math.random() * 2000),\n    money: Math.floor(Math.random() * 2000) * i,\n    progress: Math.ceil(Math.random() * 100) + 1,\n  });\n}\n\nconst timeAwait = waitTime =>\n  new Promise(res =>\n    window.setTimeout(() => {\n      res();\n    }, waitTime),\n  );\n\nconst columns = [\n  {\n    title: '\u5e8f\u53f7',\n    dataIndex: 'index',\n    valueType: 'index',\n    width: 80,\n  },\n  {\n    title: '\u72b6\u6001',\n    dataIndex: 'status',\n    initialValue: 'all',\n    width: 100,\n    filters: true,\n    valueEnum: {\n      all: {\n        text: '\u5168\u90e8',\n        status: 'Default',\n      },\n      close: {\n        text: '\u5173\u95ed',\n        status: 'Default',\n      },\n      running: {\n        text: '\u8fd0\u884c\u4e2d',\n        status: 'Processing',\n      },\n      online: {\n        text: '\u5df2\u4e0a\u7ebf',\n        status: 'Success',\n      },\n      error: {\n        text: '\u5f02\u5e38',\n        status: 'Error',\n      },\n    },\n  },\n  {\n    title: '\u8fdb\u5ea6',\n    key: 'progress',\n    dataIndex: 'progress',\n    valueType: item => ({\n      type: 'progress',\n      status: item.status !== 'error' ? 'active' : 'exception',\n    }),\n  },\n  {\n    title: '\u66f4\u65b0\u65f6\u95f4',\n    key: 'since2',\n    dataIndex: 'createdAt',\n    valueType: 'date',\n    render: dom => ({\n      children: <a>{dom}</a>,\n      props: {\n        colSpan: 5,\n      },\n    }),\n  },\n  {\n    title: '\u521b\u5efa\u65f6\u95f4',\n    key: 'since2',\n    dataIndex: 'createdAt',\n    valueType: 'dateMonth',\n    render: dom => ({\n      children: <a>{dom}</a>,\n      props: {\n        colSpan: 5,\n      },\n    }),\n  },\n];\nexport default () => {\n  const actionRef = useRef(undefined);\n  useEffect(() => {\n    let id = 0;\n\n    const loop = () => {\n      id = window.setTimeout(() => {\n        const { current } = actionRef;\n\n        if (current) {\n          current.reload();\n        }\n\n        loop();\n      }, 5000);\n    };\n\n    loop();\n    return () => {\n      window.clearTimeout(id);\n    };\n  }, []);\n  return (\n    <ProTable\n      columns={columns}\n      rowKey=\"key\"\n      pagination={{\n        showSizeChanger: true,\n      }}\n      actionRef={actionRef}\n      request={async () => {\n        await timeAwait(500);\n        return {\n          data: tableListDataSource,\n          success: true,\n          total: tableListDataSource.length,\n        };\n      }}\n      dateFormatter=\"string\"\n      headerTitle=\"\u8f6e\u8be2\"\n      toolBarRender={() => [\n        <Button key=\"3\" type=\"primary\">\n          <PlusOutlined />\n          \u65b0\u5efa\n        </Button>,\n      ]}\n    />\n  );\n};\n",tsx:"import React, { useEffect, useRef } from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Button } from 'antd';\nimport ProTable, { ProColumns, ActionType } from '@ant-design/pro-table';\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\n\nexport interface TableListItem {\n  key: number;\n  name: string;\n  status: string;\n  updatedAt: number;\n  createdAt: number;\n  progress: number;\n  money: number;\n}\nconst tableListDataSource: TableListItem[] = [];\n\nfor (let i = 0; i < 2; i += 1) {\n  tableListDataSource.push({\n    key: i,\n    name: `TradeCode ${i}`,\n    status: valueEnum[Math.floor(Math.random() * 10) % 4],\n    updatedAt: Date.now() - Math.floor(Math.random() * 1000),\n    createdAt: Date.now() - Math.floor(Math.random() * 2000),\n    money: Math.floor(Math.random() * 2000) * i,\n    progress: Math.ceil(Math.random() * 100) + 1,\n  });\n}\n\nconst timeAwait = (waitTime: number) =>\n  new Promise((res) =>\n    window.setTimeout(() => {\n      res();\n    }, waitTime),\n  );\n\nconst columns: ProColumns<TableListItem>[] = [\n  {\n    title: '\u5e8f\u53f7',\n    dataIndex: 'index',\n    valueType: 'index',\n    width: 80,\n  },\n  {\n    title: '\u72b6\u6001',\n    dataIndex: 'status',\n    initialValue: 'all',\n    width: 100,\n    filters: true,\n    valueEnum: {\n      all: { text: '\u5168\u90e8', status: 'Default' },\n      close: { text: '\u5173\u95ed', status: 'Default' },\n      running: { text: '\u8fd0\u884c\u4e2d', status: 'Processing' },\n      online: { text: '\u5df2\u4e0a\u7ebf', status: 'Success' },\n      error: { text: '\u5f02\u5e38', status: 'Error' },\n    },\n  },\n\n  {\n    title: '\u8fdb\u5ea6',\n    key: 'progress',\n    dataIndex: 'progress',\n    valueType: (item) => ({\n      type: 'progress',\n      status: item.status !== 'error' ? 'active' : 'exception',\n    }),\n  },\n  {\n    title: '\u66f4\u65b0\u65f6\u95f4',\n    key: 'since2',\n    dataIndex: 'createdAt',\n    valueType: 'date',\n    render: (dom) => {\n      return {\n        children: <a>{dom}</a>,\n        props: {\n          colSpan: 5,\n        },\n      };\n    },\n  },\n  {\n    title: '\u521b\u5efa\u65f6\u95f4',\n    key: 'since2',\n    dataIndex: 'createdAt',\n    valueType: 'dateMonth',\n    render: (dom) => {\n      return {\n        children: <a>{dom}</a>,\n        props: {\n          colSpan: 5,\n        },\n      };\n    },\n  },\n];\n\nexport default () => {\n  const actionRef = useRef<ActionType | undefined>(undefined);\n  useEffect(() => {\n    let id = 0;\n    const loop = () => {\n      id = window.setTimeout(() => {\n        const { current } = actionRef;\n        if (current) {\n          current.reload();\n        }\n        loop();\n      }, 5000);\n    };\n    loop();\n    return () => {\n      window.clearTimeout(id);\n    };\n  }, []);\n\n  return (\n    <ProTable<TableListItem>\n      columns={columns}\n      rowKey=\"key\"\n      pagination={{\n        showSizeChanger: true,\n      }}\n      actionRef={actionRef}\n      request={async () => {\n        await timeAwait(500);\n        return {\n          data: tableListDataSource,\n          success: true,\n          total: tableListDataSource.length,\n        };\n      }}\n      dateFormatter=\"string\"\n      headerTitle=\"\u8f6e\u8be2\"\n      toolBarRender={() => [\n        <Button key=\"3\" type=\"primary\">\n          <PlusOutlined />\n          \u65b0\u5efa\n        </Button>,\n      ]}\n    />\n  );\n};\n"}},dependencies:{react:{version:"16.13.1"},"react-dom":{version:">=16.9.0"},antd:{version:"4.6.6",css:"antd/dist/antd.css"},"@ant-design/icons":{version:"4.2.2"}},background:"#f5f5f5",identifier:"src-table-10"},r.a.createElement(E,null)),r.a.createElement("div",{className:"markdown"},r.a.createElement("h3",{id:"\u81ea\u5b9a\u4e49\u8868\u5355\u9879"},r.a.createElement(l["AnchorLink"],{to:"#\u81ea\u5b9a\u4e49\u8868\u5355\u9879","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"\u81ea\u5b9a\u4e49\u8868\u5355\u9879"),r.a.createElement("p",null,"\u5f53\u5185\u7f6e\u7684\u8868\u5355\u9879\u65e0\u6cd5\u6ee1\u8db3\u6211\u4eec\u7684\u57fa\u672c\u9700\u6c42\uff0c\u8fd9\u65f6\u5019\u6211\u4eec\u5c31\u9700\u8981\u6765\u81ea\u5b9a\u4e49\u4e00\u4e0b\u9ed8\u8ba4\u7684\u7ec4\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 ",r.a.createElement("code",null,"fieldProps")," \u548c ",r.a.createElement("code",null,"renderFormItem")," \u914d\u5408\u6765\u4f7f\u7528\u3002"),r.a.createElement("p",null,r.a.createElement("code",null,"fieldProps")," \u53ef\u4ee5\u628a props \u900f\u4f20\uff0c\u53ef\u4ee5\u8bbe\u7f6e select \u7684\u6837\u5f0f\u548c\u591a\u9009\u7b49\u95ee\u9898\u3002"),r.a.createElement("p",null,r.a.createElement("code",null,"renderFormItem")," \u53ef\u4ee5\u5b8c\u6210\u91cd\u5199\u6e32\u67d3\u903b\u8f91\uff0c\u4f20\u5165 item \u548c props \u6765\u8fdb\u884c\u6e32\u67d3\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\u6211\u4eec\u5fc5\u987b\u8981\u5c06 props \u4e2d\u7684 ",r.a.createElement("code",null,"value")," \u548c ",r.a.createElement("code",null,"onChange")," \u5fc5\u987b\u8981\u88ab\u8d4b\u503c\uff0c\u5426\u5219 form \u65e0\u6cd5\u62ff\u5230\u53c2\u6570\u3002"),r.a.createElement(i["a"],{code:"renderFormItem: (_, { type, defaultRender, ...rest }, form) => {\n  if (type === 'form') {\n    return null;\n  }\n  const status = form.getFieldValue('state');\n  if (status !== 'open') {\n    return <Input {...rest} placeholder=\"\u8bf7\u8f93\u5165\" />;\n  }\n  return defaultRender(_);\n};\n",lang:"tsx"}),r.a.createElement("p",null,r.a.createElement("code",null,"renderFormItem")," \u7684\u5b9a\u4e49, \u5177\u4f53\u7684\u503c\u53ef\u4ee5\u6253\u5f00\u63a7\u5236\u53f0\u67e5\u770b\u3002"),r.a.createElement(i["a"],{code:" renderFormItem?: (\n    item: ProColumns<T>,\n    config: {\n      value?: any;\n      onChange?: (value: any) => void;\n      onSelect?: (value: any) => void;\n      type: ProTableTypes;\n      defaultRender: (newItem: ProColumns<any>) => JSX.Element | null;\n    },\n    form: FormInstance,\n  ) => JSX.Element | false | null;\n",lang:"tsx"})),r.a.createElement(o["default"],{sources:{_:{jsx:"import React from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Button, Tag, Space, Input, message } from 'antd';\nimport ProTable, { TableDropdown } from '@ant-design/pro-table';\nimport request from 'umi-request';\n\nconst columns = [\n  {\n    title: '\u5e8f\u53f7',\n    dataIndex: 'index',\n    valueType: 'indexBorder',\n    width: 72,\n  },\n  {\n    title: '\u6807\u9898',\n    dataIndex: 'title',\n    ellipsis: true,\n    width: 200,\n    hideInSearch: true,\n  },\n  {\n    title: '\u72b6\u6001',\n    dataIndex: 'state',\n    initialValue: 'all',\n    filters: true,\n    valueEnum: {\n      all: {\n        text: '\u5168\u90e8',\n        status: 'Default',\n      },\n      open: {\n        text: '\u672a\u89e3\u51b3',\n        status: 'Error',\n      },\n      closed: {\n        text: '\u5df2\u89e3\u51b3',\n        status: 'Success',\n      },\n    },\n  },\n  {\n    title: '\u6392\u5e8f\u65b9\u5f0f',\n    key: 'direction',\n    hideInTable: true,\n    dataIndex: 'direction',\n    filters: true,\n    valueEnum: {\n      asc: '\u6b63\u5e8f',\n      desc: '\u5012\u5e8f',\n    },\n    renderFormItem: (_, { type, defaultRender, ...rest }, form) => {\n      console.log('item:', _);\n      console.log('config:', {\n        type,\n        defaultRender,\n        ...rest,\n      });\n      console.log('form:', form);\n\n      if (type === 'form') {\n        return null;\n      }\n\n      const status = form.getFieldValue('state');\n\n      if (status === 'open') {\n        return <Input placeholder=\"\u8bf7\u8f93\u5165\" />;\n      }\n\n      if (status === 'all') {\n        return false;\n      }\n\n      return defaultRender(_);\n    },\n  },\n  {\n    title: '\u6807\u7b7e',\n    dataIndex: 'labels',\n    width: 120,\n    render: (_, row) => (\n      <Space>\n        {row.labels.map(({ name, id, color }) => (\n          <Tag color={color} key={id}>\n            {name}\n          </Tag>\n        ))}\n      </Space>\n    ),\n  },\n  {\n    title: '\u521b\u5efa\u65f6\u95f4',\n    key: 'since',\n    dataIndex: 'created_at',\n    valueType: 'dateTime',\n  },\n  {\n    title: 'option',\n    valueType: 'option',\n    dataIndex: 'id',\n    render: (text, row) => [\n      <a key=\"show\" href={row.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\n        \u67e5\u770b\n      </a>,\n      <TableDropdown\n        key=\"show\"\n        onSelect={key => message.info(key)}\n        menus={[\n          {\n            key: 'copy',\n            name: '\u590d\u5236',\n          },\n          {\n            key: 'delete',\n            name: '\u5220\u9664',\n          },\n        ]}\n      />,\n    ],\n  },\n];\nexport default () => (\n  <ProTable\n    columns={columns}\n    request={async (params = {}) =>\n      request('https://proapi.azurewebsites.net/github/issues', {\n        params,\n      })\n    }\n    rowKey=\"id\"\n    form={{\n      onValuesChange: (values, all) => {\n        console.log(values, all);\n      },\n    }}\n    dateFormatter=\"string\"\n    headerTitle=\"\u81ea\u5b9a\u4e49\u52a8\u6001\u8868\u683c\"\n    search={{\n      collapsed: false,\n      labelWidth: 65,\n      optionRender: ({ searchText, resetText }, { form }) => [\n        <a\n          key=\"search\"\n          onClick={() => {\n            form?.submit();\n          }}\n        >\n          {searchText}\n        </a>,\n        <a\n          key=\"rest\"\n          onClick={() => {\n            form?.resetFields();\n          }}\n        >\n          {resetText}\n        </a>,\n        <a key=\"out\">\u5bfc\u51fa</a>,\n      ],\n    }}\n    toolBarRender={() => [\n      <Button key=\"3\" type=\"primary\">\n        <PlusOutlined />\n        \u65b0\u5efa\n      </Button>,\n    ]}\n  />\n);\n",tsx:"import React from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Button, Tag, Space, Input, message } from 'antd';\nimport ProTable, { ProColumns, TableDropdown } from '@ant-design/pro-table';\nimport request from 'umi-request';\n\ninterface GithubIssueItem {\n  url: string;\n  repository_url: string;\n  labels_url: string;\n  comments_url: string;\n  events_url: string;\n  html_url: string;\n  id: number;\n  node_id: string;\n  number: number;\n  title: string;\n  user: User;\n  labels: Label[];\n  state: string;\n  locked: boolean;\n  assignee?: any;\n  assignees: any[];\n  milestone?: any;\n  comments: number;\n  created_at: string;\n  updated_at: string;\n  closed_at?: any;\n  author_association: string;\n  body: string;\n}\n\ninterface Label {\n  id: number;\n  node_id: string;\n  url: string;\n  name: string;\n  color: string;\n  default: boolean;\n  description: string;\n}\n\ninterface User {\n  login: string;\n  id: number;\n  node_id: string;\n  avatar_url: string;\n  gravatar_id: string;\n  url: string;\n  html_url: string;\n  followers_url: string;\n  following_url: string;\n  gists_url: string;\n  starred_url: string;\n  subscriptions_url: string;\n  organizations_url: string;\n  repos_url: string;\n  events_url: string;\n  received_events_url: string;\n  type: string;\n  site_admin: boolean;\n}\n\nconst columns: ProColumns<GithubIssueItem>[] = [\n  {\n    title: '\u5e8f\u53f7',\n    dataIndex: 'index',\n    valueType: 'indexBorder',\n    width: 72,\n  },\n  {\n    title: '\u6807\u9898',\n    dataIndex: 'title',\n    ellipsis: true,\n    width: 200,\n    hideInSearch: true,\n  },\n  {\n    title: '\u72b6\u6001',\n    dataIndex: 'state',\n    initialValue: 'all',\n    filters: true,\n    valueEnum: {\n      all: { text: '\u5168\u90e8', status: 'Default' },\n      open: {\n        text: '\u672a\u89e3\u51b3',\n        status: 'Error',\n      },\n      closed: {\n        text: '\u5df2\u89e3\u51b3',\n        status: 'Success',\n      },\n    },\n  },\n  {\n    title: '\u6392\u5e8f\u65b9\u5f0f',\n    key: 'direction',\n    hideInTable: true,\n    dataIndex: 'direction',\n    filters: true,\n    valueEnum: {\n      asc: '\u6b63\u5e8f',\n      desc: '\u5012\u5e8f',\n    },\n    renderFormItem: (_, { type, defaultRender, ...rest }, form) => {\n      console.log('item:', _);\n      console.log('config:', { type, defaultRender, ...rest });\n      console.log('form:', form);\n      if (type === 'form') {\n        return null;\n      }\n      const status = form.getFieldValue('state');\n      if (status === 'open') {\n        return <Input placeholder=\"\u8bf7\u8f93\u5165\" />;\n      }\n      if (status === 'all') {\n        return false;\n      }\n      return defaultRender(_);\n    },\n  },\n  {\n    title: '\u6807\u7b7e',\n    dataIndex: 'labels',\n    width: 120,\n    render: (_, row) => (\n      <Space>\n        {row.labels.map(({ name, id, color }) => (\n          <Tag color={color} key={id}>\n            {name}\n          </Tag>\n        ))}\n      </Space>\n    ),\n  },\n  {\n    title: '\u521b\u5efa\u65f6\u95f4',\n    key: 'since',\n    dataIndex: 'created_at',\n    valueType: 'dateTime',\n  },\n  {\n    title: 'option',\n    valueType: 'option',\n    dataIndex: 'id',\n    render: (text, row) => [\n      <a key=\"show\" href={row.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\n        \u67e5\u770b\n      </a>,\n      <TableDropdown\n        key=\"show\"\n        onSelect={(key) => message.info(key)}\n        menus={[\n          { key: 'copy', name: '\u590d\u5236' },\n          { key: 'delete', name: '\u5220\u9664' },\n        ]}\n      />,\n    ],\n  },\n];\n\nexport default () => (\n  <ProTable<GithubIssueItem>\n    columns={columns}\n    request={async (params = {}) =>\n      request<{\n        data: GithubIssueItem[];\n      }>('https://proapi.azurewebsites.net/github/issues', {\n        params,\n      })\n    }\n    rowKey=\"id\"\n    form={{\n      onValuesChange: (values, all) => {\n        console.log(values, all);\n      },\n    }}\n    dateFormatter=\"string\"\n    headerTitle=\"\u81ea\u5b9a\u4e49\u52a8\u6001\u8868\u683c\"\n    search={{\n      collapsed: false,\n      labelWidth: 65,\n      optionRender: ({ searchText, resetText }, { form }) => [\n        <a\n          key=\"search\"\n          onClick={() => {\n            form?.submit();\n          }}\n        >\n          {searchText}\n        </a>,\n        <a\n          key=\"rest\"\n          onClick={() => {\n            form?.resetFields();\n          }}\n        >\n          {resetText}\n        </a>,\n        <a key=\"out\">\u5bfc\u51fa</a>,\n      ],\n    }}\n    toolBarRender={() => [\n      <Button key=\"3\" type=\"primary\">\n        <PlusOutlined />\n        \u65b0\u5efa\n      </Button>,\n    ]}\n  />\n);\n"}},dependencies:{react:{version:"16.13.1"},"react-dom":{version:">=16.9.0"},antd:{version:"4.6.6",css:"antd/dist/antd.css"},"@ant-design/icons":{version:"4.2.2"},"umi-request":{version:"1.3.5"}},background:"#f5f5f5",identifier:"src-table-11"},r.a.createElement(y,null)),r.a.createElement("div",{className:"markdown"},r.a.createElement("h3",{id:"\u81ea\u5b9a\u4e49\u641c\u7d22\u64cd\u4f5c\u680f"},r.a.createElement(l["AnchorLink"],{to:"#\u81ea\u5b9a\u4e49\u641c\u7d22\u64cd\u4f5c\u680f","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"\u81ea\u5b9a\u4e49\u641c\u7d22\u64cd\u4f5c\u680f")),r.a.createElement(o["default"],{sources:{_:{jsx:"import React from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Button, Tag, Space, message } from 'antd';\nimport ProTable, { TableDropdown } from '@ant-design/pro-table';\nimport request from 'umi-request';\n\nconst columns = [\n  {\n    title: '\u5e8f\u53f7',\n    dataIndex: 'index',\n    valueType: 'indexBorder',\n    width: 72,\n  },\n  {\n    title: '\u6807\u9898',\n    dataIndex: 'title',\n    copyable: true,\n    ellipsis: true,\n    width: 200,\n    hideInSearch: true,\n  },\n  {\n    title: '\u72b6\u6001',\n    dataIndex: 'state',\n    initialValue: 'all',\n    filters: true,\n    valueEnum: {\n      all: {\n        text: '\u5168\u90e8',\n        status: 'Default',\n      },\n      open: {\n        text: '\u672a\u89e3\u51b3',\n        status: 'Error',\n      },\n      closed: {\n        text: '\u5df2\u89e3\u51b3',\n        status: 'Success',\n      },\n    },\n  },\n  {\n    title: '\u6392\u5e8f\u65b9\u5f0f',\n    key: 'direction',\n    hideInTable: true,\n    dataIndex: 'direction',\n    filters: true,\n    valueEnum: {\n      asc: '\u6b63\u5e8f',\n      desc: '\u5012\u5e8f',\n    },\n  },\n  {\n    title: '\u6807\u7b7e',\n    dataIndex: 'labels',\n    width: 120,\n    render: (_, row) => (\n      <Space>\n        {row.labels.map(({ name, id, color }) => (\n          <Tag color={color} key={id}>\n            {name}\n          </Tag>\n        ))}\n      </Space>\n    ),\n  },\n  {\n    title: '\u521b\u5efa\u65f6\u95f4',\n    key: 'since',\n    dataIndex: 'created_at',\n    valueType: 'dateTime',\n  },\n  {\n    title: 'option',\n    valueType: 'option',\n    dataIndex: 'id',\n    render: (text, row) => [\n      <a href={row.html_url} key=\"show\" target=\"_blank\" rel=\"noopener noreferrer\">\n        \u67e5\u770b\n      </a>,\n      <TableDropdown\n        onSelect={key => message.info(key)}\n        menus={[\n          {\n            key: 'copy',\n            name: '\u590d\u5236',\n          },\n          {\n            key: 'delete',\n            name: '\u5220\u9664',\n          },\n        ]}\n      />,\n    ],\n  },\n];\nexport default () => (\n  <ProTable\n    columns={columns}\n    request={async (params = {}) =>\n      request('https://proapi.azurewebsites.net/github/issues', {\n        params,\n      })\n    }\n    rowKey=\"id\"\n    dateFormatter=\"string\"\n    headerTitle=\"\u67e5\u8be2 Table\"\n    search={{\n      collapsed: false,\n      optionRender: ({ searchText, resetText }, { form }) => [\n        <a\n          key=\"searchText\"\n          onClick={() => {\n            form?.submit();\n          }}\n        >\n          {searchText}\n        </a>,\n        <a\n          key=\"resetText\"\n          onClick={() => {\n            form?.resetFields();\n          }}\n        >\n          {resetText}\n        </a>,\n        <a key=\"out\">\u5bfc\u51fa</a>,\n      ],\n    }}\n    toolBarRender={() => [\n      <Button key=\"3\" type=\"primary\">\n        <PlusOutlined />\n        \u65b0\u5efa\n      </Button>,\n    ]}\n  />\n);\n",tsx:"import React from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Button, Tag, Space, message } from 'antd';\nimport ProTable, { ProColumns, TableDropdown } from '@ant-design/pro-table';\nimport request from 'umi-request';\n\ninterface GithubIssueItem {\n  url: string;\n  repository_url: string;\n  labels_url: string;\n  comments_url: string;\n  events_url: string;\n  html_url: string;\n  id: number;\n  node_id: string;\n  number: number;\n  title: string;\n  user: User;\n  labels: Label[];\n  state: string;\n  locked: boolean;\n  assignee?: any;\n  assignees: any[];\n  milestone?: any;\n  comments: number;\n  created_at: string;\n  updated_at: string;\n  closed_at?: any;\n  author_association: string;\n  body: string;\n}\n\ninterface Label {\n  id: number;\n  node_id: string;\n  url: string;\n  name: string;\n  color: string;\n  default: boolean;\n  description: string;\n}\n\ninterface User {\n  login: string;\n  id: number;\n  node_id: string;\n  avatar_url: string;\n  gravatar_id: string;\n  url: string;\n  html_url: string;\n  followers_url: string;\n  following_url: string;\n  gists_url: string;\n  starred_url: string;\n  subscriptions_url: string;\n  organizations_url: string;\n  repos_url: string;\n  events_url: string;\n  received_events_url: string;\n  type: string;\n  site_admin: boolean;\n}\n\nconst columns: ProColumns<GithubIssueItem>[] = [\n  {\n    title: '\u5e8f\u53f7',\n    dataIndex: 'index',\n    valueType: 'indexBorder',\n    width: 72,\n  },\n  {\n    title: '\u6807\u9898',\n    dataIndex: 'title',\n    copyable: true,\n    ellipsis: true,\n    width: 200,\n    hideInSearch: true,\n  },\n  {\n    title: '\u72b6\u6001',\n    dataIndex: 'state',\n    initialValue: 'all',\n    filters: true,\n    valueEnum: {\n      all: { text: '\u5168\u90e8', status: 'Default' },\n      open: {\n        text: '\u672a\u89e3\u51b3',\n        status: 'Error',\n      },\n      closed: {\n        text: '\u5df2\u89e3\u51b3',\n        status: 'Success',\n      },\n    },\n  },\n  {\n    title: '\u6392\u5e8f\u65b9\u5f0f',\n    key: 'direction',\n    hideInTable: true,\n    dataIndex: 'direction',\n    filters: true,\n    valueEnum: {\n      asc: '\u6b63\u5e8f',\n      desc: '\u5012\u5e8f',\n    },\n  },\n  {\n    title: '\u6807\u7b7e',\n    dataIndex: 'labels',\n    width: 120,\n    render: (_, row) => (\n      <Space>\n        {row.labels.map(({ name, id, color }) => (\n          <Tag color={color} key={id}>\n            {name}\n          </Tag>\n        ))}\n      </Space>\n    ),\n  },\n  {\n    title: '\u521b\u5efa\u65f6\u95f4',\n    key: 'since',\n    dataIndex: 'created_at',\n    valueType: 'dateTime',\n  },\n  {\n    title: 'option',\n    valueType: 'option',\n    dataIndex: 'id',\n    render: (text, row) => [\n      <a href={row.html_url} key=\"show\" target=\"_blank\" rel=\"noopener noreferrer\">\n        \u67e5\u770b\n      </a>,\n      <TableDropdown\n        onSelect={(key) => message.info(key)}\n        menus={[\n          { key: 'copy', name: '\u590d\u5236' },\n          { key: 'delete', name: '\u5220\u9664' },\n        ]}\n      />,\n    ],\n  },\n];\n\nexport default () => (\n  <ProTable<GithubIssueItem>\n    columns={columns}\n    request={async (params = {}) =>\n      request<{\n        data: GithubIssueItem[];\n      }>('https://proapi.azurewebsites.net/github/issues', {\n        params,\n      })\n    }\n    rowKey=\"id\"\n    dateFormatter=\"string\"\n    headerTitle=\"\u67e5\u8be2 Table\"\n    search={{\n      collapsed: false,\n      optionRender: ({ searchText, resetText }, { form }) => {\n        return [\n          <a\n            key=\"searchText\"\n            onClick={() => {\n              form?.submit();\n            }}\n          >\n            {searchText}\n          </a>,\n          <a\n            key=\"resetText\"\n            onClick={() => {\n              form?.resetFields();\n            }}\n          >\n            {resetText}\n          </a>,\n          <a key=\"out\">\u5bfc\u51fa</a>,\n        ];\n      },\n    }}\n    toolBarRender={() => [\n      <Button key=\"3\" type=\"primary\">\n        <PlusOutlined />\n        \u65b0\u5efa\n      </Button>,\n    ]}\n  />\n);\n"}},dependencies:{react:{version:"16.13.1"},"react-dom":{version:">=16.9.0"},antd:{version:"4.6.6",css:"antd/dist/antd.css"},"@ant-design/icons":{version:"4.2.2"},"umi-request":{version:"1.3.5"}},background:"#f5f5f5",identifier:"src-table-12"},r.a.createElement(x,null)),r.a.createElement("div",{className:"markdown"},r.a.createElement("h3",{id:"\u81ea\u5b9a\u4e49\u5de5\u5177\u680f\u6e32\u67d3"},r.a.createElement(l["AnchorLink"],{to:"#\u81ea\u5b9a\u4e49\u5de5\u5177\u680f\u6e32\u67d3","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"\u81ea\u5b9a\u4e49\u5de5\u5177\u680f\u6e32\u67d3"),r.a.createElement("p",null,"\u4f7f\u7528 ",r.a.createElement("code",null,"toolbar"),"\u5c5e\u6027\u6269\u5c55\u914d\u7f6e\u5de5\u5177\u680f\u6e32\u67d3\u3002")),r.a.createElement(o["default"],{sources:{_:{jsx:"import React from 'react';\nimport { Button, Badge } from 'antd';\nimport { DownOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport { LightFilter, ProFormDatePicker } from '@ant-design/pro-form';\nimport ProTable from '@ant-design/pro-table';\n\nconst tableListDataSource = [];\nconst creators = ['\u4ed8\u5c0f\u5c0f', '\u66f2\u4e3d\u4e3d', '\u6797\u4e1c\u4e1c', '\u9648\u5e05\u5e05', '\u517c\u67d0\u67d0'];\n\nfor (let i = 0; i < 5; i += 1) {\n  tableListDataSource.push({\n    key: i,\n    name: 'AppName',\n    containers: Math.floor(Math.random() * 20),\n    creator: creators[Math.floor(Math.random() * creators.length)],\n  });\n}\n\nconst columns = [\n  {\n    title: '\u5e94\u7528\u540d\u79f0',\n    dataIndex: 'name',\n    render: _ => <a>{_}</a>,\n  },\n  {\n    title: '\u5bb9\u5668\u6570\u91cf',\n    dataIndex: 'containers',\n    align: 'right',\n    sorter: (a, b) => a.containers - b.containers,\n  },\n  {\n    title: '\u521b\u5efa\u8005',\n    dataIndex: 'creator',\n    valueEnum: {\n      all: {\n        text: '\u5168\u90e8',\n      },\n      \u4ed8\u5c0f\u5c0f: {\n        text: '\u4ed8\u5c0f\u5c0f',\n      },\n      \u66f2\u4e3d\u4e3d: {\n        text: '\u66f2\u4e3d\u4e3d',\n      },\n      \u6797\u4e1c\u4e1c: {\n        text: '\u6797\u4e1c\u4e1c',\n      },\n      \u9648\u5e05\u5e05: {\n        text: '\u9648\u5e05\u5e05',\n      },\n      \u517c\u67d0\u67d0: {\n        text: '\u517c\u67d0\u67d0',\n      },\n    },\n  },\n  {\n    title: '\u64cd\u4f5c',\n    key: 'option',\n    valueType: 'option',\n    render: () => [\n      <a key=\"link\">\u94fe\u8def</a>,\n      <a key=\"warn\">\u62a5\u8b66</a>,\n      <a key=\"more\">\n        <EllipsisOutlined />\n      </a>,\n    ],\n  },\n];\n\nconst renderBadge = count => (\n  <Badge\n    count={count}\n    style={{\n      marginTop: -4,\n      marginLeft: 4,\n      color: '#999',\n      backgroundColor: '#eee',\n    }}\n  />\n);\n\nexport default () => (\n  <ProTable\n    columns={columns}\n    request={(params, sorter, filter) => {\n      // \u8868\u5355\u641c\u7d22\u9879\u4f1a\u4ece params \u4f20\u5165\uff0c\u4f20\u9012\u7ed9\u540e\u7aef\u63a5\u53e3\u3002\n      console.log(params, sorter, filter);\n      return Promise.resolve({\n        data: tableListDataSource,\n        success: true,\n      });\n    }}\n    toolbar={{\n      multipleLine: true,\n      filter: (\n        <LightFilter\n          style={{\n            marginTop: 8,\n          }}\n        >\n          <ProFormDatePicker name=\"startdate\" label=\"\u54cd\u5e94\u65e5\u671f\" />\n        </LightFilter>\n      ),\n      tabs: {\n        items: [\n          {\n            key: 'tab1',\n            tab: '\u6807\u7b7e\u4e00',\n          },\n          {\n            key: 'tab2',\n            tab: '\u6807\u7b7e\u4e8c',\n          },\n        ],\n      },\n      menu: {\n        type: 'inline',\n        items: [\n          {\n            label: <span>\u5168\u90e8\u5e94\u7528{renderBadge(101)}</span>,\n            key: 'all',\n          },\n          {\n            label: <span>\u6211\u521b\u5efa\u7684\u5e94\u7528{renderBadge(3)}</span>,\n            key: 'todo',\n          },\n        ],\n      },\n      actions: [\n        <Button key=\"primary\" type=\"primary\">\n          \u65b0\u5efa\u5e94\u7528\n        </Button>,\n      ],\n    }}\n    rowKey=\"key\"\n    pagination={{\n      showQuickJumper: true,\n    }}\n    search={false}\n    dateFormatter=\"string\"\n    toolBarRender={() => [\n      <Button key=\"show\">\u67e5\u770b\u65e5\u5fd7</Button>,\n      <Button key=\"out\">\n        \u5bfc\u51fa\u6570\u636e\n        <DownOutlined />\n      </Button>,\n      <Button key=\"primary\" type=\"primary\">\n        \u521b\u5efa\u5e94\u7528\n      </Button>,\n    ]}\n  />\n);\n",tsx:"import React from 'react';\nimport { Button, Badge } from 'antd';\nimport { DownOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport { LightFilter, ProFormDatePicker } from '@ant-design/pro-form';\nimport ProTable, { ProColumns } from '@ant-design/pro-table';\n\nexport interface TableListItem {\n  key: number;\n  name: string;\n  containers: number;\n  creator: string;\n}\nconst tableListDataSource: TableListItem[] = [];\n\nconst creators = ['\u4ed8\u5c0f\u5c0f', '\u66f2\u4e3d\u4e3d', '\u6797\u4e1c\u4e1c', '\u9648\u5e05\u5e05', '\u517c\u67d0\u67d0'];\n\nfor (let i = 0; i < 5; i += 1) {\n  tableListDataSource.push({\n    key: i,\n    name: 'AppName',\n    containers: Math.floor(Math.random() * 20),\n    creator: creators[Math.floor(Math.random() * creators.length)],\n  });\n}\n\nconst columns: ProColumns<TableListItem>[] = [\n  {\n    title: '\u5e94\u7528\u540d\u79f0',\n    dataIndex: 'name',\n    render: (_) => <a>{_}</a>,\n  },\n  {\n    title: '\u5bb9\u5668\u6570\u91cf',\n    dataIndex: 'containers',\n    align: 'right',\n    sorter: (a, b) => a.containers - b.containers,\n  },\n  {\n    title: '\u521b\u5efa\u8005',\n    dataIndex: 'creator',\n    valueEnum: {\n      all: { text: '\u5168\u90e8' },\n      \u4ed8\u5c0f\u5c0f: { text: '\u4ed8\u5c0f\u5c0f' },\n      \u66f2\u4e3d\u4e3d: { text: '\u66f2\u4e3d\u4e3d' },\n      \u6797\u4e1c\u4e1c: { text: '\u6797\u4e1c\u4e1c' },\n      \u9648\u5e05\u5e05: { text: '\u9648\u5e05\u5e05' },\n      \u517c\u67d0\u67d0: { text: '\u517c\u67d0\u67d0' },\n    },\n  },\n  {\n    title: '\u64cd\u4f5c',\n    key: 'option',\n    valueType: 'option',\n    render: () => [\n      <a key=\"link\">\u94fe\u8def</a>,\n      <a key=\"warn\">\u62a5\u8b66</a>,\n      <a key=\"more\">\n        <EllipsisOutlined />\n      </a>,\n    ],\n  },\n];\n\nconst renderBadge = (count: number) => {\n  return (\n    <Badge\n      count={count}\n      style={{\n        marginTop: -4,\n        marginLeft: 4,\n        color: '#999',\n        backgroundColor: '#eee',\n      }}\n    />\n  );\n};\n\nexport default () => {\n  return (\n    <ProTable<TableListItem>\n      columns={columns}\n      request={(params, sorter, filter) => {\n        // \u8868\u5355\u641c\u7d22\u9879\u4f1a\u4ece params \u4f20\u5165\uff0c\u4f20\u9012\u7ed9\u540e\u7aef\u63a5\u53e3\u3002\n        console.log(params, sorter, filter);\n        return Promise.resolve({\n          data: tableListDataSource,\n          success: true,\n        });\n      }}\n      toolbar={{\n        multipleLine: true,\n        filter: (\n          <LightFilter style={{ marginTop: 8 }}>\n            <ProFormDatePicker name=\"startdate\" label=\"\u54cd\u5e94\u65e5\u671f\" />\n          </LightFilter>\n        ),\n        tabs: {\n          items: [\n            {\n              key: 'tab1',\n              tab: '\u6807\u7b7e\u4e00',\n            },\n            {\n              key: 'tab2',\n              tab: '\u6807\u7b7e\u4e8c',\n            },\n          ],\n        },\n        menu: {\n          type: 'inline',\n          items: [\n            {\n              label: <span>\u5168\u90e8\u5e94\u7528{renderBadge(101)}</span>,\n              key: 'all',\n            },\n            {\n              label: <span>\u6211\u521b\u5efa\u7684\u5e94\u7528{renderBadge(3)}</span>,\n              key: 'todo',\n            },\n          ],\n        },\n        actions: [\n          <Button key=\"primary\" type=\"primary\">\n            \u65b0\u5efa\u5e94\u7528\n          </Button>,\n        ],\n      }}\n      rowKey=\"key\"\n      pagination={{\n        showQuickJumper: true,\n      }}\n      search={false}\n      dateFormatter=\"string\"\n      toolBarRender={() => [\n        <Button key=\"show\">\u67e5\u770b\u65e5\u5fd7</Button>,\n        <Button key=\"out\">\n          \u5bfc\u51fa\u6570\u636e\n          <DownOutlined />\n        </Button>,\n        <Button key=\"primary\" type=\"primary\">\n          \u521b\u5efa\u5e94\u7528\n        </Button>,\n      ]}\n    />\n  );\n};\n"}},dependencies:{react:{version:"16.13.1"},"react-dom":{version:">=16.9.0"},antd:{version:"4.6.6",css:"antd/dist/antd.css"},"@ant-design/icons":{version:"4.2.2"}},background:"#f5f5f5",identifier:"src-table-13"},r.a.createElement(k,null)),r.a.createElement("div",{className:"markdown"},r.a.createElement("h3",{id:"\u81ea\u5b9a\u4e49\u8868\u683c\u4e3b\u4f53"},r.a.createElement(l["AnchorLink"],{to:"#\u81ea\u5b9a\u4e49\u8868\u683c\u4e3b\u4f53","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"\u81ea\u5b9a\u4e49\u8868\u683c\u4e3b\u4f53")),r.a.createElement(o["default"],{sources:{_:{jsx:"import React, { useState, useEffect } from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Button, Result, Card, Descriptions } from 'antd';\nimport ProTable from '@ant-design/pro-table';\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\nconst tableListDataSource = [];\n\nfor (let i = 0; i < 2; i += 1) {\n  tableListDataSource.push({\n    key: i,\n    name: `TradeCode ${i}`,\n    status: valueEnum[Math.floor(Math.random() * 10) % 4],\n    updatedAt: Date.now() - Math.floor(Math.random() * 1000),\n    createdAt: Date.now() - Math.floor(Math.random() * 2000),\n    money: Math.floor(Math.random() * 2000) * i,\n    progress: Math.ceil(Math.random() * 100) + 1,\n  });\n}\n\nconst columns = [\n  {\n    title: '\u5e8f\u53f7',\n    dataIndex: 'index',\n    valueType: 'index',\n    width: 80,\n  },\n  {\n    title: '\u72b6\u6001',\n    dataIndex: 'status',\n    initialValue: 'all',\n    width: 100,\n    filters: true,\n    valueEnum: {\n      all: {\n        text: '\u5168\u90e8',\n        status: 'Default',\n      },\n      close: {\n        text: '\u5173\u95ed',\n        status: 'Default',\n      },\n      running: {\n        text: '\u8fd0\u884c\u4e2d',\n        status: 'Processing',\n      },\n      online: {\n        text: '\u5df2\u4e0a\u7ebf',\n        status: 'Success',\n      },\n      error: {\n        text: '\u5f02\u5e38',\n        status: 'Error',\n      },\n    },\n  },\n  {\n    title: '\u8fdb\u5ea6',\n    key: 'progress',\n    dataIndex: 'progress',\n    valueType: item => ({\n      type: 'progress',\n      status: item.status !== 'error' ? 'active' : 'exception',\n    }),\n    width: 200,\n  },\n  {\n    title: '\u66f4\u65b0\u65f6\u95f4',\n    key: 'since2',\n    width: 120,\n    dataIndex: 'createdAt',\n    valueType: 'date',\n  },\n];\nexport default () => {\n  const [loading, setLoading] = useState(true);\n  const [dataSource, setDataSource] = useState([]);\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n      setDataSource(tableListDataSource);\n    }, 5000);\n  }, []);\n  return (\n    <ProTable\n      columns={columns}\n      rowKey=\"key\"\n      pagination={{\n        showSizeChanger: true,\n      }}\n      tableRender={(_, dom) => (\n        <div\n          style={{\n            display: 'flex',\n            width: '100%',\n          }}\n        >\n          <Result status=\"404\" title=\"404\" subTitle=\"404\" />\n          <div\n            style={{\n              flex: 1,\n            }}\n          >\n            {dom}\n          </div>\n        </div>\n      )}\n      tableExtraRender={(_, data) => (\n        <Card>\n          <Descriptions size=\"small\" column={3}>\n            <Descriptions.Item label=\"Row\">{data.length}</Descriptions.Item>\n            <Descriptions.Item label=\"Created\">Lili Qu</Descriptions.Item>\n            <Descriptions.Item label=\"Association\">\n              <a>421421</a>\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Creation Time\">2017-01-10</Descriptions.Item>\n            <Descriptions.Item label=\"Effective Time\">2017-10-10</Descriptions.Item>\n            <Descriptions.Item label=\"Remarks\">\n              Gonghu Road, Xihu District, Hangzhou, Zhejiang, China\n            </Descriptions.Item>\n          </Descriptions>\n        </Card>\n      )}\n      loading={loading}\n      dataSource={dataSource}\n      options={{\n        density: true,\n        reload: () => {\n          setLoading(true);\n          setTimeout(() => {\n            setLoading(false);\n          }, 1000);\n        },\n        fullScreen: true,\n        setting: true,\n      }}\n      dateFormatter=\"string\"\n      headerTitle=\"dataSource \u548c loading\"\n      toolBarRender={() => [\n        <Button key=\"3\" type=\"primary\">\n          <PlusOutlined />\n          \u65b0\u5efa\n        </Button>,\n      ]}\n    />\n  );\n};\n",tsx:"import React, { useState, useEffect } from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Button, Result, Card, Descriptions } from 'antd';\nimport ProTable, { ProColumns } from '@ant-design/pro-table';\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\n\nexport interface TableListItem {\n  key: number;\n  name: string;\n  status: string;\n  updatedAt: number;\n  createdAt: number;\n  progress: number;\n  money: number;\n}\nconst tableListDataSource: TableListItem[] = [];\n\nfor (let i = 0; i < 2; i += 1) {\n  tableListDataSource.push({\n    key: i,\n    name: `TradeCode ${i}`,\n    status: valueEnum[Math.floor(Math.random() * 10) % 4],\n    updatedAt: Date.now() - Math.floor(Math.random() * 1000),\n    createdAt: Date.now() - Math.floor(Math.random() * 2000),\n    money: Math.floor(Math.random() * 2000) * i,\n    progress: Math.ceil(Math.random() * 100) + 1,\n  });\n}\n\nconst columns: ProColumns<TableListItem>[] = [\n  {\n    title: '\u5e8f\u53f7',\n    dataIndex: 'index',\n    valueType: 'index',\n    width: 80,\n  },\n  {\n    title: '\u72b6\u6001',\n    dataIndex: 'status',\n    initialValue: 'all',\n    width: 100,\n    filters: true,\n    valueEnum: {\n      all: { text: '\u5168\u90e8', status: 'Default' },\n      close: { text: '\u5173\u95ed', status: 'Default' },\n      running: { text: '\u8fd0\u884c\u4e2d', status: 'Processing' },\n      online: { text: '\u5df2\u4e0a\u7ebf', status: 'Success' },\n      error: { text: '\u5f02\u5e38', status: 'Error' },\n    },\n  },\n  {\n    title: '\u8fdb\u5ea6',\n    key: 'progress',\n    dataIndex: 'progress',\n    valueType: (item) => ({\n      type: 'progress',\n      status: item.status !== 'error' ? 'active' : 'exception',\n    }),\n    width: 200,\n  },\n  {\n    title: '\u66f4\u65b0\u65f6\u95f4',\n    key: 'since2',\n    width: 120,\n    dataIndex: 'createdAt',\n    valueType: 'date',\n  },\n];\n\nexport default () => {\n  const [loading, setLoading] = useState(true);\n  const [dataSource, setDataSource] = useState<TableListItem[]>([]);\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n      setDataSource(tableListDataSource);\n    }, 5000);\n  }, []);\n\n  return (\n    <ProTable<TableListItem>\n      columns={columns}\n      rowKey=\"key\"\n      pagination={{\n        showSizeChanger: true,\n      }}\n      tableRender={(_, dom) => (\n        <div\n          style={{\n            display: 'flex',\n            width: '100%',\n          }}\n        >\n          <Result status=\"404\" title=\"404\" subTitle=\"404\" />\n          <div\n            style={{\n              flex: 1,\n            }}\n          >\n            {dom}\n          </div>\n        </div>\n      )}\n      tableExtraRender={(_, data) => (\n        <Card>\n          <Descriptions size=\"small\" column={3}>\n            <Descriptions.Item label=\"Row\">{data.length}</Descriptions.Item>\n            <Descriptions.Item label=\"Created\">Lili Qu</Descriptions.Item>\n            <Descriptions.Item label=\"Association\">\n              <a>421421</a>\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Creation Time\">2017-01-10</Descriptions.Item>\n            <Descriptions.Item label=\"Effective Time\">2017-10-10</Descriptions.Item>\n            <Descriptions.Item label=\"Remarks\">\n              Gonghu Road, Xihu District, Hangzhou, Zhejiang, China\n            </Descriptions.Item>\n          </Descriptions>\n        </Card>\n      )}\n      loading={loading}\n      dataSource={dataSource}\n      options={{\n        density: true,\n        reload: () => {\n          setLoading(true);\n          setTimeout(() => {\n            setLoading(false);\n          }, 1000);\n        },\n        fullScreen: true,\n        setting: true,\n      }}\n      dateFormatter=\"string\"\n      headerTitle=\"dataSource \u548c loading\"\n      toolBarRender={() => [\n        <Button key=\"3\" type=\"primary\">\n          <PlusOutlined />\n          \u65b0\u5efa\n        </Button>,\n      ]}\n    />\n  );\n};\n"}},dependencies:{react:{version:"16.13.1"},"react-dom":{version:">=16.9.0"},antd:{version:"4.6.6",css:"antd/dist/antd.css"},"@ant-design/icons":{version:"4.2.2"}},background:"#f5f5f5",identifier:"src-table-14"},r.a.createElement(T,null)),r.a.createElement("div",{className:"markdown"},r.a.createElement("h3",{id:"\u56fd\u9645\u5316\u793a\u4f8b"},r.a.createElement(l["AnchorLink"],{to:"#\u56fd\u9645\u5316\u793a\u4f8b","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"\u56fd\u9645\u5316\u793a\u4f8b"),r.a.createElement("p",null,"ProTable \u5185\u7f6e\u4e86\u56fd\u9645\u5316\u7684\u652f\u6301\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u6587\u672c\u91cf\u6bd4\u8f83\u5c11\u7684\u7ec4\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u81ea\u884c\u5b9e\u73b0\u56fd\u9645\u5316\uff0c\u6210\u672c\u4e5f\u5f88\u4f4e\u3002"),r.a.createElement("p",null,"\u8fd9\u91cc\u662f\u5168\u91cf\u7684\u6587\u672c"),r.a.createElement(i["a"],{code:"const enLocale = {\n  tableFrom: {\n    search: 'Query',\n    reset: 'Reset',\n    submit: 'Submit',\n    collapsed: 'Expand',\n    expand: 'Collapse',\n    inputPlaceholder: 'Please enter',\n    selectPlaceholder: 'Please select',\n  },\n  alert: {\n    clear: 'Clear',\n  },\n  tableToolBar: {\n    leftPin: 'Pin to left',\n    rightPin: 'Pin to right',\n    noPin: 'Unpinned',\n    leftFixedTitle: 'Fixed the left',\n    rightFixedTitle: 'Fixed the right',\n    noFixedTitle: 'Not Fixed',\n    reset: 'Reset',\n    columnDisplay: 'Column Display',\n    columnSetting: 'Settings',\n    fullScreen: 'Full Screen',\n    exitFullScreen: 'Exit Full Screen',\n    reload: 'Refresh',\n    density: 'Density',\n    densityDefault: 'Default',\n    densityLarger: 'Larger',\n    densityMiddle: 'Middle',\n    densitySmall: 'Compact',\n  },\n};\n\n// \u751f\u6210 intl \u5bf9\u8c61\nconst enUSIntl = createIntl('en_US', enUS);\n\n// \u4f7f\u7528\n<IntlProvider value={enUSIntl}>\n  <ProTable />\n</IntlProvider>;\n",lang:"typescript"})),r.a.createElement(o["default"],{sources:{_:{jsx:"import React, { useRef, useState } from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Button, Tag, Select } from 'antd';\nimport ConfigProvider from 'antd/lib/config-provider';\nimport ProTable, { TableDropdown } from '@ant-design/pro-table';\nimport request from 'umi-request';\nimport enUSIntl from 'antd/lib/locale/en_US';\nimport zhCNIntl from 'antd/lib/locale/zh_CN';\nimport viVNIntl from 'antd/lib/locale/vi_VN';\nimport itITIntl from 'antd/lib/locale/it_IT';\nimport jaJPIntl from 'antd/lib/locale/ja_JP';\nimport esESIntl from 'antd/lib/locale/es_ES';\nimport ruRUIntl from 'antd/lib/locale/ru_RU';\nimport msMYIntl from 'antd/lib/locale/ms_MY';\nimport zhTWIntl from 'antd/lib/locale/zh_TW';\nimport frFRIntl from 'antd/lib/locale/fr_FR';\nimport ptBRIntl from 'antd/lib/locale/pt_BR';\n\nconst intlMap = {\n  zhCNIntl,\n  enUSIntl,\n  viVNIntl,\n  itITIntl,\n  jaJPIntl,\n  esESIntl,\n  ruRUIntl,\n  msMYIntl,\n  zhTWIntl,\n  frFRIntl,\n  ptBRIntl,\n};\nconst columns = [\n  {\n    title: 'index',\n    dataIndex: 'index',\n    valueType: 'indexBorder',\n    width: 72,\n  },\n  {\n    title: 'Title',\n    dataIndex: 'title',\n    copyable: true,\n    ellipsis: true,\n    width: 200,\n    hideInSearch: true,\n  },\n  {\n    title: 'Money',\n    dataIndex: 'title',\n    width: 100,\n    valueType: 'money',\n    renderText: () => (Math.random() * 100).toFixed(2),\n  },\n  {\n    title: 'Status',\n    dataIndex: 'state',\n    initialValue: 'all',\n    filters: true,\n    valueEnum: {\n      all: {\n        text: 'ALL',\n        status: 'Default',\n      },\n      open: {\n        text: 'Error',\n        status: 'Error',\n      },\n      closed: {\n        text: 'Success',\n        status: 'Success',\n      },\n    },\n  },\n  {\n    title: 'Labels',\n    dataIndex: 'labels',\n    width: 80,\n    render: (_, row) =>\n      row.labels.map(({ name, id, color }) => (\n        <Tag\n          color={color}\n          key={id}\n          style={{\n            margin: 4,\n          }}\n        >\n          {name}\n        </Tag>\n      )),\n  },\n  {\n    title: 'Created Time',\n    key: 'since',\n    dataIndex: 'created_at',\n    valueType: 'dateTime',\n  },\n  {\n    title: 'option',\n    valueType: 'option',\n    dataIndex: 'id',\n    render: (text, row, _, action) => [\n      <a href={row.html_url} key=\"show\" target=\"_blank\" rel=\"noopener noreferrer\">\n        show\n      </a>,\n      <TableDropdown\n        key=\"more\"\n        onSelect={() => action.reload()}\n        menus={[\n          {\n            key: 'copy',\n            name: 'copy',\n          },\n          {\n            key: 'delete',\n            name: 'delete',\n          },\n        ]}\n      />,\n    ],\n  },\n];\nexport default () => {\n  const actionRef = useRef();\n  const [intl, setIntl] = useState('zhCNIntl');\n  return (\n    <>\n      <Select\n        style={{\n          width: 200,\n        }}\n        value={intl}\n        onChange={value => setIntl(value)}\n        options={Object.keys(intlMap).map(value => ({\n          value,\n          label: value,\n        }))}\n      />\n      <ConfigProvider locale={intlMap[intl]}>\n        <ProTable\n          columns={columns}\n          actionRef={actionRef}\n          request={async (params = {}) =>\n            request('https://proapi.azurewebsites.net/github/issues', {\n              params,\n            })\n          }\n          rowKey=\"id\"\n          rowSelection={{}}\n          pagination={{\n            showSizeChanger: true,\n          }}\n          dateFormatter=\"string\"\n          headerTitle=\"Basic Table\"\n          toolBarRender={() => [\n            <Button key=\"3\" type=\"primary\">\n              <PlusOutlined />\n              New\n            </Button>,\n          ]}\n        />\n      </ConfigProvider>\n    </>\n  );\n};\n",tsx:"import React, { useRef, useState } from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Button, Tag, Select } from 'antd';\nimport ConfigProvider from 'antd/lib/config-provider';\nimport ProTable, { ProColumns, TableDropdown, ActionType } from '@ant-design/pro-table';\nimport request from 'umi-request';\n\nimport enUSIntl from 'antd/lib/locale/en_US';\nimport zhCNIntl from 'antd/lib/locale/zh_CN';\nimport viVNIntl from 'antd/lib/locale/vi_VN';\nimport itITIntl from 'antd/lib/locale/it_IT';\nimport jaJPIntl from 'antd/lib/locale/ja_JP';\nimport esESIntl from 'antd/lib/locale/es_ES';\nimport ruRUIntl from 'antd/lib/locale/ru_RU';\nimport msMYIntl from 'antd/lib/locale/ms_MY';\nimport zhTWIntl from 'antd/lib/locale/zh_TW';\nimport frFRIntl from 'antd/lib/locale/fr_FR';\nimport ptBRIntl from 'antd/lib/locale/pt_BR';\n\nconst intlMap = {\n  zhCNIntl,\n  enUSIntl,\n  viVNIntl,\n  itITIntl,\n  jaJPIntl,\n  esESIntl,\n  ruRUIntl,\n  msMYIntl,\n  zhTWIntl,\n  frFRIntl,\n  ptBRIntl,\n};\n\ninterface GithubIssueItem {\n  url: string;\n  repository_url: string;\n  labels_url: string;\n  comments_url: string;\n  events_url: string;\n  html_url: string;\n  id: number;\n  node_id: string;\n  number: number;\n  title: string;\n  user: User;\n  labels: Label[];\n  state: string;\n  locked: boolean;\n  assignee?: any;\n  assignees: any[];\n  milestone?: any;\n  comments: number;\n  created_at: string;\n  updated_at: string;\n  closed_at?: any;\n  author_association: string;\n  body: string;\n}\n\ninterface Label {\n  id: number;\n  node_id: string;\n  url: string;\n  name: string;\n  color: string;\n  default: boolean;\n  description: string;\n}\n\ninterface User {\n  login: string;\n  id: number;\n  node_id: string;\n  avatar_url: string;\n  gravatar_id: string;\n  url: string;\n  html_url: string;\n  followers_url: string;\n  following_url: string;\n  gists_url: string;\n  starred_url: string;\n  subscriptions_url: string;\n  organizations_url: string;\n  repos_url: string;\n  events_url: string;\n  received_events_url: string;\n  type: string;\n  site_admin: boolean;\n}\n\nconst columns: ProColumns<GithubIssueItem>[] = [\n  {\n    title: 'index',\n    dataIndex: 'index',\n    valueType: 'indexBorder',\n    width: 72,\n  },\n  {\n    title: 'Title',\n    dataIndex: 'title',\n    copyable: true,\n    ellipsis: true,\n    width: 200,\n    hideInSearch: true,\n  },\n  {\n    title: 'Money',\n    dataIndex: 'title',\n    width: 100,\n    valueType: 'money',\n    renderText: () => (Math.random() * 100).toFixed(2),\n  },\n  {\n    title: 'Status',\n    dataIndex: 'state',\n    initialValue: 'all',\n    filters: true,\n    valueEnum: {\n      all: { text: 'ALL', status: 'Default' },\n      open: {\n        text: 'Error',\n        status: 'Error',\n      },\n      closed: {\n        text: 'Success',\n        status: 'Success',\n      },\n    },\n  },\n  {\n    title: 'Labels',\n    dataIndex: 'labels',\n    width: 80,\n    render: (_, row) =>\n      row.labels.map(({ name, id, color }) => (\n        <Tag\n          color={color}\n          key={id}\n          style={{\n            margin: 4,\n          }}\n        >\n          {name}\n        </Tag>\n      )),\n  },\n  {\n    title: 'Created Time',\n    key: 'since',\n    dataIndex: 'created_at',\n    valueType: 'dateTime',\n  },\n  {\n    title: 'option',\n    valueType: 'option',\n    dataIndex: 'id',\n    render: (text, row, _, action) => [\n      <a href={row.html_url} key=\"show\" target=\"_blank\" rel=\"noopener noreferrer\">\n        show\n      </a>,\n      <TableDropdown\n        key=\"more\"\n        onSelect={() => action.reload()}\n        menus={[\n          { key: 'copy', name: 'copy' },\n          { key: 'delete', name: 'delete' },\n        ]}\n      />,\n    ],\n  },\n];\n\nexport default () => {\n  const actionRef = useRef<ActionType>();\n  const [intl, setIntl] = useState('zhCNIntl');\n  return (\n    <>\n      <Select<string>\n        style={{\n          width: 200,\n        }}\n        value={intl}\n        onChange={(value) => setIntl(value)}\n        options={Object.keys(intlMap).map((value) => ({ value, label: value }))}\n      />\n      <ConfigProvider locale={intlMap[intl]}>\n        <ProTable<GithubIssueItem>\n          columns={columns}\n          actionRef={actionRef}\n          request={async (params = {}) =>\n            request<{\n              data: GithubIssueItem[];\n            }>('https://proapi.azurewebsites.net/github/issues', {\n              params,\n            })\n          }\n          rowKey=\"id\"\n          rowSelection={{}}\n          pagination={{\n            showSizeChanger: true,\n          }}\n          dateFormatter=\"string\"\n          headerTitle=\"Basic Table\"\n          toolBarRender={() => [\n            <Button key=\"3\" type=\"primary\">\n              <PlusOutlined />\n              New\n            </Button>,\n          ]}\n        />\n      </ConfigProvider>\n    </>\n  );\n};\n"}},dependencies:{react:{version:"16.13.1"},"react-dom":{version:">=16.9.0"},antd:{version:"4.6.6",css:"antd/dist/antd.css"},"@ant-design/icons":{version:"4.2.2"},"umi-request":{version:"1.3.5"}},background:"#f5f5f5",identifier:"src-table-15"},r.a.createElement(v,null)),r.a.createElement("div",{className:"markdown"},r.a.createElement("h3",{id:"\u641c\u7d22\u8868\u5355\u4f8b\u5b50"},r.a.createElement(l["AnchorLink"],{to:"#\u641c\u7d22\u8868\u5355\u4f8b\u5b50","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"\u641c\u7d22\u8868\u5355\u4f8b\u5b50")),r.a.createElement(o["default"],{sources:{_:{jsx:"import React, { useState } from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Button, Tabs, Tag, Space, message } from 'antd';\nimport ProDescriptions from '@ant-design/pro-descriptions';\nimport ProTable, { TableDropdown } from '@ant-design/pro-table';\nimport request from 'umi-request';\n\nconst columns = [\n  {\n    title: '\u5e8f\u53f7',\n    dataIndex: 'index',\n    valueType: 'indexBorder',\n    width: 72,\n  },\n  {\n    title: '\u6807\u9898',\n    dataIndex: 'title',\n    copyable: true,\n    ellipsis: true,\n    width: 200,\n    hideInSearch: true,\n  },\n  {\n    title: (_, type) => (type === 'table' ? '\u72b6\u6001' : '\u5217\u8868\u72b6\u6001'),\n    dataIndex: 'state',\n    initialValue: 'all',\n    filters: true,\n    valueEnum: {\n      all: {\n        text: '\u5168\u90e8',\n        status: 'Default',\n      },\n      open: {\n        text: '\u672a\u89e3\u51b3',\n        status: 'Error',\n      },\n      closed: {\n        text: '\u5df2\u89e3\u51b3',\n        status: 'Success',\n      },\n    },\n  },\n  {\n    title: '\u6392\u5e8f\u65b9\u5f0f',\n    key: 'direction',\n    hideInTable: true,\n    hideInDescriptions: true,\n    dataIndex: 'direction',\n    filters: true,\n    valueEnum: {\n      asc: '\u6b63\u5e8f',\n      desc: '\u5012\u5e8f',\n    },\n  },\n  {\n    title: '\u6807\u7b7e',\n    dataIndex: 'labels',\n    width: 120,\n    render: (_, row) => (\n      <Space>\n        {row.labels.map(({ name, id, color }) => (\n          <Tag color={color} key={id}>\n            {name}\n          </Tag>\n        ))}\n      </Space>\n    ),\n  },\n  {\n    title: '\u521b\u5efa\u65f6\u95f4',\n    key: 'since',\n    dataIndex: 'created_at',\n    valueType: 'dateTime',\n  },\n  {\n    title: 'option',\n    valueType: 'option',\n    dataIndex: 'id',\n    render: (text, row) => [\n      <a href={row.html_url} key=\"show\" target=\"_blank\" rel=\"noopener noreferrer\">\n        \u67e5\u770b\n      </a>,\n      <TableDropdown\n        key=\"more\"\n        onSelect={key => message.info(key)}\n        menus={[\n          {\n            key: 'copy',\n            name: '\u590d\u5236',\n          },\n          {\n            key: 'delete',\n            name: '\u5220\u9664',\n          },\n        ]}\n      />,\n    ],\n  },\n];\nexport default () => {\n  const [type, setType] = useState('table');\n  return (\n    <>\n      <Tabs activeKey={type} onChange={e => setType(e)}>\n        <Tabs.TabPane tab=\"table\" key=\"table\" />\n        <Tabs.TabPane tab=\"form\" key=\"form\" />\n        <Tabs.TabPane tab=\"descriptions\" key=\"descriptions\" />\n      </Tabs>\n      {['table', 'form'].includes(type) && (\n        <ProTable\n          columns={columns}\n          type={type}\n          request={async (params = {}) =>\n            request('https://proapi.azurewebsites.net/github/issues', {\n              params,\n            })\n          }\n          rowKey=\"id\"\n          dateFormatter=\"string\"\n          headerTitle=\"\u67e5\u8be2 Table\"\n          toolBarRender={() => [\n            <Button key=\"3\" type=\"primary\">\n              <PlusOutlined />\n              \u65b0\u5efa\n            </Button>,\n          ]}\n        />\n      )}\n      {type === 'descriptions' && (\n        <ProDescriptions\n          style={{\n            background: '#fff',\n          }}\n          columns={columns}\n          request={async params => {\n            const msg = await request('https://proapi.azurewebsites.net/github/issues', {\n              params,\n            });\n            return { ...msg, data: msg?.data[0] };\n          }}\n        />\n      )}\n    </>\n  );\n};\n",tsx:"import React, { useState } from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Button, Tabs, Tag, Space, message } from 'antd';\nimport ProDescriptions from '@ant-design/pro-descriptions';\nimport ProTable, { ProColumns, TableDropdown } from '@ant-design/pro-table';\nimport request from 'umi-request';\n\ninterface GithubIssueItem {\n  url: string;\n  repository_url: string;\n  labels_url: string;\n  comments_url: string;\n  events_url: string;\n  html_url: string;\n  id: number;\n  node_id: string;\n  number: number;\n  title: string;\n  user: User;\n  labels: Label[];\n  state: string;\n  locked: boolean;\n  assignee?: any;\n  assignees: any[];\n  milestone?: any;\n  comments: number;\n  created_at: string;\n  updated_at: string;\n  closed_at?: any;\n  author_association: string;\n  body: string;\n}\n\ninterface Label {\n  id: number;\n  node_id: string;\n  url: string;\n  name: string;\n  color: string;\n  default: boolean;\n  description: string;\n}\n\ninterface User {\n  login: string;\n  id: number;\n  node_id: string;\n  avatar_url: string;\n  gravatar_id: string;\n  url: string;\n  html_url: string;\n  followers_url: string;\n  following_url: string;\n  gists_url: string;\n  starred_url: string;\n  subscriptions_url: string;\n  organizations_url: string;\n  repos_url: string;\n  events_url: string;\n  received_events_url: string;\n  type: string;\n  site_admin: boolean;\n}\n\nconst columns: ProColumns<GithubIssueItem>[] = [\n  {\n    title: '\u5e8f\u53f7',\n    dataIndex: 'index',\n    valueType: 'indexBorder',\n    width: 72,\n  },\n  {\n    title: '\u6807\u9898',\n    dataIndex: 'title',\n    copyable: true,\n    ellipsis: true,\n    width: 200,\n    hideInSearch: true,\n  },\n  {\n    title: (_, type) => (type === 'table' ? '\u72b6\u6001' : '\u5217\u8868\u72b6\u6001'),\n    dataIndex: 'state',\n    initialValue: 'all',\n    filters: true,\n    valueEnum: {\n      all: { text: '\u5168\u90e8', status: 'Default' },\n      open: {\n        text: '\u672a\u89e3\u51b3',\n        status: 'Error',\n      },\n      closed: {\n        text: '\u5df2\u89e3\u51b3',\n        status: 'Success',\n      },\n    },\n  },\n  {\n    title: '\u6392\u5e8f\u65b9\u5f0f',\n    key: 'direction',\n    hideInTable: true,\n    hideInDescriptions: true,\n    dataIndex: 'direction',\n    filters: true,\n    valueEnum: {\n      asc: '\u6b63\u5e8f',\n      desc: '\u5012\u5e8f',\n    },\n  },\n  {\n    title: '\u6807\u7b7e',\n    dataIndex: 'labels',\n    width: 120,\n    render: (_, row) => (\n      <Space>\n        {row.labels.map(({ name, id, color }) => (\n          <Tag color={color} key={id}>\n            {name}\n          </Tag>\n        ))}\n      </Space>\n    ),\n  },\n  {\n    title: '\u521b\u5efa\u65f6\u95f4',\n    key: 'since',\n    dataIndex: 'created_at',\n    valueType: 'dateTime',\n  },\n  {\n    title: 'option',\n    valueType: 'option',\n    dataIndex: 'id',\n    render: (text, row) => [\n      <a href={row.html_url} key=\"show\" target=\"_blank\" rel=\"noopener noreferrer\">\n        \u67e5\u770b\n      </a>,\n      <TableDropdown\n        key=\"more\"\n        onSelect={(key) => message.info(key)}\n        menus={[\n          { key: 'copy', name: '\u590d\u5236' },\n          { key: 'delete', name: '\u5220\u9664' },\n        ]}\n      />,\n    ],\n  },\n];\n\nexport default () => {\n  const [type, setType] = useState('table');\n  return (\n    <>\n      <Tabs activeKey={type} onChange={(e) => setType(e)}>\n        <Tabs.TabPane tab=\"table\" key=\"table\" />\n        <Tabs.TabPane tab=\"form\" key=\"form\" />\n        <Tabs.TabPane tab=\"descriptions\" key=\"descriptions\" />\n      </Tabs>\n      {['table', 'form'].includes(type) && (\n        <ProTable<GithubIssueItem>\n          columns={columns}\n          type={type as 'table'}\n          request={async (params = {}) =>\n            request<{\n              data: GithubIssueItem[];\n            }>('https://proapi.azurewebsites.net/github/issues', {\n              params,\n            })\n          }\n          rowKey=\"id\"\n          dateFormatter=\"string\"\n          headerTitle=\"\u67e5\u8be2 Table\"\n          toolBarRender={() => [\n            <Button key=\"3\" type=\"primary\">\n              <PlusOutlined />\n              \u65b0\u5efa\n            </Button>,\n          ]}\n        />\n      )}\n      {type === 'descriptions' && (\n        <ProDescriptions\n          style={{\n            background: '#fff',\n          }}\n          columns={columns}\n          request={async (params) => {\n            const msg = await request<{\n              data: GithubIssueItem[];\n            }>('https://proapi.azurewebsites.net/github/issues', {\n              params,\n            });\n            return {\n              ...msg,\n              data: msg?.data[0],\n            };\n          }}\n        />\n      )}\n    </>\n  );\n};\n"}},dependencies:{react:{version:"16.13.1"},"react-dom":{version:">=16.9.0"},antd:{version:"4.6.6",css:"antd/dist/antd.css"},"@ant-design/icons":{version:"4.2.2"},"umi-request":{version:"1.3.5"}},background:"#f5f5f5",identifier:"src-table-16"},r.a.createElement(w,null)),r.a.createElement("div",{className:"markdown"},r.a.createElement("h3",{id:"\u503c\u7c7b\u578b\u793a\u4f8b"},r.a.createElement(l["AnchorLink"],{to:"#\u503c\u7c7b\u578b\u793a\u4f8b","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"\u503c\u7c7b\u578b\u793a\u4f8b"),r.a.createElement("h4",{id:"\u65e5\u671f\u7c7b"},r.a.createElement(l["AnchorLink"],{to:"#\u65e5\u671f\u7c7b","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"\u65e5\u671f\u7c7b")),r.a.createElement(o["default"],{sources:{_:{jsx:"import React from 'react';\nimport ProTable from '@ant-design/pro-table';\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\nconst tableListDataSource = [];\n\nfor (let i = 0; i < 2; i += 1) {\n  tableListDataSource.push({\n    key: i,\n    name: `TradeCode ${i}`,\n    status: valueEnum[Math.floor(Math.random() * 10) % 4],\n    updatedAt: Date.now() - Math.floor(Math.random() * 1000),\n    createdAt: Date.now() - Math.floor(Math.random() * 2000),\n    createdAtRange: [\n      Date.now() - Math.floor(Math.random() * 2000),\n      Date.now() - Math.floor(Math.random() * 2000),\n    ],\n    money: Math.floor(Math.random() * 2000) * i,\n    progress: Math.ceil(Math.random() * 100) + 1,\n    percent:\n      Math.random() > 0.5\n        ? ((i + 1) * 10 + Math.random()).toFixed(3)\n        : -((i + 1) * 10 + Math.random()).toFixed(2),\n    code: `const getData = async params => {\n  const data = await getData(params);\n  return { list: data.data, ...data };\n};`,\n  });\n}\n\nexport default () => (\n  <>\n    <ProTable\n      columns={[\n        {\n          title: '\u521b\u5efa\u65f6\u95f4',\n          key: 'since',\n          dataIndex: 'createdAt',\n          valueType: 'dateTime',\n        },\n        {\n          title: '\u65e5\u671f\u533a\u95f4',\n          key: 'dateRange',\n          dataIndex: 'createdAtRange',\n          valueType: 'dateRange',\n        },\n        {\n          title: '\u65f6\u95f4\u533a\u95f4',\n          key: 'dateTimeRange',\n          dataIndex: 'createdAtRange',\n          valueType: 'dateTimeRange',\n          search: {\n            transform: value => ({\n              startTime: value[0],\n              endTime: value[1],\n            }),\n          },\n        },\n        {\n          title: '\u66f4\u65b0\u65f6\u95f4',\n          key: 'since2',\n          dataIndex: 'createdAt',\n          valueType: 'date',\n        },\n        {\n          title: '\u5173\u95ed\u65f6\u95f4',\n          key: 'since3',\n          dataIndex: 'updatedAt',\n          valueType: 'time',\n        },\n      ]}\n      request={() =>\n        Promise.resolve({\n          total: 200,\n          data: tableListDataSource,\n          success: true,\n        })\n      }\n      rowKey=\"key\"\n      headerTitle=\"\u65e5\u671f\u7c7b\"\n    />\n  </>\n);\n",tsx:"import React from 'react';\nimport ProTable from '@ant-design/pro-table';\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\n\nexport interface TableListItem {\n  key: number;\n  name: string;\n  status: string;\n  updatedAt: number;\n  createdAt: number;\n  progress: number;\n  money: number;\n  percent: number | string;\n  createdAtRange: number[];\n  code: string;\n}\nconst tableListDataSource: TableListItem[] = [];\n\nfor (let i = 0; i < 2; i += 1) {\n  tableListDataSource.push({\n    key: i,\n    name: `TradeCode ${i}`,\n    status: valueEnum[Math.floor(Math.random() * 10) % 4],\n    updatedAt: Date.now() - Math.floor(Math.random() * 1000),\n    createdAt: Date.now() - Math.floor(Math.random() * 2000),\n    createdAtRange: [\n      Date.now() - Math.floor(Math.random() * 2000),\n      Date.now() - Math.floor(Math.random() * 2000),\n    ],\n    money: Math.floor(Math.random() * 2000) * i,\n    progress: Math.ceil(Math.random() * 100) + 1,\n    percent:\n      Math.random() > 0.5\n        ? ((i + 1) * 10 + Math.random()).toFixed(3)\n        : -((i + 1) * 10 + Math.random()).toFixed(2),\n    code: `const getData = async params => {\n  const data = await getData(params);\n  return { list: data.data, ...data };\n};`,\n  });\n}\n\nexport default () => (\n  <>\n    <ProTable<TableListItem>\n      columns={[\n        {\n          title: '\u521b\u5efa\u65f6\u95f4',\n          key: 'since',\n          dataIndex: 'createdAt',\n          valueType: 'dateTime',\n        },\n        {\n          title: '\u65e5\u671f\u533a\u95f4',\n          key: 'dateRange',\n          dataIndex: 'createdAtRange',\n          valueType: 'dateRange',\n        },\n        {\n          title: '\u65f6\u95f4\u533a\u95f4',\n          key: 'dateTimeRange',\n          dataIndex: 'createdAtRange',\n          valueType: 'dateTimeRange',\n          search: {\n            transform: (value: any) => ({ startTime: value[0], endTime: value[1] }),\n          },\n        },\n        {\n          title: '\u66f4\u65b0\u65f6\u95f4',\n          key: 'since2',\n          dataIndex: 'createdAt',\n          valueType: 'date',\n        },\n        {\n          title: '\u5173\u95ed\u65f6\u95f4',\n          key: 'since3',\n          dataIndex: 'updatedAt',\n          valueType: 'time',\n        },\n      ]}\n      request={() => {\n        return Promise.resolve({\n          total: 200,\n          data: tableListDataSource,\n          success: true,\n        });\n      }}\n      rowKey=\"key\"\n      headerTitle=\"\u65e5\u671f\u7c7b\"\n    />\n  </>\n);\n"}},dependencies:{react:{version:"16.13.1"}},background:"#f5f5f5",identifier:"src-table-17"},r.a.createElement(I,null)),r.a.createElement("div",{className:"markdown"},r.a.createElement("h4",{id:"\u6570\u5b57\u7c7b"},r.a.createElement(l["AnchorLink"],{to:"#\u6570\u5b57\u7c7b","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"\u6570\u5b57\u7c7b")),r.a.createElement(o["default"],{sources:{_:{jsx:"import React from 'react';\nimport ProTable from '@ant-design/pro-table';\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\nconst tableListDataSource = [];\n\nfor (let i = 0; i < 2; i += 1) {\n  tableListDataSource.push({\n    key: i,\n    name: `TradeCode ${i}`,\n    status: valueEnum[Math.floor(Math.random() * 10) % 4],\n    updatedAt: Date.now() - Math.floor(Math.random() * 1000),\n    createdAt: Date.now() - Math.floor(Math.random() * 2000),\n    createdAtRange: [\n      Date.now() - Math.floor(Math.random() * 2000),\n      Date.now() - Math.floor(Math.random() * 2000),\n    ],\n    money: Math.floor(Math.random() * 2000) * i,\n    progress: Math.ceil(Math.random() * 100) + 1,\n    percent:\n      Math.random() > 0.5\n        ? ((i + 1) * 10 + Math.random()).toFixed(3)\n        : -((i + 1) * 10 + Math.random()).toFixed(2),\n    code: `const getData = async params => {\n  const data = await getData(params);\n  return { list: data.data, ...data };\n};`,\n  });\n}\n\nexport default () => (\n  <>\n    <ProTable\n      columns={[\n        {\n          title: '\u8fdb\u5ea6',\n          key: 'progress',\n          dataIndex: 'progress',\n          valueType: item => ({\n            type: 'progress',\n            status: item.status !== 'error' ? 'active' : 'exception',\n          }),\n          width: 200,\n        },\n        {\n          title: '\u91d1\u989d',\n          dataIndex: 'money',\n          valueType: 'money',\n          width: 150,\n        },\n        {\n          title: '\u6570\u5b57',\n          dataIndex: 'money',\n          key: 'digit',\n          valueType: 'digit',\n          width: 150,\n        },\n        {\n          title: '\u767e\u5206\u6bd4',\n          key: 'percent',\n          width: 120,\n          dataIndex: 'percent',\n          valueType: () => ({\n            type: 'percent',\n          }),\n        },\n      ]}\n      request={() =>\n        Promise.resolve({\n          total: 200,\n          data: tableListDataSource,\n          success: true,\n        })\n      }\n      rowKey=\"key\"\n      headerTitle=\"\u6570\u5b57\u7c7b\"\n    />\n  </>\n);\n",tsx:"import React from 'react';\nimport ProTable from '@ant-design/pro-table';\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\n\nexport interface TableListItem {\n  key: number;\n  name: string;\n  status: string;\n  updatedAt: number;\n  createdAt: number;\n  progress: number;\n  money: number;\n  percent: number | string;\n  createdAtRange: number[];\n  code: string;\n}\nconst tableListDataSource: TableListItem[] = [];\n\nfor (let i = 0; i < 2; i += 1) {\n  tableListDataSource.push({\n    key: i,\n    name: `TradeCode ${i}`,\n    status: valueEnum[Math.floor(Math.random() * 10) % 4],\n    updatedAt: Date.now() - Math.floor(Math.random() * 1000),\n    createdAt: Date.now() - Math.floor(Math.random() * 2000),\n    createdAtRange: [\n      Date.now() - Math.floor(Math.random() * 2000),\n      Date.now() - Math.floor(Math.random() * 2000),\n    ],\n    money: Math.floor(Math.random() * 2000) * i,\n    progress: Math.ceil(Math.random() * 100) + 1,\n    percent:\n      Math.random() > 0.5\n        ? ((i + 1) * 10 + Math.random()).toFixed(3)\n        : -((i + 1) * 10 + Math.random()).toFixed(2),\n    code: `const getData = async params => {\n  const data = await getData(params);\n  return { list: data.data, ...data };\n};`,\n  });\n}\n\nexport default () => (\n  <>\n    <ProTable<TableListItem>\n      columns={[\n        {\n          title: '\u8fdb\u5ea6',\n          key: 'progress',\n          dataIndex: 'progress',\n          valueType: (item) => ({\n            type: 'progress',\n            status: item.status !== 'error' ? 'active' : 'exception',\n          }),\n          width: 200,\n        },\n        {\n          title: '\u91d1\u989d',\n          dataIndex: 'money',\n          valueType: 'money',\n          width: 150,\n        },\n        {\n          title: '\u6570\u5b57',\n          dataIndex: 'money',\n          key: 'digit',\n          valueType: 'digit',\n          width: 150,\n        },\n        {\n          title: '\u767e\u5206\u6bd4',\n          key: 'percent',\n          width: 120,\n          dataIndex: 'percent',\n          valueType: () => ({\n            type: 'percent',\n          }),\n        },\n      ]}\n      request={() => {\n        return Promise.resolve({\n          total: 200,\n          data: tableListDataSource,\n          success: true,\n        });\n      }}\n      rowKey=\"key\"\n      headerTitle=\"\u6570\u5b57\u7c7b\"\n    />\n  </>\n);\n"}},dependencies:{react:{version:"16.13.1"}},background:"#f5f5f5",identifier:"src-table-18"},r.a.createElement(S,null)),r.a.createElement("div",{className:"markdown"},r.a.createElement("h4",{id:"\u6837\u5f0f\u7c7b"},r.a.createElement(l["AnchorLink"],{to:"#\u6837\u5f0f\u7c7b","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"\u6837\u5f0f\u7c7b")),r.a.createElement(o["default"],{sources:{_:{jsx:"import React from 'react';\nimport moment from 'moment';\nimport ProTable from '@ant-design/pro-table';\nimport { Space } from 'antd';\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\nconst tableListDataSource = [];\n\nfor (let i = 0; i < 2; i += 1) {\n  tableListDataSource.push({\n    key: i,\n    avatar:\n      'https://gw.alipayobjects.com/zos/antfincdn/efFD%24IOql2/weixintupian_20170331104822.jpg',\n    name: `TradeCode ${i}`,\n    status: valueEnum[Math.floor(Math.random() * 10) % 4],\n    updatedAt: moment('2019-11-16 12:50:26').valueOf() - Math.floor(Math.random() * 1000),\n    createdAt: moment('2019-11-16 12:50:26').valueOf() - Math.floor(Math.random() * 2000),\n    createdAtRange: [\n      moment('2019-11-16 12:50:26').valueOf() - Math.floor(Math.random() * 2000),\n      moment('2019-11-16 12:50:26').valueOf() - Math.floor(Math.random() * 2000),\n    ],\n    money: Math.floor(Math.random() * 2000) * i,\n    progress: Math.ceil(Math.random() * 100) + 1,\n    percent:\n      Math.random() > 0.5\n        ? ((i + 1) * 10 + Math.random()).toFixed(3)\n        : -((i + 1) * 10 + Math.random()).toFixed(2),\n    code: `const getData = async params => {\n  const data = await getData(params);\n  return { list: data.data, ...data };\n};`,\n  });\n}\n\ntableListDataSource.push({\n  key: 3,\n  avatar: 'https://gw.alipayobjects.com/zos/antfincdn/efFD%24IOql2/weixintupian_20170331104822.jpg',\n  name: `TradeCode ${3}`,\n  status: 0,\n  updatedAt: Date.now() - Math.floor(Math.random() * 1000),\n  createdAt: Date.now() - Math.floor(Math.random() * 2000),\n  createdAtRange: [\n    Date.now() - Math.floor(Math.random() * 2000),\n    Date.now() - Math.floor(Math.random() * 2000),\n  ],\n  money: Math.floor(Math.random() * 2000) * 3,\n  progress: Math.ceil(Math.random() * 100) + 1,\n  percent:\n    Math.random() > 0.5\n      ? ((3 + 1) * 10 + Math.random()).toFixed(3)\n      : -((3 + 1) * 10 + Math.random()).toFixed(2),\n  code: `const getData = async params => {\nconst data = await getData(params);\nreturn { list: data.data, ...data };\n};`,\n});\nconst columns = [\n  {\n    title: '\u5e8f\u53f7',\n    dataIndex: 'index',\n    valueType: 'index',\n    width: 72,\n  },\n  {\n    title: 'border \u5e8f\u53f7',\n    dataIndex: 'index',\n    key: 'indexBorder',\n    valueType: 'indexBorder',\n    width: 72,\n    // @ts-ignore\n    sorter: {\n      multiple: 3,\n    },\n  },\n  {\n    title: '\u72b6\u6001',\n    dataIndex: 'status',\n    initialValue: ['all'],\n    // @ts-ignore\n    sorter: {\n      multiple: 3,\n    },\n    width: 100,\n    ellipsis: true,\n    filters: true,\n    fieldProps: {\n      mode: 'tags',\n      onChange: value => console.log(value),\n    },\n    formItemProps: {\n      rules: [\n        {\n          required: true,\n        },\n      ],\n    },\n    valueEnum: {\n      all: {\n        text: '\u5168\u90e8',\n        status: 'Default',\n      },\n      close: {\n        text: '\u5173\u95ed',\n        status: 'Default',\n      },\n      running: {\n        text: '\u8fd0\u884c\u4e2d',\n        status: 'Processing',\n      },\n      online: {\n        text: '\u5df2\u4e0a\u7ebf',\n        status: 'Success',\n      },\n      error: {\n        text: '\u5f02\u5e38',\n        status: 'Error',\n      },\n      0: {\n        text: '0\u5f02\u5e38',\n        status: 'Error',\n      },\n    },\n  },\n  {\n    title: '\u4ee3\u7801',\n    key: 'code',\n    width: 120,\n    dataIndex: 'code',\n    valueType: 'code',\n  },\n  {\n    title: '\u5934\u50cf',\n    dataIndex: 'avatar',\n    key: 'avatar',\n    valueType: 'avatar',\n    width: 150,\n    render: dom => (\n      <Space>\n        <span>{dom}</span>\n        <a href=\"https://github.com/chenshuai2144\" target=\"_blank\" rel=\"noopener noreferrer\">\n          chenshuai2144\n        </a>\n      </Space>\n    ),\n  },\n  {\n    title: '\u64cd\u4f5c',\n    key: 'option',\n    width: 120,\n    valueType: 'option',\n    render: () => [<a key=\"a\">\u64cd\u4f5c</a>, <a key=\"b\">\u5220\u9664</a>],\n  },\n];\nexport default () => (\n  <>\n    <ProTable\n      columns={columns}\n      request={(params, sorter, filter) => {\n        console.log(params, sorter, filter);\n        return Promise.resolve({\n          total: 200,\n          data: tableListDataSource,\n          success: true,\n        });\n      }}\n      rowKey=\"key\"\n      headerTitle=\"\u6837\u5f0f\u7c7b\"\n    />\n  </>\n);\n",tsx:"import React from 'react';\nimport moment from 'moment';\nimport ProTable, { ProColumns } from '@ant-design/pro-table';\nimport { Space } from 'antd';\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\n\nexport interface TableListItem {\n  key: number;\n  name: string;\n  status: string | number;\n  updatedAt: number;\n  createdAt: number;\n  progress: number;\n  money: number;\n  percent: number | string;\n  createdAtRange: number[];\n  code: string;\n  avatar: string;\n}\nconst tableListDataSource: TableListItem[] = [];\n\nfor (let i = 0; i < 2; i += 1) {\n  tableListDataSource.push({\n    key: i,\n    avatar:\n      'https://gw.alipayobjects.com/zos/antfincdn/efFD%24IOql2/weixintupian_20170331104822.jpg',\n    name: `TradeCode ${i}`,\n    status: valueEnum[Math.floor(Math.random() * 10) % 4],\n    updatedAt: moment('2019-11-16 12:50:26').valueOf() - Math.floor(Math.random() * 1000),\n    createdAt: moment('2019-11-16 12:50:26').valueOf() - Math.floor(Math.random() * 2000),\n    createdAtRange: [\n      moment('2019-11-16 12:50:26').valueOf() - Math.floor(Math.random() * 2000),\n      moment('2019-11-16 12:50:26').valueOf() - Math.floor(Math.random() * 2000),\n    ],\n    money: Math.floor(Math.random() * 2000) * i,\n    progress: Math.ceil(Math.random() * 100) + 1,\n    percent:\n      Math.random() > 0.5\n        ? ((i + 1) * 10 + Math.random()).toFixed(3)\n        : -((i + 1) * 10 + Math.random()).toFixed(2),\n    code: `const getData = async params => {\n  const data = await getData(params);\n  return { list: data.data, ...data };\n};`,\n  });\n}\n\ntableListDataSource.push({\n  key: 3,\n  avatar: 'https://gw.alipayobjects.com/zos/antfincdn/efFD%24IOql2/weixintupian_20170331104822.jpg',\n  name: `TradeCode ${3}`,\n  status: 0,\n  updatedAt: Date.now() - Math.floor(Math.random() * 1000),\n  createdAt: Date.now() - Math.floor(Math.random() * 2000),\n  createdAtRange: [\n    Date.now() - Math.floor(Math.random() * 2000),\n    Date.now() - Math.floor(Math.random() * 2000),\n  ],\n  money: Math.floor(Math.random() * 2000) * 3,\n  progress: Math.ceil(Math.random() * 100) + 1,\n  percent:\n    Math.random() > 0.5\n      ? ((3 + 1) * 10 + Math.random()).toFixed(3)\n      : -((3 + 1) * 10 + Math.random()).toFixed(2),\n  code: `const getData = async params => {\nconst data = await getData(params);\nreturn { list: data.data, ...data };\n};`,\n});\n\nconst columns: ProColumns<TableListItem>[] = [\n  {\n    title: '\u5e8f\u53f7',\n    dataIndex: 'index',\n    valueType: 'index',\n    width: 72,\n  },\n  {\n    title: 'border \u5e8f\u53f7',\n    dataIndex: 'index',\n    key: 'indexBorder',\n    valueType: 'indexBorder',\n    width: 72,\n    // @ts-ignore\n    sorter: {\n      multiple: 3,\n    },\n  },\n  {\n    title: '\u72b6\u6001',\n    dataIndex: 'status',\n    initialValue: ['all'],\n    // @ts-ignore\n    sorter: {\n      multiple: 3,\n    },\n    width: 100,\n    ellipsis: true,\n    filters: true,\n    fieldProps: {\n      mode: 'tags',\n      onChange: (value: string) => console.log(value),\n    },\n    formItemProps: {\n      rules: [{ required: true }],\n    },\n    valueEnum: {\n      all: { text: '\u5168\u90e8', status: 'Default' },\n      close: { text: '\u5173\u95ed', status: 'Default' },\n      running: { text: '\u8fd0\u884c\u4e2d', status: 'Processing' },\n      online: { text: '\u5df2\u4e0a\u7ebf', status: 'Success' },\n      error: { text: '\u5f02\u5e38', status: 'Error' },\n      0: { text: '0\u5f02\u5e38', status: 'Error' },\n    },\n  },\n  {\n    title: '\u4ee3\u7801',\n    key: 'code',\n    width: 120,\n    dataIndex: 'code',\n    valueType: 'code',\n  },\n  {\n    title: '\u5934\u50cf',\n    dataIndex: 'avatar',\n    key: 'avatar',\n    valueType: 'avatar',\n    width: 150,\n    render: (dom) => (\n      <Space>\n        <span>{dom}</span>\n        <a href=\"https://github.com/chenshuai2144\" target=\"_blank\" rel=\"noopener noreferrer\">\n          chenshuai2144\n        </a>\n      </Space>\n    ),\n  },\n  {\n    title: '\u64cd\u4f5c',\n    key: 'option',\n    width: 120,\n    valueType: 'option',\n    render: () => [<a key=\"a\">\u64cd\u4f5c</a>, <a key=\"b\">\u5220\u9664</a>],\n  },\n];\n\nexport default () => (\n  <>\n    <ProTable<TableListItem>\n      columns={columns}\n      request={(params, sorter, filter) => {\n        console.log(params, sorter, filter);\n        return Promise.resolve({\n          total: 200,\n          data: tableListDataSource,\n          success: true,\n        });\n      }}\n      rowKey=\"key\"\n      headerTitle=\"\u6837\u5f0f\u7c7b\"\n    />\n  </>\n);\n"}},dependencies:{react:{version:"16.13.1"},"react-dom":{version:">=16.9.0"},antd:{version:"4.6.6",css:"antd/dist/antd.css"},moment:{version:"2.29.0"}},background:"#f5f5f5",identifier:"src-table-19"},r.a.createElement(P,null)),r.a.createElement("div",{className:"markdown"},r.a.createElement("h2",{id:"api"},r.a.createElement(l["AnchorLink"],{to:"#api","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"API"),r.a.createElement("p",null,"ProTable \u5728 antd \u7684 Table \u4e0a\u8fdb\u884c\u4e86\u4e00\u5c42\u5c01\u88c5\uff0c\u652f\u6301\u4e86\u4e00\u4e9b\u9884\u8bbe\uff0c\u5e76\u4e14\u5c01\u88c5\u4e86\u4e00\u4e9b\u884c\u4e3a\u3002\u8fd9\u91cc\u53ea\u5217\u51fa\u4e0e antd Table \u4e0d\u540c\u7684 api\u3002"),r.a.createElement("h3",{id:"protable"},r.a.createElement(l["AnchorLink"],{to:"#protable","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"ProTable"),r.a.createElement("table",null,r.a.createElement("thead",null,r.a.createElement("tr",null,r.a.createElement("th",null,"\u5c5e\u6027"),r.a.createElement("th",null,"\u63cf\u8ff0"),r.a.createElement("th",null,"\u7c7b\u578b"),r.a.createElement("th",null,"\u9ed8\u8ba4\u503c"))),r.a.createElement("tbody",null,r.a.createElement("tr",null,r.a.createElement("td",null,"request"),r.a.createElement("td",null,"\u83b7\u53d6 ",r.a.createElement("code",null,"dataSource")," \u7684\u65b9\u6cd5"),r.a.createElement("td",null,r.a.createElement("code",null,"(params?: ","{","pageSize: number;current: number;[key: string]: any;","}",",sort,filter) => Promise<RequestData<T>>")),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"params"),r.a.createElement("td",null,"\u7528\u4e8e request \u67e5\u8be2\u7684\u591a\u4f59\u53c2\u6570\uff0c\u4e00\u65e6\u53d8\u5316\u4f1a\u89e6\u53d1\u91cd\u65b0\u52a0\u8f7d"),r.a.createElement("td",null,"object"),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"postData"),r.a.createElement("td",null,"\u5bf9\u901a\u8fc7 ",r.a.createElement("code",null,"request")," \u83b7\u53d6\u7684\u6570\u636e\u8fdb\u884c\u5904\u7406"),r.a.createElement("td",null,r.a.createElement("code",null,"(data: T[]) => T[]")),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"defaultData"),r.a.createElement("td",null,"\u9ed8\u8ba4\u7684\u6570\u636e"),r.a.createElement("td",null,r.a.createElement("code",null,"T[]")),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"actionRef"),r.a.createElement("td",null,"Table action \u7684\u5f15\u7528\uff0c\u4fbf\u4e8e\u81ea\u5b9a\u4e49\u89e6\u53d1"),r.a.createElement("td",null,r.a.createElement("code",null,"React.MutableRefObject<FormInstance>")," | ",r.a.createElement("code",null,"((actionRef: ActionType) => void)")),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"formRef"),r.a.createElement("td",null,"\u53ef\u4ee5\u83b7\u53d6\u5230\u67e5\u8be2\u8868\u5355\u7684 form \u5b9e\u4f8b\uff0c\u7528\u4e8e\u4e00\u4e9b\u7075\u6d3b\u7684\u914d\u7f6e"),r.a.createElement("td",null,r.a.createElement("code",null,"React.MutableRefObject<ActionType>")," | ",r.a.createElement("code",null,"((actionRef: ActionType) => void)")),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"toolBarRender"),r.a.createElement("td",null,"\u6e32\u67d3\u5de5\u5177\u680f\uff0c\u652f\u6301\u8fd4\u56de\u4e00\u4e2a dom \u6570\u7ec4\uff0c\u4f1a\u81ea\u52a8\u589e\u52a0 margin-right"),r.a.createElement("td",null,r.a.createElement("code",null,"(action: UseFetchDataAction<RequestData<T>>) => React.ReactNode[]")),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"onLoad"),r.a.createElement("td",null,"\u6570\u636e\u52a0\u8f7d\u5b8c\u6210\u540e\u89e6\u53d1,\u4f1a\u591a\u6b21\u89e6\u53d1"),r.a.createElement("td",null,r.a.createElement("code",null,"(dataSource: T[]) => void")),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"onRequestError"),r.a.createElement("td",null,"\u6570\u636e\u52a0\u8f7d\u5931\u8d25\u65f6\u89e6\u53d1"),r.a.createElement("td",null,r.a.createElement("code",null,"(e: Error) => void")),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"tableClassName"),r.a.createElement("td",null,"\u5c01\u88c5\u7684 table \u7684 className"),r.a.createElement("td",null,"string"),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"tableStyle"),r.a.createElement("td",null,"\u5c01\u88c5\u7684 table \u7684 style"),r.a.createElement("td",null,"CSSProperties"),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"options"),r.a.createElement("td",null,"table \u5de5\u5177\u680f\uff0c\u8bbe\u4e3a false \u65f6\u4e0d\u663e\u793a"),r.a.createElement("td",null,r.a.createElement("code",null,"{","{"," fullScreen: boolean \\| function, reload: boolean \\| function,setting: true ","}","}")),r.a.createElement("td",null,r.a.createElement("code",null,"{"," fullScreen: true, reload:true, setting: true","}"))),r.a.createElement("tr",null,r.a.createElement("td",null,"search"),r.a.createElement("td",null,"\u662f\u5426\u663e\u793a\u641c\u7d22\u8868\u5355\uff0c\u4f20\u5165\u5bf9\u8c61\u65f6\u4e3a\u641c\u7d22\u8868\u5355\u7684\u914d\u7f6e"),r.a.createElement("td",null,r.a.createElement(l["AnchorLink"],{to:"#search"},"search config")),r.a.createElement("td",null,"true")),r.a.createElement("tr",null,r.a.createElement("td",null,"dateFormatter"),r.a.createElement("td",null,"\u8f6c\u5316 moment \u683c\u5f0f\u6570\u636e\u4e3a\u7279\u5b9a\u7c7b\u578b\uff0cfalse \u4e0d\u505a\u8f6c\u5316"),r.a.createElement("td",null,r.a.createElement("code",null,'"string"')," | ",r.a.createElement("code",null,'"number"')," | ",r.a.createElement("code",null,"false")),r.a.createElement("td",null,r.a.createElement("code",null,'"string"'))),r.a.createElement("tr",null,r.a.createElement("td",null,"beforeSearchSubmit"),r.a.createElement("td",null,"\u641c\u7d22\u4e4b\u524d\u8fdb\u884c\u4e00\u4e9b\u4fee\u6539"),r.a.createElement("td",null,r.a.createElement("code",null,"(params:T)=>T")),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"onSizeChange"),r.a.createElement("td",null,"table \u5c3a\u5bf8\u53d1\u751f\u6539\u53d8"),r.a.createElement("td",null,r.a.createElement("code",null,"(size: 'default' \\| 'middle' \\| 'small' \\| undefined) => void")),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"columnsStateMap"),r.a.createElement("td",null,"columns \u7684\u72b6\u6001\u679a\u4e3e"),r.a.createElement("td",null,r.a.createElement("code",null,"{","[key: string]: ","{",' show:boolean, fixed: "right" \\| "left"',"}"," ","}")),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"onColumnsStateChange"),r.a.createElement("td",null,"columns \u72b6\u6001\u53d1\u751f\u6539\u53d8"),r.a.createElement("td",null,r.a.createElement("code",null,"(props: ","{","[key: string]: ","{",' show:boolean, fixed: "right" \\| "left"',"}"," ","}",") => void")),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"type"),r.a.createElement("td",null,"pro-table \u7c7b\u578b"),r.a.createElement("td",null,r.a.createElement("code",null,'"form"')),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"form"),r.a.createElement("td",null,"antd form \u7684\u914d\u7f6e"),r.a.createElement("td",null,r.a.createElement("code",null,"FormProps")),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"onSubmit"),r.a.createElement("td",null,"\u63d0\u4ea4\u8868\u5355\u65f6\u89e6\u53d1"),r.a.createElement("td",null,r.a.createElement("code",null,"(params: U) => void")),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"onReset"),r.a.createElement("td",null,"\u91cd\u7f6e\u8868\u5355\u65f6\u89e6\u53d1"),r.a.createElement("td",null,r.a.createElement("code",null,"() => void")),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"columnEmptyText"),r.a.createElement("td",null,"\u7a7a\u503c\u65f6\u7684\u663e\u793a\uff0c\u4e0d\u8bbe\u7f6e \u5219\u9ed8\u8ba4\u663e\u793a ",r.a.createElement("code",null,"-")),r.a.createElement("td",null,r.a.createElement("code",null,"string \\| false")),r.a.createElement("td",null,"false")),r.a.createElement("tr",null,r.a.createElement("td",null,"tableRender"),r.a.createElement("td",null,"\u81ea\u5b9a\u4e49\u6e32\u67d3\u8868\u683c\u51fd\u6570"),r.a.createElement("td",null,r.a.createElement("code",null,"(props: ProTableProps<T, U>, defaultDom: JSX.Element, domList: ","{"," toolbar: JSX.Element \\| undefined; alert: JSX.Element \\| undefined; table: JSX.Element \\| undefined;","}",") => React.ReactNode")),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"toolbar"),r.a.createElement("td",null,"\u900f\u4f20 ProUtils \u4e2d\u7684 ListToolBar \u914d\u7f6e\u9879"),r.a.createElement("td",null,r.a.createElement("code",null,"ListToolBarProps")),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"tableExtraRender"),r.a.createElement("td",null,"\u81ea\u5b9a\u4e49\u8868\u683c\u7684\u4e3b\u4f53\u51fd\u6570"),r.a.createElement("td",null,r.a.createElement("code",null,"(props: ProTableProps<T, U>, dataSource: T[]) => React.ReactNode;")),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"manualRequest"),r.a.createElement("td",null,"\u662f\u5426\u9700\u8981\u624b\u52a8\u89e6\u53d1\u9996\u6b21\u8bf7\u6c42, \u914d\u7f6e\u4e3a ",r.a.createElement("code",null,"true")," \u65f6\u4e0d\u53ef\u9690\u85cf\u641c\u7d22\u8868\u5355"),r.a.createElement("td",null,r.a.createElement("code",null,"boolean")),r.a.createElement("td",null,"false")))),r.a.createElement("h4",{id:"search-\u641c\u7d22\u8868\u5355"},r.a.createElement(l["AnchorLink"],{to:"#search-\u641c\u7d22\u8868\u5355","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"Search \u641c\u7d22\u8868\u5355"),r.a.createElement("table",null,r.a.createElement("thead",null,r.a.createElement("tr",null,r.a.createElement("th",null,"\u5c5e\u6027"),r.a.createElement("th",null,"\u63cf\u8ff0"),r.a.createElement("th",null,"\u7c7b\u578b"),r.a.createElement("th",null,"\u9ed8\u8ba4\u503c"))),r.a.createElement("tbody",null,r.a.createElement("tr",null,r.a.createElement("td",null,"filterType"),r.a.createElement("td",null,"\u8fc7\u6ee4\u8868\u5355\u7c7b\u578b"),r.a.createElement("td",null,r.a.createElement("code",null,"'query'")," | ",r.a.createElement("code",null,"'light'")),r.a.createElement("td",null,r.a.createElement("code",null,"'query'"))),r.a.createElement("tr",null,r.a.createElement("td",null,"searchText"),r.a.createElement("td",null,"\u67e5\u8be2\u6309\u94ae\u7684\u6587\u672c"),r.a.createElement("td",null,"string"),r.a.createElement("td",null,"\u67e5\u8be2")),r.a.createElement("tr",null,r.a.createElement("td",null,"resetText"),r.a.createElement("td",null,"\u91cd\u7f6e\u6309\u94ae\u7684\u6587\u672c"),r.a.createElement("td",null,"string"),r.a.createElement("td",null,"\u91cd\u7f6e")),r.a.createElement("tr",null,r.a.createElement("td",null,"submitText"),r.a.createElement("td",null,"\u63d0\u4ea4\u6309\u94ae\u7684\u6587\u672c"),r.a.createElement("td",null,"string"),r.a.createElement("td",null,"\u63d0\u4ea4")),r.a.createElement("tr",null,r.a.createElement("td",null,"labelWidth"),r.a.createElement("td",null,"\u6807\u7b7e\u7684\u5bbd\u5ea6"),r.a.createElement("td",null,"number"),r.a.createElement("td",null,"98")),r.a.createElement("tr",null,r.a.createElement("td",null,"span"),r.a.createElement("td",null,"\u914d\u7f6e\u67e5\u8be2\u8868\u5355\u7684\u5217\u6570"),r.a.createElement("td",null,"[`number"),r.a.createElement("td",null,"ColConfig`](#ColConfig)")),r.a.createElement("tr",null,r.a.createElement("td",null,"collapseRender"),r.a.createElement("td",null,"\u6536\u8d77\u6309\u94ae\u7684 render"),r.a.createElement("td",null,r.a.createElement("code",null,"(collapsed: boolean,showCollapseButton?: boolean,) => React.ReactNode")),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"defaultCollapsed"),r.a.createElement("td",null,"\u9ed8\u8ba4\u662f\u5426\u6536\u8d77"),r.a.createElement("td",null,"boolean"),r.a.createElement("td",null,"false")),r.a.createElement("tr",null,r.a.createElement("td",null,"collapsed"),r.a.createElement("td",null,"\u662f\u5426\u6536\u8d77"),r.a.createElement("td",null,"boolean"),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"onCollapse"),r.a.createElement("td",null,"\u6536\u8d77\u6309\u94ae\u7684\u4e8b\u4ef6"),r.a.createElement("td",null,r.a.createElement("code",null,"(collapsed: boolean) => void;")),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"optionRender"),r.a.createElement("td",null,"\u64cd\u4f5c\u680f\u7684 render"),r.a.createElement("td",null,r.a.createElement("code",null,"(( searchConfig: Omit<SearchConfig, 'optionRender'>, props: Omit<FormOptionProps, 'searchConfig'>, ) => React.ReactNode[]) \\| false;")),r.a.createElement("td",null,"-")))),r.a.createElement("h4",{id:"colconfig"},r.a.createElement(l["AnchorLink"],{to:"#colconfig","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"ColConfig"),r.a.createElement(i["a"],{code:"const defaultColConfig = {\n  xs: 24,\n  sm: 24,\n  md: 12,\n  lg: 12,\n  xl: 8,\n  xxl: 6,\n};\n",lang:"tsx"}),r.a.createElement("h4",{id:"actionref-\u624b\u52a8\u89e6\u53d1"},r.a.createElement(l["AnchorLink"],{to:"#actionref-\u624b\u52a8\u89e6\u53d1","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"ActionRef \u624b\u52a8\u89e6\u53d1"),r.a.createElement("p",null,"\u6709\u65f6\u6211\u4eec\u8981\u624b\u52a8\u89e6\u53d1 table \u7684 reload \u7b49\u64cd\u4f5c\uff0c\u53ef\u4ee5\u4f7f\u7528 actionRef\u3002"),r.a.createElement(i["a"],{code:"interface ActionType {\n  reload: () => void;\n  fetchMore: () => void;\n  reset: () => void;\n}\n\nconst ref = useRef<ActionType>();\n\n<ProTable actionRef={ref} />;\n\n// \u5237\u65b0\nref.current.reload();\n\n// \u52a0\u8f7d\u66f4\u591a\nref.current.fetchMore();\n\n// \u91cd\u7f6e\u5230\u9ed8\u8ba4\u503c\nref.current.reset();\n\n// \u6e05\u7a7a\u9009\u4e2d\u9879\nref.current.clearSelected();\n",lang:"tsx"}),r.a.createElement("h3",{id:"columns-\u5217\u5b9a\u4e49"},r.a.createElement(l["AnchorLink"],{to:"#columns-\u5217\u5b9a\u4e49","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"Columns \u5217\u5b9a\u4e49"),r.a.createElement("table",null,r.a.createElement("thead",null,r.a.createElement("tr",null,r.a.createElement("th",null,"\u5c5e\u6027"),r.a.createElement("th",null,"\u63cf\u8ff0"),r.a.createElement("th",null,"\u7c7b\u578b"),r.a.createElement("th",null,"\u9ed8\u8ba4\u503c"))),r.a.createElement("tbody",null,r.a.createElement("tr",null,r.a.createElement("td",null,"title"),r.a.createElement("td",null,"\u4e0e antd \u4e2d\u57fa\u672c\u76f8\u540c\uff0c\u4f46\u662f\u652f\u6301\u901a\u8fc7\u4f20\u5165\u4e00\u4e2a\u65b9\u6cd5"),r.a.createElement("td",null,r.a.createElement("code",null,"ReactNode \\| ((config: ProColumnType<T>, type: ProTableTypes) => ReactNode)")),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"tooltip"),r.a.createElement("td",null,"\u4f1a\u5728 title \u4e4b\u540e\u5c55\u793a\u4e00\u4e2a icon\uff0chover \u4e4b\u540e\u63d0\u793a\u4e00\u4e9b\u4fe1\u606f"),r.a.createElement("td",null,"string"),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"renderText"),r.a.createElement("td",null,"\u7c7b\u4f3c table \u7684 render\uff0c\u4f46\u662f\u5fc5\u987b\u8fd4\u56de string\uff0c\u5982\u679c\u53ea\u662f\u5e0c\u671b\u8f6c\u5316\u679a\u4e3e\uff0c\u53ef\u4ee5\u4f7f\u7528 ",r.a.createElement(l["AnchorLink"],{to:"#valueEnum"},"valueEnum")),r.a.createElement("td",null,r.a.createElement("code",null,"(text: any,record: T,index: number,action: UseFetchDataAction<RequestData<T>>) => string")),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"render"),r.a.createElement("td",null,"\u7c7b\u4f3c table \u7684 render\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u53d8\u6210\u4e86 dom,\u589e\u52a0\u4e86\u7b2c\u56db\u4e2a\u53c2\u6570 action"),r.a.createElement("td",null,r.a.createElement("code",null,"(text: React.ReactNode,record: T,index: number,action: UseFetchDataAction<RequestData<T>>) => React.ReactNode \\| React.ReactNode[]")),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"ellipsis"),r.a.createElement("td",null,"\u662f\u5426\u81ea\u52a8\u7f29\u7565"),r.a.createElement("td",null,"boolean"),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"copyable"),r.a.createElement("td",null,"\u662f\u5426\u652f\u6301\u590d\u5236"),r.a.createElement("td",null,"boolean"),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"valueEnum"),r.a.createElement("td",null,"\u503c\u7684\u679a\u4e3e\uff0c\u4f1a\u81ea\u52a8\u8f6c\u5316\u628a\u503c\u5f53\u6210 key \u6765\u53d6\u51fa\u8981\u663e\u793a\u7684\u5185\u5bb9"),r.a.createElement("td",null,r.a.createElement(l["AnchorLink"],{to:"#valueenum"},"valueEnum")),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"valueType"),r.a.createElement("td",null,"\u503c\u7684\u7c7b\u578b"),r.a.createElement("td",null,r.a.createElement("code",null,"'money' \\| 'option' \\| 'date' \\| 'dateTime' \\| 'time' \\| 'text'\\| 'index' \\| 'indexBorder'")),r.a.createElement("td",null,"'text'")),r.a.createElement("tr",null,r.a.createElement("td",null,"hideInSearch"),r.a.createElement("td",null,"\u5728\u67e5\u8be2\u8868\u5355\u4e2d\u4e0d\u5c55\u793a\u6b64\u9879"),r.a.createElement("td",null,"boolean"),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"hideInTable"),r.a.createElement("td",null,"\u5728 Table \u4e2d\u4e0d\u5c55\u793a\u6b64\u5217"),r.a.createElement("td",null,"boolean"),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"hideInForm"),r.a.createElement("td",null,"\u5728 Form \u6a21\u5f0f\u4e0b \u4e2d\u4e0d\u5c55\u793a\u6b64\u5217"),r.a.createElement("td",null,"boolean"),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"filters"),r.a.createElement("td",null,"\u8868\u5934\u7684\u7b5b\u9009\u83dc\u5355\u9879\uff0c\u5f53\u503c\u4e3a true \u65f6\uff0c\u81ea\u52a8\u4f7f\u7528 valueEnum \u751f\u6210"),r.a.createElement("td",null,r.a.createElement("code",null,"boolean \\| object[]")),r.a.createElement("td",null,"false")),r.a.createElement("tr",null,r.a.createElement("td",null,"order"),r.a.createElement("td",null,"\u67e5\u8be2\u8868\u5355\u4e2d\u7684\u6743\u91cd\uff0c\u6743\u91cd\u5927\u6392\u5e8f\u9760\u524d"),r.a.createElement("td",null,"number"),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"renderFormItem"),r.a.createElement("td",null,"\u6e32\u67d3\u67e5\u8be2\u8868\u5355\u7684\u8f93\u5165\u7ec4\u4ef6"),r.a.createElement("td",null,r.a.createElement("code",null,"(item,props:","{","value,onChange","}",") => React.ReactNode")),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"fieldProps"),r.a.createElement("td",null,"\u67e5\u8be2\u8868\u5355\u7684 props\uff0c\u4f1a\u900f\u4f20\u7ed9\u8868\u5355\u9879"),r.a.createElement("td",null,r.a.createElement("code",null,"{"," [prop: string]: any ","}")),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"search"),r.a.createElement("td",null,"\u914d\u7f6e\u5217\u7684\u641c\u7d22\u76f8\u5173\uff0cfalse \u4e3a\u9690\u85cf"),r.a.createElement("td",null,r.a.createElement("code",null,"boolean \\| ","{"," transform: (value: any) => any ","}")),r.a.createElement("td",null,"true")),r.a.createElement("tr",null,r.a.createElement("td",null,"search.transform"),r.a.createElement("td",null,"\u8f6c\u5316\u503c\u7684 key, \u4e00\u822c\u7528\u4e8e\u4e8b\u4ef6\u533a\u95f4\u7684\u8f6c\u5316"),r.a.createElement("td",null,r.a.createElement("code",null,"(value: any) => any")),r.a.createElement("td",null,"-")))),r.a.createElement("h3",{id:"valuetype-\u503c\u7c7b\u578b"},r.a.createElement(l["AnchorLink"],{to:"#valuetype-\u503c\u7c7b\u578b","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"valueType \u503c\u7c7b\u578b"),r.a.createElement("p",null,"ProTable \u5c01\u88c5\u4e86\u4e00\u4e9b\u5e38\u7528\u7684\u503c\u7c7b\u578b\u6765\u51cf\u5c11\u91cd\u590d\u7684 ",r.a.createElement("code",null,"render")," \u64cd\u4f5c\uff0c\u914d\u7f6e\u4e00\u4e2a",r.a.createElement("code",null,"valueType")," \u5373\u53ef\u5c55\u793a\u683c\u5f0f\u5316\u54cd\u5e94\u7684\u6570\u636e\u3002"),r.a.createElement("p",null,"\u73b0\u5728\u652f\u6301\u7684\u503c\u5982\u4e0b"),r.a.createElement("table",null,r.a.createElement("thead",null,r.a.createElement("tr",null,r.a.createElement("th",null,"\u7c7b\u578b"),r.a.createElement("th",null,"\u63cf\u8ff0"),r.a.createElement("th",null,"\u793a\u4f8b"))),r.a.createElement("tbody",null,r.a.createElement("tr",null,r.a.createElement("td",null,"money"),r.a.createElement("td",null,"\u8f6c\u5316\u503c\u4e3a\u91d1\u989d"),r.a.createElement("td",null,"\xa510,000.26")),r.a.createElement("tr",null,r.a.createElement("td",null,"date"),r.a.createElement("td",null,"\u65e5\u671f"),r.a.createElement("td",null,"2019-11-16")),r.a.createElement("tr",null,r.a.createElement("td",null,"dateRange"),r.a.createElement("td",null,"\u65e5\u671f\u533a\u95f4"),r.a.createElement("td",null,"2019-11-16 2019-11-18")),r.a.createElement("tr",null,r.a.createElement("td",null,"dateTime"),r.a.createElement("td",null,"\u65e5\u671f\u548c\u65f6\u95f4"),r.a.createElement("td",null,"2019-11-16 12:50:00")),r.a.createElement("tr",null,r.a.createElement("td",null,"dateTimeRange"),r.a.createElement("td",null,"\u65e5\u671f\u548c\u65f6\u95f4\u533a\u95f4"),r.a.createElement("td",null,"2019-11-16 12:50:00 2019-11-18 12:50:00")),r.a.createElement("tr",null,r.a.createElement("td",null,"time"),r.a.createElement("td",null,"\u65f6\u95f4"),r.a.createElement("td",null,"12:50:00")),r.a.createElement("tr",null,r.a.createElement("td",null,"option"),r.a.createElement("td",null,"\u64cd\u4f5c\u9879\uff0c\u4f1a\u81ea\u52a8\u589e\u52a0 marginRight\uff0c\u53ea\u652f\u6301\u4e00\u4e2a\u6570\u7ec4,\u8868\u5355\u4e2d\u4f1a\u81ea\u52a8\u5ffd\u7565"),r.a.createElement("td",null,r.a.createElement("code",null,"[<a>\u64cd\u4f5ca</a>,<a>\u64cd\u4f5cb</a>]"))),r.a.createElement("tr",null,r.a.createElement("td",null,"text"),r.a.createElement("td",null,"\u9ed8\u8ba4\u503c\uff0c\u4e0d\u505a\u4efb\u4f55\u5904\u7406"),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"select"),r.a.createElement("td",null,"\u9009\u62e9"),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"textarea"),r.a.createElement("td",null,"\u4e0e text \u76f8\u540c\uff0c form \u8f6c\u5316\u65f6\u4f1a\u8f6c\u4e3a textarea \u7ec4\u4ef6"),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"index"),r.a.createElement("td",null,"\u5e8f\u53f7\u5217"),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"indexBorder"),r.a.createElement("td",null,"\u5e26 border \u7684\u5e8f\u53f7\u5217"),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"progress"),r.a.createElement("td",null,"\u8fdb\u5ea6\u6761"),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"digit"),r.a.createElement("td",null,r.a.createElement(l["Link"],{to:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat"},"\u683c\u5f0f\u5316"),"\u6570\u5b57\u5c55\u793a\uff0cform \u8f6c\u5316\u65f6\u4f1a\u8f6c\u4e3a inputNumber"),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"percent"),r.a.createElement("td",null,"\u767e\u5206\u6bd4"),r.a.createElement("td",null,"+1.12")),r.a.createElement("tr",null,r.a.createElement("td",null,"code"),r.a.createElement("td",null,"\u4ee3\u7801\u5757"),r.a.createElement("td",null,r.a.createElement("code",null,"const a = b"))),r.a.createElement("tr",null,r.a.createElement("td",null,"avatar"),r.a.createElement("td",null,"\u5934\u50cf"),r.a.createElement("td",null,"\u5c55\u793a\u4e00\u4e2a\u5934\u50cf")))),r.a.createElement("h4",{id:"\u4f20\u5165-function"},r.a.createElement(l["AnchorLink"],{to:"#\u4f20\u5165-function","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"\u4f20\u5165 function"),r.a.createElement("p",null,"\u53ea\u6709\u4e00\u4e2a\u503c\u5e76\u4e0d\u80fd\u8868\u73b0\u5f88\u591a\u7c7b\u578b\uff0c",r.a.createElement("code",null,"progress")," \u5c31\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u3002\u6240\u4ee5\u6211\u4eec\u652f\u6301\u4f20\u5165\u4e00\u4e2a function\u3002\u4f60\u53ef\u4ee5\u8fd9\u6837\u4f7f\u7528\uff1a"),r.a.createElement(i["a"],{code:"const columns = {\n  title: '\u8fdb\u5ea6',\n  key: 'progress',\n  dataIndex: 'progress',\n  valueType: (item: T) => ({\n    type: 'progress',\n    status: item.status !== 'error' ? 'active' : 'exception',\n  }),\n};\n",lang:"tsx"}),r.a.createElement("h4",{id:"\u652f\u6301\u7684\u8fd4\u56de\u503c"},r.a.createElement(l["AnchorLink"],{to:"#\u652f\u6301\u7684\u8fd4\u56de\u503c","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"\u652f\u6301\u7684\u8fd4\u56de\u503c"),r.a.createElement("h4",{id:"progress"},r.a.createElement(l["AnchorLink"],{to:"#progress","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"progress"),r.a.createElement(i["a"],{code:"return {\n  type: 'progress',\n  status: 'success' | 'exception' | 'normal' | 'active',\n};\n",lang:"js"}),r.a.createElement("h4",{id:"money"},r.a.createElement(l["AnchorLink"],{to:"#money","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"money"),r.a.createElement(i["a"],{code:"return { type: 'money', locale: 'en-Us' };\n",lang:"js"}),r.a.createElement("h4",{id:"percent"},r.a.createElement(l["AnchorLink"],{to:"#percent","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"percent"),r.a.createElement(i["a"],{code:"return { type: 'percent', showSymbol: true | false, precision: 2 };\n",lang:"js"}),r.a.createElement("p",null,"valueEnum \u9700\u8981\u4f20\u5165\u4e00\u4e2a\u679a\u4e3e\uff0cProTable \u4f1a\u81ea\u52a8\u6839\u636e\u503c\u83b7\u53d6\u54cd\u5e94\u7684\u679a\u4e3e\uff0c\u5e76\u4e14\u5728 from \u4e2d\u751f\u6210\u4e00\u4e2a\u4e0b\u62c9\u6846\u3002\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684\uff1a"),r.a.createElement(i["a"],{code:"const valueEnum = {\n  open: {\n    text: '\u672a\u89e3\u51b3',\n    status: 'Error',\n  },\n  closed: {\n    text: '\u5df2\u89e3\u51b3',\n    status: 'Success',\n  },\n};\n\n// \u4e5f\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u4e00\u4e2afunction\nconst valueEnum = (row) =>\n  row.isMe\n    ? {\n        open: {\n          text: '\u672a\u89e3\u51b3',\n          status: 'Error',\n        },\n        closed: {\n          text: '\u5df2\u89e3\u51b3',\n          status: 'Success',\n        },\n      }\n    : {\n        open: {\n          text: '\u7b49\u5f85\u89e3\u51b3',\n          status: 'Error',\n        },\n        closed: {\n          text: '\u5df2\u56de\u5e94',\n          status: 'Success',\n        },\n      };\n",lang:"ts"}),r.a.createElement("blockquote",null,r.a.createElement("p",null,"\u8fd9\u91cc\u503c\u5f97\u6ce8\u610f\u7684\u662f\u5728 from \u4e2d\u5e76\u6ca1\u6709 row\uff0c\u6240\u4ee5\u4f20\u5165\u4e86\u4e00\u4e2a null\uff0c\u4f60\u53ef\u4ee5\u6839\u636e\u8fd9\u4e2a\u6765\u5224\u65ad\u8981\u5728 from \u4e2d\u663e\u793a\u4ec0\u4e48\u9009\u9879\u3002")),r.a.createElement("h3",{id:"valueenum"},r.a.createElement(l["AnchorLink"],{to:"#valueenum","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"valueEnum"),r.a.createElement("p",null,"\u5f53\u524d\u5217\u503c\u7684\u679a\u4e3e"),r.a.createElement(i["a"],{code:"interface IValueEnum {\n  [key: string]:\n    | React.ReactNode\n    | {\n        text: React.ReactNode;\n        status: 'Success' | 'Error' | 'Processing' | 'Warning' | 'Default';\n      };\n}\n",lang:"typescript"}),r.a.createElement("h3",{id:"\u6279\u91cf\u64cd\u4f5c-1"},r.a.createElement(l["AnchorLink"],{to:"#\u6279\u91cf\u64cd\u4f5c-1","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"\u6279\u91cf\u64cd\u4f5c"),r.a.createElement("p",null,"\u4e0e antd \u76f8\u540c\uff0c\u6279\u91cf\u64cd\u4f5c\u9700\u8981\u8bbe\u7f6e ",r.a.createElement("code",null,"rowSelection")," \u6765\u5f00\u542f\uff0c\u4e0e antd \u4e0d\u540c\u7684\u662f\uff0cpro-table \u63d0\u4f9b\u4e86\u4e00\u4e2a alert \u7528\u4e8e\u627f\u8f7d\u4e00\u4e9b\u4fe1\u606f\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7 ",r.a.createElement("code",null,"tableAlertRender"),"\u548c ",r.a.createElement("code",null,"tableAlertOptionRender")," \u6765\u5bf9\u5b83\u8fdb\u884c\u81ea\u5b9a\u4e49\u3002\u8bbe\u7f6e\u6216\u8005\u8fd4\u56de false \u5373\u53ef\u5173\u95ed\u3002"),r.a.createElement("table",null,r.a.createElement("thead",null,r.a.createElement("tr",null,r.a.createElement("th",null,"\u5c5e\u6027"),r.a.createElement("th",null,"\u63cf\u8ff0"),r.a.createElement("th",null,"\u7c7b\u578b"),r.a.createElement("th",null,"\u9ed8\u8ba4\u503c"))),r.a.createElement("tbody",null,r.a.createElement("tr",null,r.a.createElement("td",null,"tableAlertRender"),r.a.createElement("td",null,"\u81ea\u5b9a\u4e49\u6279\u91cf\u64cd\u4f5c\u5de5\u5177\u680f\u5de6\u4fa7\u4fe1\u606f\u533a\u57df, false \u65f6\u4e0d\u663e\u793a"),r.a.createElement("td",null,"`(","{"," selectedRowKeys: (string"),r.a.createElement("td",null,"number)[], selectedRows: T[], onCleanSelected: ()=>void ","}",") => React.ReactNode) | false;`")),r.a.createElement("tr",null,r.a.createElement("td",null,"tableAlertOptionRender"),r.a.createElement("td",null,"\u81ea\u5b9a\u4e49\u6279\u91cf\u64cd\u4f5c\u5de5\u5177\u680f\u53f3\u4fa7\u9009\u9879\u533a\u57df, false \u65f6\u4e0d\u663e\u793a"),r.a.createElement("td",null,"`(","{"," selectedRowKeys: (string"),r.a.createElement("td",null,"number)[], selectedRows: T[], onCleanSelected: ()=>void ","}",") => React.ReactNode) | false;`")))),r.a.createElement("h3",{id:"\u641c\u7d22\u8868\u5355"},r.a.createElement(l["AnchorLink"],{to:"#\u641c\u7d22\u8868\u5355","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"\u641c\u7d22\u8868\u5355"),r.a.createElement("p",null,"ProTable \u4f1a\u6839\u636e\u5217\u6765\u751f\u6210\u4e00\u4e2a Form\uff0c\u7528\u4e8e\u7b5b\u9009\u5217\u8868\u6570\u636e\uff0c\u6700\u540e\u7684\u503c\u4f1a\u6839\u636e\u901a\u8fc7 ",r.a.createElement("code",null,"request")," \u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u8fd4\u56de\uff0c\u770b\u8d77\u6765\u5c31\u50cf\u3002"),r.a.createElement(i["a"],{code:"<ProTable request={(params,sort,filter)=>{ all params}}>\n",lang:"jsx"}),r.a.createElement("p",null,"\u6309\u7167\u89c4\u8303\uff0ctable \u7684\u8868\u5355\u4e0d\u9700\u8981\u4efb\u4f55\u7684\u5fc5\u9009\u53c2\u6570\uff0c\u6240\u6709\u70b9\u51fb\u641c\u7d22\u548c\u91cd\u7f6e\u90fd\u4f1a\u89e6\u53d1 ",r.a.createElement("code",null,"request"),"\u6765\u53d1\u8d77\u4e00\u6b21\u67e5\u8be2\u3002"),r.a.createElement("p",null,"Form \u7684\u5217\u662f\u6839\u636e ",r.a.createElement("code",null,"valueType")," \u6765\u751f\u6210\u4e0d\u540c\u7684\u7c7b\u578b\u3002"),r.a.createElement("blockquote",null,r.a.createElement("p",null,"valueType \u4e3a index indexBorder option \u548c\u6ca1\u6709 dataIndex \u548c key \u7684\u5217\u5c06\u4f1a\u5ffd\u7565\u3002")),r.a.createElement("table",null,r.a.createElement("thead",null,r.a.createElement("tr",null,r.a.createElement("th",null,"\u7c7b\u578b"),r.a.createElement("th",null,"\u5bf9\u5e94\u7684\u7ec4\u4ef6"))),r.a.createElement("tbody",null,r.a.createElement("tr",null,r.a.createElement("td",null,"text"),r.a.createElement("td",null,r.a.createElement(l["Link"],{to:"https://ant.design/components/input-cn/"},"Input"))),r.a.createElement("tr",null,r.a.createElement("td",null,"textarea"),r.a.createElement("td",null,r.a.createElement(l["Link"],{to:"https://ant.design/components/input-cn/#components-input-demo-textarea"},"Input.TextArea"))),r.a.createElement("tr",null,r.a.createElement("td",null,"date"),r.a.createElement("td",null,r.a.createElement(l["Link"],{to:"https://ant.design/components/date-picker-cn/"},"DatePicker"))),r.a.createElement("tr",null,r.a.createElement("td",null,"dateTime"),r.a.createElement("td",null,r.a.createElement(l["Link"],{to:"https://ant.design/components/date-picker-cn/#components-date-picker-demo-time"},"DatePicker"))),r.a.createElement("tr",null,r.a.createElement("td",null,"time"),r.a.createElement("td",null,r.a.createElement(l["Link"],{to:"https://ant.design/components/time-picker-cn/"},"TimePicker"))),r.a.createElement("tr",null,r.a.createElement("td",null,"dateTimeRange"),r.a.createElement("td",null,r.a.createElement(l["Link"],{to:"https://ant.design/components/time-picker-cn/#components-time-picker-demo-range-picker"},"RangePicker"))),r.a.createElement("tr",null,r.a.createElement("td",null,"dateRange"),r.a.createElement("td",null,r.a.createElement(l["Link"],{to:"https://ant.design/components/time-picker-cn/#components-time-picker-demo-range-picker"},"RangePicker"))),r.a.createElement("tr",null,r.a.createElement("td",null,"money"),r.a.createElement("td",null,r.a.createElement(l["Link"],{to:"https://ant.design/components/input-number-cn/"},"InputNumber"))),r.a.createElement("tr",null,r.a.createElement("td",null,"digit"),r.a.createElement("td",null,r.a.createElement(l["Link"],{to:"https://ant.design/components/input-number-cn/"},"InputNumber"))),r.a.createElement("tr",null,r.a.createElement("td",null,"option"),r.a.createElement("td",null,"\u4e0d\u5c55\u793a")),r.a.createElement("tr",null,r.a.createElement("td",null,"index"),r.a.createElement("td",null,"\u4e0d\u5c55\u793a")),r.a.createElement("tr",null,r.a.createElement("td",null,"progress"),r.a.createElement("td",null,"\u4e0d\u5c55\u793a")))),r.a.createElement("h3",{id:"listtoolbar"},r.a.createElement(l["AnchorLink"],{to:"#listtoolbar","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"ListToolBar"),r.a.createElement("p",null,"\u5217\u8868\u548c\u8868\u683c\u7684\u5de5\u5177\u680f\u3002"),r.a.createElement("h4",{id:"\u57fa\u672c\u4f7f\u7528"},r.a.createElement(l["AnchorLink"],{to:"#\u57fa\u672c\u4f7f\u7528","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"\u57fa\u672c\u4f7f\u7528")),r.a.createElement(o["default"],{sources:{_:{jsx:"import React from 'react';\nimport { ListToolBar } from '@ant-design/pro-table';\nimport { SettingOutlined, FullscreenOutlined } from '@ant-design/icons';\nimport { LightFilter, ProFormDatePicker } from '@ant-design/pro-form';\nimport { Button } from 'antd';\n\nexport default () => (\n  <div\n    style={{\n      width: '100%',\n      boxShadow: '0 0 3px #ccc',\n      overflow: 'auto',\n    }}\n  >\n    <ListToolBar\n      style={{\n        minWidth: 800,\n      }}\n      title=\"\u8fd9\u91cc\u662f\u6807\u9898\"\n      subTitle=\"\u8fd9\u91cc\u662f\u5b50\u6807\u9898\"\n      tooltip=\"\u8fd9\u662f\u4e00\u4e2a\u6bb5\u63cf\u8ff0\"\n      search={{\n        onSearch: value => {\n          alert(value);\n        },\n      }}\n      filter={\n        <LightFilter\n          style={{\n            marginTop: 16,\n          }}\n        >\n          <ProFormDatePicker name=\"startdate\" label=\"\u54cd\u5e94\u65e5\u671f\" />\n        </LightFilter>\n      }\n      actions={[\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            alert('add');\n          }}\n        >\n          \u6dfb\u52a0\n        </Button>,\n      ]}\n      settings={[\n        {\n          icon: <SettingOutlined />,\n          tooltip: '\u8bbe\u7f6e',\n        },\n        {\n          icon: <FullscreenOutlined />,\n          tooltip: '\u5168\u5c4f',\n        },\n      ]}\n    />\n  </div>\n);\n",tsx:"import React from 'react';\nimport { ListToolBar } from '@ant-design/pro-table';\nimport { SettingOutlined, FullscreenOutlined } from '@ant-design/icons';\nimport { LightFilter, ProFormDatePicker } from '@ant-design/pro-form';\nimport { Button } from 'antd';\n\nexport default () => (\n  <div\n    style={{\n      width: '100%',\n      boxShadow: '0 0 3px #ccc',\n      overflow: 'auto',\n    }}\n  >\n    <ListToolBar\n      style={{\n        minWidth: 800,\n      }}\n      title=\"\u8fd9\u91cc\u662f\u6807\u9898\"\n      subTitle=\"\u8fd9\u91cc\u662f\u5b50\u6807\u9898\"\n      tooltip=\"\u8fd9\u662f\u4e00\u4e2a\u6bb5\u63cf\u8ff0\"\n      search={{\n        onSearch: (value) => {\n          alert(value);\n        },\n      }}\n      filter={\n        <LightFilter style={{ marginTop: 16 }}>\n          <ProFormDatePicker name=\"startdate\" label=\"\u54cd\u5e94\u65e5\u671f\" />\n        </LightFilter>\n      }\n      actions={[\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            alert('add');\n          }}\n        >\n          \u6dfb\u52a0\n        </Button>,\n      ]}\n      settings={[\n        {\n          icon: <SettingOutlined />,\n          tooltip: '\u8bbe\u7f6e',\n        },\n        {\n          icon: <FullscreenOutlined />,\n          tooltip: '\u5168\u5c4f',\n        },\n      ]}\n    />\n  </div>\n);\n"}},dependencies:{react:{version:"16.13.1"},"react-dom":{version:">=16.9.0"},antd:{version:"4.6.6",css:"antd/dist/antd.css"},"@ant-design/icons":{version:"4.2.2"}},identifier:"src-table-20"},r.a.createElement(M,null)),r.a.createElement("div",{className:"markdown"},r.a.createElement("h4",{id:"\u65e0\u6807\u9898\u7684\u60c5\u51b5"},r.a.createElement(l["AnchorLink"],{to:"#\u65e0\u6807\u9898\u7684\u60c5\u51b5","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"\u65e0\u6807\u9898\u7684\u60c5\u51b5"),r.a.createElement("p",null,"\u6ca1\u6709\u6807\u9898\u7684\u60c5\u51b5\u4e0b\u641c\u7d22\u6846\u4f1a\u524d\u7f6e\u3002")),r.a.createElement(o["default"],{sources:{_:{jsx:"import React from 'react';\nimport { ListToolBar } from '@ant-design/pro-table';\nimport { LightFilter, ProFormDatePicker } from '@ant-design/pro-form';\nimport { Button } from 'antd';\n\nexport default () => (\n  <ListToolBar\n    style={{\n      boxShadow: '0 0 3px #ccc',\n    }}\n    search={{\n      onSearch: value => {\n        alert(value);\n      },\n    }}\n    filter={\n      <LightFilter\n        style={{\n          marginTop: 16,\n        }}\n      >\n        <ProFormDatePicker name=\"startdate\" label=\"\u54cd\u5e94\u65e5\u671f\" />\n      </LightFilter>\n    }\n    actions={[\n      <Button\n        type=\"primary\"\n        onClick={() => {\n          alert('add');\n        }}\n      >\n        \u6dfb\u52a0\n      </Button>,\n    ]}\n  />\n);\n",tsx:"import React from 'react';\nimport { ListToolBar } from '@ant-design/pro-table';\nimport { LightFilter, ProFormDatePicker } from '@ant-design/pro-form';\nimport { Button } from 'antd';\n\nexport default () => (\n  <ListToolBar\n    style={{\n      boxShadow: '0 0 3px #ccc',\n    }}\n    search={{\n      onSearch: (value) => {\n        alert(value);\n      },\n    }}\n    filter={\n      <LightFilter style={{ marginTop: 16 }}>\n        <ProFormDatePicker name=\"startdate\" label=\"\u54cd\u5e94\u65e5\u671f\" />\n      </LightFilter>\n    }\n    actions={[\n      <Button\n        type=\"primary\"\n        onClick={() => {\n          alert('add');\n        }}\n      >\n        \u6dfb\u52a0\n      </Button>,\n    ]}\n  />\n);\n"}},dependencies:{react:{version:"16.13.1"},"react-dom":{version:">=16.9.0"},antd:{version:"4.6.6",css:"antd/dist/antd.css"}},identifier:"src-table-21"},r.a.createElement(_,null)),r.a.createElement("div",{className:"markdown"},r.a.createElement("h4",{id:"\u53cc\u884c"},r.a.createElement(l["AnchorLink"],{to:"#\u53cc\u884c","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"\u53cc\u884c")),r.a.createElement(o["default"],{sources:{_:{jsx:"import React from 'react';\nimport { Button, Dropdown, Menu } from 'antd';\nimport { SettingOutlined, FullscreenOutlined, DownOutlined } from '@ant-design/icons';\nimport { ListToolBar } from '@ant-design/pro-table';\nimport { LightFilter, ProFormDatePicker } from '@ant-design/pro-form';\n\nexport default () => (\n  <div\n    style={{\n      boxShadow: '0 0 3px #ccc',\n    }}\n  >\n    <ListToolBar\n      multipleLine\n      title=\"\u4e24\u884c\u7684\u60c5\u51b5\"\n      search={{\n        placeholder: '\u8bf7\u8f93\u5165\u8ba2\u5355\u53f7',\n        onSearch: value => {\n          alert(value);\n        },\n      }}\n      filter={\n        <LightFilter\n          style={{\n            marginTop: 8,\n          }}\n        >\n          <ProFormDatePicker name=\"startdate\" label=\"\u54cd\u5e94\u65e5\u671f\" />\n        </LightFilter>\n      }\n      actions={[\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            alert('add');\n          }}\n        >\n          \u6dfb\u52a0\n        </Button>,\n        <Dropdown\n          overlay={\n            <Menu onClick={() => alert('menu click')}>\n              <Menu.Item key=\"1\">\u83dc\u5355</Menu.Item>\n              <Menu.Item key=\"2\">\u5217\u8868</Menu.Item>\n              <Menu.Item key=\"3\">\u8868\u5355</Menu.Item>\n            </Menu>\n          }\n        >\n          <Button>\n            \u79fb\u52a8\u81ea\n            <DownOutlined\n              style={{\n                marginLeft: 8,\n              }}\n            />\n          </Button>\n        </Dropdown>,\n      ]}\n      settings={[\n        {\n          icon: <SettingOutlined />,\n          tooltip: '\u8bbe\u7f6e',\n        },\n        {\n          icon: <FullscreenOutlined />,\n          tooltip: '\u5168\u5c4f',\n        },\n      ]}\n    />\n  </div>\n);\n",tsx:"import React from 'react';\nimport { Button, Dropdown, Menu } from 'antd';\nimport { SettingOutlined, FullscreenOutlined, DownOutlined } from '@ant-design/icons';\nimport { ListToolBar } from '@ant-design/pro-table';\nimport { LightFilter, ProFormDatePicker } from '@ant-design/pro-form';\n\nexport default () => (\n  <div\n    style={{\n      boxShadow: '0 0 3px #ccc',\n    }}\n  >\n    <ListToolBar\n      multipleLine\n      title=\"\u4e24\u884c\u7684\u60c5\u51b5\"\n      search={{\n        placeholder: '\u8bf7\u8f93\u5165\u8ba2\u5355\u53f7',\n        onSearch: (value) => {\n          alert(value);\n        },\n      }}\n      filter={\n        <LightFilter style={{ marginTop: 8 }}>\n          <ProFormDatePicker name=\"startdate\" label=\"\u54cd\u5e94\u65e5\u671f\" />\n        </LightFilter>\n      }\n      actions={[\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            alert('add');\n          }}\n        >\n          \u6dfb\u52a0\n        </Button>,\n        <Dropdown\n          overlay={\n            <Menu onClick={() => alert('menu click')}>\n              <Menu.Item key=\"1\">\u83dc\u5355</Menu.Item>\n              <Menu.Item key=\"2\">\u5217\u8868</Menu.Item>\n              <Menu.Item key=\"3\">\u8868\u5355</Menu.Item>\n            </Menu>\n          }\n        >\n          <Button>\n            \u79fb\u52a8\u81ea\n            <DownOutlined\n              style={{\n                marginLeft: 8,\n              }}\n            />\n          </Button>\n        </Dropdown>,\n      ]}\n      settings={[\n        {\n          icon: <SettingOutlined />,\n          tooltip: '\u8bbe\u7f6e',\n        },\n        {\n          icon: <FullscreenOutlined />,\n          tooltip: '\u5168\u5c4f',\n        },\n      ]}\n    />\n  </div>\n);\n"}},dependencies:{react:{version:"16.13.1"},"react-dom":{version:">=16.9.0"},antd:{version:"4.6.6",css:"antd/dist/antd.css"},"@ant-design/icons":{version:"4.2.2"}},identifier:"src-table-22"},r.a.createElement(L,null)),r.a.createElement("div",{className:"markdown"},r.a.createElement("h4",{id:"\u6807\u7b7e"},r.a.createElement(l["AnchorLink"],{to:"#\u6807\u7b7e","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"\u6807\u7b7e")),r.a.createElement(o["default"],{sources:{_:{jsx:"import React from 'react';\nimport { ListToolBar } from '@ant-design/pro-table';\nimport { LightFilter, ProFormDatePicker } from '@ant-design/pro-form';\n\nexport default () => (\n  <div\n    style={{\n      boxShadow: '0 0 3px #ccc',\n    }}\n  >\n    <ListToolBar\n      multipleLine\n      title=\"\u5e26\u6807\u7b7e\u7684\u60c5\u51b5\"\n      search={{\n        placeholder: '\u8bf7\u8f93\u5165\u8ba2\u5355\u53f7',\n        onSearch: value => {\n          alert(value);\n        },\n      }}\n      filter={\n        <LightFilter\n          style={{\n            marginTop: 8,\n          }}\n        >\n          <ProFormDatePicker name=\"startdate\" label=\"\u54cd\u5e94\u65e5\u671f\" />\n        </LightFilter>\n      }\n      tabs={{\n        items: [\n          {\n            key: 'tab1',\n            tab: '\u6807\u7b7e\u4e00',\n          },\n          {\n            key: 'tab2',\n            tab: '\u6807\u7b7e\u4e8c',\n          },\n        ],\n      }}\n    />\n  </div>\n);\n",tsx:"import React from 'react';\nimport { ListToolBar } from '@ant-design/pro-table';\nimport { LightFilter, ProFormDatePicker } from '@ant-design/pro-form';\n\nexport default () => (\n  <div\n    style={{\n      boxShadow: '0 0 3px #ccc',\n    }}\n  >\n    <ListToolBar\n      multipleLine\n      title=\"\u5e26\u6807\u7b7e\u7684\u60c5\u51b5\"\n      search={{\n        placeholder: '\u8bf7\u8f93\u5165\u8ba2\u5355\u53f7',\n        onSearch: (value) => {\n          alert(value);\n        },\n      }}\n      filter={\n        <LightFilter style={{ marginTop: 8 }}>\n          <ProFormDatePicker name=\"startdate\" label=\"\u54cd\u5e94\u65e5\u671f\" />\n        </LightFilter>\n      }\n      tabs={{\n        items: [\n          {\n            key: 'tab1',\n            tab: '\u6807\u7b7e\u4e00',\n          },\n          {\n            key: 'tab2',\n            tab: '\u6807\u7b7e\u4e8c',\n          },\n        ],\n      }}\n    />\n  </div>\n);\n"}},dependencies:{react:{version:"16.13.1"}},identifier:"src-table-23"},r.a.createElement(D,null)),r.a.createElement("div",{className:"markdown"},r.a.createElement("h4",{id:"\u83dc\u5355"},r.a.createElement(l["AnchorLink"],{to:"#\u83dc\u5355","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"\u83dc\u5355")),r.a.createElement(o["default"],{sources:{_:{jsx:"import React from 'react';\nimport { Badge } from 'antd';\nimport { ListToolBar } from '@ant-design/pro-table';\n\nexport default () => (\n  <div>\n    <ListToolBar\n      style={{\n        boxShadow: '0 0 3px #ccc',\n        marginBottom: 8,\n      }}\n      menu={{\n        type: 'dropdown',\n        items: [\n          {\n            label: '\u5168\u90e8\u4e8b\u9879',\n            key: 'all',\n          },\n          {\n            label: '\u5df2\u529e\u4e8b\u9879',\n            key: 'done',\n          },\n        ],\n        onChange: activeKey => {\n          console.log('activeKey', activeKey);\n        },\n      }}\n      search={{\n        placeholder: '\u8bf7\u8f93\u5165\u8ba2\u5355\u53f7',\n        onSearch: value => {\n          alert(value);\n        },\n      }}\n    />\n    <ListToolBar\n      style={{\n        boxShadow: '0 0 3px #ccc',\n      }}\n      menu={{\n        type: 'inline',\n        items: [\n          {\n            label: (\n              <span>\n                \u5168\u90e8\u4e8b\u9879\n                <Badge\n                  count={101}\n                  style={{\n                    marginTop: -4,\n                    marginLeft: 4,\n                    color: '#999',\n                    backgroundColor: '#eee',\n                  }}\n                />\n              </span>\n            ),\n            key: 'all',\n          },\n          {\n            label: (\n              <span>\n                \u4ee3\u529e\u4e8b\u9879\n                <Badge\n                  count={3}\n                  style={{\n                    marginTop: -4,\n                    marginLeft: 4,\n                    color: '#999',\n                    backgroundColor: '#eee',\n                  }}\n                />\n              </span>\n            ),\n            key: 'todo',\n          },\n        ],\n        onChange: activeKey => {\n          console.log('activeKey', activeKey);\n        },\n      }}\n      search={{\n        placeholder: '\u8bf7\u8f93\u5165\u8ba2\u5355\u53f7',\n        onSearch: value => {\n          alert(value);\n        },\n      }}\n    />\n  </div>\n);\n",tsx:"import React from 'react';\nimport { Badge } from 'antd';\nimport { ListToolBar } from '@ant-design/pro-table';\n\nexport default () => (\n  <div>\n    <ListToolBar\n      style={{\n        boxShadow: '0 0 3px #ccc',\n        marginBottom: 8,\n      }}\n      menu={{\n        type: 'dropdown',\n        items: [\n          {\n            label: '\u5168\u90e8\u4e8b\u9879',\n            key: 'all',\n          },\n          {\n            label: '\u5df2\u529e\u4e8b\u9879',\n            key: 'done',\n          },\n        ],\n        onChange: (activeKey) => {\n          console.log('activeKey', activeKey);\n        },\n      }}\n      search={{\n        placeholder: '\u8bf7\u8f93\u5165\u8ba2\u5355\u53f7',\n        onSearch: (value) => {\n          alert(value);\n        },\n      }}\n    />\n    <ListToolBar\n      style={{\n        boxShadow: '0 0 3px #ccc',\n      }}\n      menu={{\n        type: 'inline',\n        items: [\n          {\n            label: (\n              <span>\n                \u5168\u90e8\u4e8b\u9879\n                <Badge\n                  count={101}\n                  style={{\n                    marginTop: -4,\n                    marginLeft: 4,\n                    color: '#999',\n                    backgroundColor: '#eee',\n                  }}\n                />\n              </span>\n            ),\n            key: 'all',\n          },\n          {\n            label: (\n              <span>\n                \u4ee3\u529e\u4e8b\u9879\n                <Badge\n                  count={3}\n                  style={{\n                    marginTop: -4,\n                    marginLeft: 4,\n                    color: '#999',\n                    backgroundColor: '#eee',\n                  }}\n                />\n              </span>\n            ),\n            key: 'todo',\n          },\n        ],\n        onChange: (activeKey) => {\n          console.log('activeKey', activeKey);\n        },\n      }}\n      search={{\n        placeholder: '\u8bf7\u8f93\u5165\u8ba2\u5355\u53f7',\n        onSearch: (value) => {\n          alert(value);\n        },\n      }}\n    />\n  </div>\n);\n"}},dependencies:{react:{version:"16.13.1"},"react-dom":{version:">=16.9.0"},antd:{version:"4.6.6",css:"antd/dist/antd.css"}},identifier:"src-table-24"},r.a.createElement(R,null)),r.a.createElement("div",{className:"markdown"},r.a.createElement("h4",{id:"\u548c-table-\u4e00\u8d77\u4f7f\u7528"},r.a.createElement(l["AnchorLink"],{to:"#\u548c-table-\u4e00\u8d77\u4f7f\u7528","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"\u548c Table \u4e00\u8d77\u4f7f\u7528")),r.a.createElement(o["default"],{sources:{_:{jsx:"import React from 'react';\nimport { Button, Tag, Divider } from 'antd';\nimport ProTable, { ListToolBar } from '@ant-design/pro-table';\n\nconst columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n    render: text => <a>{text}</a>,\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age',\n    key: 'age',\n  },\n  {\n    title: 'Address',\n    dataIndex: 'address',\n    key: 'address',\n  },\n  {\n    title: 'Tags',\n    key: 'tags',\n    dataIndex: 'tags',\n    render: (_, record) => (\n      <span>\n        {record.tags.map(tag => {\n          let color = tag.length > 5 ? 'geekblue' : 'green';\n\n          if (tag === 'loser') {\n            color = 'volcano';\n          }\n\n          return (\n            <Tag color={color} key={tag}>\n              {tag.toUpperCase()}\n            </Tag>\n          );\n        })}\n      </span>\n    ),\n  },\n  {\n    title: 'Action',\n    key: 'action',\n    render: (text, record) => (\n      <span>\n        <a>Invite {record.name}</a>\n        <Divider type=\"vertical\" />\n        <a>Delete</a>\n      </span>\n    ),\n  },\n];\nconst data = [\n  {\n    key: '1',\n    name: 'John Brown',\n    age: 32,\n    address: 'New York No. 1 Lake Park',\n    tags: ['nice', 'developer'],\n  },\n  {\n    key: '2',\n    name: 'Jim Green',\n    age: 42,\n    address: 'London No. 1 Lake Park',\n    tags: ['loser'],\n  },\n  {\n    key: '3',\n    name: 'Joe Black',\n    age: 32,\n    address: 'Sidney No. 1 Lake Park',\n    tags: ['cool', 'teacher'],\n  },\n];\nexport default () => (\n  <div\n    style={{\n      border: '1px solid #eee',\n    }}\n  >\n    <ListToolBar\n      title=\"\u8fd9\u91cc\u662f\u6807\u9898\"\n      subTitle=\"\u8fd9\u91cc\u662f\u5b50\u6807\u9898\"\n      tooltip=\"\u8fd9\u662f\u4e00\u4e2a\u6bb5\u63cf\u8ff0\"\n      search={{\n        placeholder: '\u8bf7\u8f93\u5165\u8ba2\u5355\u53f7',\n        onSearch: value => {\n          alert(value);\n        },\n      }}\n      actions={[<Button type=\"primary\">\u6279\u91cf\u5bfc\u5165</Button>]}\n    />\n    <ProTable\n      rowSelection={{\n        onChange: () => {},\n      }}\n      columns={columns}\n      options={false}\n      search={false}\n      dataSource={data}\n      pagination={false}\n    />\n  </div>\n);\n",tsx:"import React from 'react';\nimport { Button, Tag, Divider } from 'antd';\nimport ProTable, { ProColumns, ListToolBar } from '@ant-design/pro-table';\n\ninterface ColumnItem {\n  key: string;\n  name: string;\n  age: number;\n  address: string;\n  tags: string[];\n}\n\nconst columns: ProColumns<ColumnItem>[] = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n    render: (text) => <a>{text}</a>,\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age',\n    key: 'age',\n  },\n  {\n    title: 'Address',\n    dataIndex: 'address',\n    key: 'address',\n  },\n  {\n    title: 'Tags',\n    key: 'tags',\n    dataIndex: 'tags',\n    render: (_, record) => (\n      <span>\n        {record.tags.map((tag) => {\n          let color = tag.length > 5 ? 'geekblue' : 'green';\n          if (tag === 'loser') {\n            color = 'volcano';\n          }\n          return (\n            <Tag color={color} key={tag}>\n              {tag.toUpperCase()}\n            </Tag>\n          );\n        })}\n      </span>\n    ),\n  },\n  {\n    title: 'Action',\n    key: 'action',\n    render: (text, record) => (\n      <span>\n        <a>Invite {record.name}</a>\n        <Divider type=\"vertical\" />\n        <a>Delete</a>\n      </span>\n    ),\n  },\n];\nconst data = [\n  {\n    key: '1',\n    name: 'John Brown',\n    age: 32,\n    address: 'New York No. 1 Lake Park',\n    tags: ['nice', 'developer'],\n  },\n  {\n    key: '2',\n    name: 'Jim Green',\n    age: 42,\n    address: 'London No. 1 Lake Park',\n    tags: ['loser'],\n  },\n  {\n    key: '3',\n    name: 'Joe Black',\n    age: 32,\n    address: 'Sidney No. 1 Lake Park',\n    tags: ['cool', 'teacher'],\n  },\n];\n\nexport default () => (\n  <div style={{ border: '1px solid #eee' }}>\n    <ListToolBar\n      title=\"\u8fd9\u91cc\u662f\u6807\u9898\"\n      subTitle=\"\u8fd9\u91cc\u662f\u5b50\u6807\u9898\"\n      tooltip=\"\u8fd9\u662f\u4e00\u4e2a\u6bb5\u63cf\u8ff0\"\n      search={{\n        placeholder: '\u8bf7\u8f93\u5165\u8ba2\u5355\u53f7',\n        onSearch: (value) => {\n          alert(value);\n        },\n      }}\n      actions={[<Button type=\"primary\">\u6279\u91cf\u5bfc\u5165</Button>]}\n    />\n    <ProTable\n      rowSelection={{ onChange: () => {} }}\n      columns={columns}\n      options={false}\n      search={false}\n      dataSource={data}\n      pagination={false}\n    />\n  </div>\n);\n"}},dependencies:{react:{version:"16.13.1"},"react-dom":{version:">=16.9.0"},antd:{version:"4.6.6",css:"antd/dist/antd.css"}},identifier:"src-table-25"},r.a.createElement(B,null)),r.a.createElement("div",{className:"markdown"},r.a.createElement("h4",{id:"\u548c-list-\u4e00\u8d77\u4f7f\u7528"},r.a.createElement(l["AnchorLink"],{to:"#\u548c-list-\u4e00\u8d77\u4f7f\u7528","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"\u548c List \u4e00\u8d77\u4f7f\u7528")),r.a.createElement(o["default"],{sources:{_:{jsx:"import React from 'react';\nimport { Button, List, Typography } from 'antd';\nimport { ListToolBar } from '@ant-design/pro-table';\n\nconst data = [\n  'Racing car sprays burning fuel into crowd.',\n  'Japanese princess to wed commoner.',\n  'Australian walks 100km after outback crash.',\n  'Man charged over missing wedding girl.',\n  'Los Angeles battles huge wildfires.',\n];\nconst toolbar = (\n  <ListToolBar\n    style={{\n      margin: '-16px -24px',\n    }}\n    title=\"\u8fd9\u91cc\u662f\u6807\u9898\"\n    subTitle=\"\u8fd9\u91cc\u662f\u5b50\u6807\u9898\"\n    tooltip=\"\u8fd9\u662f\u4e00\u4e2a\u6bb5\u63cf\u8ff0\"\n    search={{\n      placeholder: '\u8bf7\u8f93\u5165\u8ba2\u5355\u53f7',\n      onSearch: value => {\n        alert(value);\n      },\n    }}\n    actions={[<Button type=\"primary\">\u6279\u91cf\u5bfc\u5165</Button>]}\n  />\n);\nexport default () => (\n  <List\n    header={toolbar}\n    footer={<div>Footer</div>}\n    bordered\n    dataSource={data}\n    renderItem={item => (\n      <List.Item>\n        <Typography.Text mark>[ITEM]</Typography.Text> {item}\n      </List.Item>\n    )}\n  />\n);\n",tsx:"import React from 'react';\nimport { Button, List, Typography } from 'antd';\nimport { ListToolBar } from '@ant-design/pro-table';\n\nconst data = [\n  'Racing car sprays burning fuel into crowd.',\n  'Japanese princess to wed commoner.',\n  'Australian walks 100km after outback crash.',\n  'Man charged over missing wedding girl.',\n  'Los Angeles battles huge wildfires.',\n];\nconst toolbar = (\n  <ListToolBar\n    style={{\n      margin: '-16px -24px',\n    }}\n    title=\"\u8fd9\u91cc\u662f\u6807\u9898\"\n    subTitle=\"\u8fd9\u91cc\u662f\u5b50\u6807\u9898\"\n    tooltip=\"\u8fd9\u662f\u4e00\u4e2a\u6bb5\u63cf\u8ff0\"\n    search={{\n      placeholder: '\u8bf7\u8f93\u5165\u8ba2\u5355\u53f7',\n      onSearch: (value) => {\n        alert(value);\n      },\n    }}\n    actions={[<Button type=\"primary\">\u6279\u91cf\u5bfc\u5165</Button>]}\n  />\n);\n\nexport default () => (\n  <List\n    header={toolbar}\n    footer={<div>Footer</div>}\n    bordered\n    dataSource={data}\n    renderItem={(item) => (\n      <List.Item>\n        <Typography.Text mark>[ITEM]</Typography.Text> {item}\n      </List.Item>\n    )}\n  />\n);\n"}},dependencies:{react:{version:"16.13.1"},"react-dom":{version:">=16.9.0"},antd:{version:"4.6.6",css:"antd/dist/antd.css"}},identifier:"src-table-26"},r.a.createElement(A,null)),r.a.createElement("div",{className:"markdown"},r.a.createElement("h4",{id:"\u81ea\u5b9a\u4e49-title"},r.a.createElement(l["AnchorLink"],{to:"#\u81ea\u5b9a\u4e49-title","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"\u81ea\u5b9a\u4e49 title")),r.a.createElement(o["default"],{sources:{_:{jsx:"import React from 'react';\nimport { Button, Badge } from 'antd';\nimport { ListToolBar } from '@ant-design/pro-table';\n\nexport default () => (\n  <ListToolBar\n    style={{\n      boxShadow: '0 0 3px #ccc',\n    }}\n    title={\n      <span>\n        <strong>\u6211\u662f\u81ea\u5b9a\u4e49\u5185\u5bb9</strong>\n        <Badge\n          count={109}\n          style={{\n            backgroundColor: '#52c41a',\n            marginTop: -3,\n            marginLeft: 2,\n          }}\n        />\n      </span>\n    }\n    actions={[<Button type=\"primary\">\u6279\u91cf\u5bfc\u5165</Button>]}\n  />\n);\n",tsx:"import React from 'react';\nimport { Button, Badge } from 'antd';\nimport { ListToolBar } from '@ant-design/pro-table';\n\nexport default () => (\n  <ListToolBar\n    style={{\n      boxShadow: '0 0 3px #ccc',\n    }}\n    title={\n      <span>\n        <strong>\u6211\u662f\u81ea\u5b9a\u4e49\u5185\u5bb9</strong>\n        <Badge count={109} style={{ backgroundColor: '#52c41a', marginTop: -3, marginLeft: 2 }} />\n      </span>\n    }\n    actions={[<Button type=\"primary\">\u6279\u91cf\u5bfc\u5165</Button>]}\n  />\n);\n"}},dependencies:{react:{version:"16.13.1"},"react-dom":{version:">=16.9.0"},antd:{version:"4.6.6",css:"antd/dist/antd.css"}},identifier:"src-table-27"},r.a.createElement(C,null)),r.a.createElement("div",{className:"markdown"},r.a.createElement("h4",{id:"api-1"},r.a.createElement(l["AnchorLink"],{to:"#api-1","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"API"),r.a.createElement("h4",{id:"listtoolbar-1"},r.a.createElement(l["AnchorLink"],{to:"#listtoolbar-1","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"ListToolBar"),r.a.createElement("table",null,r.a.createElement("thead",null,r.a.createElement("tr",null,r.a.createElement("th",null,"\u53c2\u6570"),r.a.createElement("th",null,"\u8bf4\u660e"),r.a.createElement("th",null,"\u7c7b\u578b"),r.a.createElement("th",null,"\u9ed8\u8ba4\u503c"))),r.a.createElement("tbody",null,r.a.createElement("tr",null,r.a.createElement("td",null,"title"),r.a.createElement("td",null,"\u6807\u9898"),r.a.createElement("td",null,"ReactNode | string"),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"subTitle"),r.a.createElement("td",null,"\u5b50\u6807\u9898"),r.a.createElement("td",null,"ReactNode | string"),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"description"),r.a.createElement("td",null,"\u63cf\u8ff0"),r.a.createElement("td",null,"ReactNode | string"),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"search"),r.a.createElement("td",null,"\u67e5\u8be2\u533a"),r.a.createElement("td",null,"ReactNode | SearchProps"),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"actions"),r.a.createElement("td",null,"\u64cd\u4f5c\u533a"),r.a.createElement("td",null,"ReactNode[]"),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"settings"),r.a.createElement("td",null,"\u8bbe\u7f6e\u533a"),r.a.createElement("td",null,"(ReactNode | Setting)[]"),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"filter"),r.a.createElement("td",null,"\u8fc7\u6ee4\u533a\uff0c\u901a\u5e38\u914d\u5408 ",r.a.createElement("code",null,"LightFilter")," \u4f7f\u7528"),r.a.createElement("td",null,"ReactNode"),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"multipleLine"),r.a.createElement("td",null,"\u662f\u5426\u591a\u884c\u5c55\u793a"),r.a.createElement("td",null,"boolean"),r.a.createElement("td",null,"false")),r.a.createElement("tr",null,r.a.createElement("td",null,"menu"),r.a.createElement("td",null,"\u83dc\u5355\u914d\u7f6e"),r.a.createElement("td",null,"ListToolBarMenu"),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"tabs"),r.a.createElement("td",null,"\u6807\u7b7e\u9875\u914d\u7f6e\uff0c\u4ec5\u5f53 ",r.a.createElement("code",null,"multipleLine")," \u4e3a true \u65f6\u6709\u6548"),r.a.createElement("td",null,"ListToolBarTabs"),r.a.createElement("td",null,"-")))),r.a.createElement("p",null,"SearchProps \u4e3a antd \u7684 ",r.a.createElement(l["Link"],{to:"https://ant.design/components/input-cn/#Input.Search"},"Input.Search")," \u7684\u5c5e\u6027\u3002"),r.a.createElement("h4",{id:"setting"},r.a.createElement(l["AnchorLink"],{to:"#setting","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"Setting"),r.a.createElement("table",null,r.a.createElement("thead",null,r.a.createElement("tr",null,r.a.createElement("th",null,"\u53c2\u6570"),r.a.createElement("th",null,"\u8bf4\u660e"),r.a.createElement("th",null,"\u7c7b\u578b"),r.a.createElement("th",null,"\u9ed8\u8ba4\u503c"))),r.a.createElement("tbody",null,r.a.createElement("tr",null,r.a.createElement("td",null,"icon"),r.a.createElement("td",null,"\u56fe\u6807"),r.a.createElement("td",null,"ReactNode"),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"tooltip"),r.a.createElement("td",null,"tooltip \u63cf\u8ff0"),r.a.createElement("td",null,"string"),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"key"),r.a.createElement("td",null,"\u64cd\u4f5c\u552f\u4e00\u6807\u8bc6"),r.a.createElement("td",null,"string"),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"onClick"),r.a.createElement("td",null,"\u8bbe\u7f6e\u88ab\u89e6\u53d1"),r.a.createElement("td",null,"function(key: string)"),r.a.createElement("td",null,"-")))),r.a.createElement("h4",{id:"listtoolbarmenu"},r.a.createElement(l["AnchorLink"],{to:"#listtoolbarmenu","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"ListToolBarMenu"),r.a.createElement("table",null,r.a.createElement("thead",null,r.a.createElement("tr",null,r.a.createElement("th",null,"\u53c2\u6570"),r.a.createElement("th",null,"\u8bf4\u660e"),r.a.createElement("th",null,"\u7c7b\u578b"),r.a.createElement("th",null,"\u9ed8\u8ba4\u503c"))),r.a.createElement("tbody",null,r.a.createElement("tr",null,r.a.createElement("td",null,"type"),r.a.createElement("td",null,"\u7c7b\u578b"),r.a.createElement("td",null,"'inline' | 'dropdown'"),r.a.createElement("td",null,"'dropdown'")),r.a.createElement("tr",null,r.a.createElement("td",null,"activeKey"),r.a.createElement("td",null,"\u5f53\u524d\u503c"),r.a.createElement("td",null,"string"),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"items"),r.a.createElement("td",null,"\u83dc\u5355\u9879"),r.a.createElement("td",null,"{"," key: string; label: ReactNode ","}","[]"),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"onChange"),r.a.createElement("td",null,"\u5207\u6362\u83dc\u5355\u7684\u56de\u8c03"),r.a.createElement("td",null,"Function(activeKey) ","{","}"),r.a.createElement("td",null,"-")))),r.a.createElement("h4",{id:"listtoolbartabs"},r.a.createElement(l["AnchorLink"],{to:"#listtoolbartabs","aria-hidden":"true"},r.a.createElement("span",{className:["icon","icon-link"]})),"ListToolBarTabs"),r.a.createElement("table",null,r.a.createElement("thead",null,r.a.createElement("tr",null,r.a.createElement("th",null,"\u53c2\u6570"),r.a.createElement("th",null,"\u8bf4\u660e"),r.a.createElement("th",null,"\u7c7b\u578b"),r.a.createElement("th",null,"\u9ed8\u8ba4\u503c"))),r.a.createElement("tbody",null,r.a.createElement("tr",null,r.a.createElement("td",null,"activeKey"),r.a.createElement("td",null,"\u5f53\u524d\u9009\u4e2d\u9879"),r.a.createElement("td",null,"string"),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"items"),r.a.createElement("td",null,"\u83dc\u5355\u9879"),r.a.createElement("td",null,"{"," key: string; tab: ReactNode ","}","[]"),r.a.createElement("td",null,"-")),r.a.createElement("tr",null,r.a.createElement("td",null,"onChange"),r.a.createElement("td",null,"\u7c7b\u578b"),r.a.createElement("td",null,"'inline' | 'dropdown'"),r.a.createElement("td",null,"'dropdown'")))))))}},"TN5+":function(n,e,t){"use strict";t("0Owb"),t("q1tI"),t("kERV")},kERV:function(n,e,t){},mlvz:function(n,e,t){},tP8H:function(n,e,t){"use strict";t("tJVT"),t("q1tI"),t("OGKa")}}]);